diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_ACT1.C bstone/3D_ACT1.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_ACT1.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/3D_ACT1.C	2015-06-27 14:35:54.621243400 +0300
@@ -67,20 +67,42 @@
 {SPR_STAT_24,bo_pistol},			// PISTOL							SPR4V
 {SPR_STAT_25,block},					// Statue
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_STAT_26,bo_clip},				// Charge Unit
+#else
 {SPR_STAT_31,bo_clip},				// Charge Unit
+#endif
 
 {SPR_STAT_27,bo_burst_rifle},		// Auto-Burst Rifle
 {SPR_STAT_28,bo_ion_cannon},		// Particle Charged ION
 {SPR_STAT_29,bo_firstaid},			// First Aid
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_STAT_30,bo_fullheal},
+
+{SPR_STAT_31,bo_clip2},				// Big Charge pack/clip
+#else
 {SPR_VSPIKE8,block},					// Static VSPIKE
 
 {SPR_STAT_26,bo_clip2},				// Big Charge pack/clip
+#endif
 
 {SPR_STAT_32,bo_red_key},			// Red Key  						SPR5V
 {SPR_STAT_33,bo_yellow_key},		// Yellow Key
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_STAT_34,bo_green_key},			// Green Key
+#else
 {SPR_STAT_34,bo_bfg_cannon},	   // BFG Cannon
+#endif
 {SPR_STAT_35,bo_blue_key},			// Blue Key
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_STAT_36,bo_gold_key},			// Gold Key
+#else
 {SPR_STAT_36},							// OPEN
+#endif
 {SPR_STAT_37,block},					// Office Desk
 {SPR_STAT_38,block},	 				// Office Chair
 {SPR_STAT_39,block},					// Security Desk
@@ -94,7 +116,12 @@
 {SPR_STAT_46,bo_grenade},			// Grande Launcher
 {SPR_STAT_47},							// Video Game Machine
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{0},
+#else
 {SPR_VPOST8,block},					// Static VPOST
+#endif
 
 //				-- VARIOUS --
 
@@ -114,7 +141,12 @@
 {SPR_AIR_VENT,bo_bloodvent},		// 58 Blood air vent
 {SPR_AIR_VENT,bo_watervent},		// 59 Water air vent
 {SPR_GRATE},							// 60 Floor Grate
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_STEAM_PIPE,block},						// 61 Steam Pipe
+#else
 {SPR_STEAM_PIPE},						// 61 Steam Pipe
+#endif
 
 {SPR_STAT_48,bo_money_bag},		// 62 money bag
 {SPR_STAT_49,bo_loot},				// 63 loot
@@ -170,6 +202,8 @@
 {SPR_STAT_78,bo_coin5},				// Concession Machine Money
 {SPR_STAT_79},							// Auto-Charge Pistol
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 {SPR_DOORBOMB,bo_plasma_detonator},			// Plasma Detonator		
 {SPR_RUBBLE},								// Door Rubble
 {SPR_AUTOMAPPER,bo_automapper1},		// Auto Mapper Bonus #1
@@ -180,6 +214,7 @@
 {SPR_DEAD_RENT},						// Dead AOG: Rent A Cop
 {SPR_DEAD_PRO},						// Dead AOG: Pro Guard
 {SPR_DEAD_SWAT},						// Dead AOG: Swat Guad
+#endif
 
 
 {-1}										// terminator
@@ -200,6 +235,8 @@
 	laststatobj = &statobjlist[0];
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // FindStatic()
 //
@@ -219,6 +256,7 @@
 
    return(NULL);
 }
+#endif
 
 //---------------------------------------------------------------------------
 // FindEmptyStatic()
@@ -237,7 +275,12 @@
 	{
 		if (spot==laststatobj)
 		{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			if (spot == &player)
+#else
 			if (spot == &statobjlist[MAXSTATS])
+#endif
          	return(NULL);
 			laststatobj++;						// space at end
 			break;
@@ -318,9 +361,24 @@
 
 		case	bo_red_key:
 		case	bo_yellow_key:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case	bo_green_key:
+#endif
 		case	bo_blue_key:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case	bo_gold_key:
+#else
 		case  bo_plasma_detonator:
+#endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			KeyStatObjs[NumKeys] = spot;
+			NumKeys++;
+#else
 			TravelTable[tilex][tiley] |= TT_KEYS;
+#endif
 
 		case	bo_gold1:
 		case	bo_gold2:
@@ -333,11 +391,17 @@
 		case	bo_fullheal:
 		case	bo_firstaid:
 		case	bo_clip:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case	bo_clip2:
+#endif
 		case	bo_burst_rifle:
 		case	bo_ion_cannon:
 		case 	bo_grenade:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case 	bo_bfg_cannon:		
+#endif
 		case  bo_pistol:
 		case  bo_chicken:
 		case  bo_ham:
@@ -347,7 +411,10 @@
 		case  bo_candybar:
 		case  bo_coin:
 		case  bo_coin5:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case  bo_automapper1:
+#endif
 			spot->flags = FL_BONUS;
 			spot->itemnumber = statinfo[type].type;
 		break;
@@ -387,6 +454,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // FindReservedStatic()
 //
@@ -468,6 +537,7 @@
 
 	return(spot);
 }
+#endif // VERSIONS RESTORATION
 
 //--------------------------------------------------------------------------
 // PlaceReservedItemNearTile()
@@ -476,6 +546,8 @@
 								{ 0,-1},        { 0, 1},
 								{ 1,-1},{ 1, 0},{ 1, 1}};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void PlaceReservedItemNearTile(int itemtype, int tilex, int tiley)
 {
 	char loop;
@@ -496,6 +568,7 @@
 
 	UseReservedStatic(itemtype,tilex,tiley);
 }
+#endif
 
 
 
@@ -582,6 +655,8 @@
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 //
 //--------------------------------------------------------------------------
@@ -643,6 +718,7 @@
 			}
 		}
 }
+#endif
 
 
 
@@ -770,7 +846,10 @@
 	lastdoorobj->lock = lock;
 	lastdoorobj->type = type;
 	lastdoorobj->action = dr_closed;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	lastdoorobj->flags = DR_BLASTABLE;	// JIM - Do something with this! jdebug
+#endif
 
 	if (vertical)
 	{
@@ -892,8 +971,11 @@
 void OpenDoor (int door)
 {
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
   	if (doorobjlist[door].action == dr_jammed)
    	return;												
+#endif
 
 	if (doorobjlist[door].action == dr_open)
 		doorobjlist[door].ticcount = 0;			// reset open time
@@ -918,8 +1000,11 @@
 	int	tilex,tiley,area;
 	objtype *check;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
   	if (doorobjlist[door].action == dr_jammed)
    	return;											
+#endif
 
 //
 // don't close on anything solid
@@ -1013,7 +1098,15 @@
 char far od_locked[]="\r\r   DOOR PERMANENTLY\r        LOCKED.\r^XX";
 char far od_reddenied[]="\r\r      RED LEVEL\r    ACCESS DENIED!\r^XX";
 char far od_yellowdenied[]="\r\r     YELLOW LEVEL\r    ACCESS DENIED!\r^XX";
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far od_greendenied[]="\r\r     GREEN LEVEL\r    ACCESS DENIED!\r^XX";
+#endif
 char far od_bluedenied[]="\r\r      BLUE LEVEL\r    ACCESS DENIED!\r^XX";
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far od_golddenied[]="\r\r      GOLD LEVEL\r    ACCESS DENIED!\r^XX";
+#endif
 char far od_granted[]="\r\r    ACCESS GRANTED\r    DOOR UNLOCKED.\r^XX";
 char far od_operating[]="\r\r    OPERATING DOOR.\r^XX";
 
@@ -1081,10 +1174,23 @@
 						DISPLAY_TIMED_MSG(od_yellowdenied,MP_DOOR_OPERATE,MT_GENERAL);
 					break;
 
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					case kt_green:
+						DISPLAY_TIMED_MSG(od_greendenied,MP_DOOR_OPERATE,MT_GENERAL);
+					break;
+#endif
 					case kt_blue:
 						DISPLAY_TIMED_MSG(od_bluedenied,MP_DOOR_OPERATE,MT_GENERAL);
 					break;
 
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					case kt_gold:
+						DISPLAY_TIMED_MSG(od_golddenied,MP_DOOR_OPERATE,MT_GENERAL);
+					break;
+#endif
+
 					default:
 						DISPLAY_TIMED_MSG(od_locked,MP_DOOR_OPERATE,MT_GENERAL);
 					break;
@@ -1118,6 +1224,8 @@
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 // BlockDoorOpen()
 //--------------------------------------------------------------------------
@@ -1268,6 +1376,7 @@
    else
    	DropPlasmaDetonator();
 }
+#endif // VERSIONS RESTORATION
 
 
 //===========================================================================
@@ -2006,9 +2115,12 @@
 // OperateConcession()
 //--------------------------------------------------------------------------
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern char far food_msg1[];
 extern char far bevs_msg1[];
 extern void writeTokenStr(char far *str);
+#endif
 
 char far OutOrder[] 	= {"\r\r   FOOD UNIT MACHINE\r    IS OUT OF ORDER.^XX"};
 
@@ -2083,13 +2195,19 @@
 				switch (ci->type)
 				{
 					case CT_FOOD:
+						/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 						writeTokenStr(food_msg1);
+#endif
 						DISPLAY_TIMED_MSG(food_msg1,MP_CONCESSION_OPERATE,MT_GENERAL);
 						HealSelf(10);
 					break;
 
 					case CT_BEVS:
+						/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 						writeTokenStr(bevs_msg1);
+#endif
 						DISPLAY_TIMED_MSG(bevs_msg1,MP_CONCESSION_OPERATE,MT_GENERAL);
 						HealSelf(7);
 					break;
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_ACT2.C bstone/3D_ACT2.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_ACT2.C	1994-08-03 18:44:04.000000000 +0300
+++ bstone/3D_ACT2.C	2015-06-27 14:35:54.625222000 +0300
@@ -36,10 +36,16 @@
 #define ALIENSPEED 		(SPDPATROL)
 #define ALIENAMMOINIT   (30+(US_RndT()%60))
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// The numbers commented after GR_DAMAGE (PS sources) are a hint
+#ifdef GAMEVER_RESTORATION_AOG
+#define GR_DAMAGE       		   (20+(US_RndT() & 0x3f))
+#else
 #define GR_DAMAGE       		   (40+(US_RndT() & 0x7f))		// 20 & 3f
 #define BFG_DAMAGE					(GR_DAMAGE<<1)				// Hit Point damage cause by BFG
 #define PLASMA_DETONATOR_DAMAGE  (500)
 #define DETONATOR_FLASH_RATE		(20)
+#endif
 #define EXPLODE_DAMAGE				(20)		// 5
 #define OOZE_ANIMATE_SPEED			(20)
 
@@ -56,7 +62,10 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char detonators_spawned = 0;
+#endif
 
 /*
 =============================================================================
@@ -67,11 +76,162 @@
 */
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Some AOG vs PS differences
 int	far starthitpoints[4][NUMHITENEMIES] =
 	 //
 	 // BABY MODE
 	 //
 {
+#ifdef GAMEVER_RESTORATION_AOG
+	 {6,		// Rent-A-Cop
+	  6,		// Hang Terrot
+	  6,		// general scientist
+	  28,		// pod alien
+	  18,		// Electro-Alien
+	  1,		// Electro-Sphere
+	  43,		// ProGuard
+	  20,		// Genetic Guard
+	  27,		// Mutant Human Type 1
+	  27,		// Mutant Human Type 2
+	  1,		// Large Canister Alien - CONTAINER HP
+	  37,		// Large Can-Alien - ALIEN HP
+	  1,		// Small Canister Alien - CONTAINER HP
+	  30,		// Small Can-Alien - ALIEN HP
+	  1,		// Gurney Mutant - Waiting HP
+	  33,		// Gurney Mutant - Spawned HP
+	  47,		// Liquid Alien -
+	  88,		// Swat Guards
+	  50,		// Goldstern
+	  17,		// Volatile Material Transport
+	  20,		// Floating Bomb
+	  150,	// Vital Defence Obj  - DON'T CHANGE
+	  800,		// spider_mutant
+	  850,		// breather_beast
+	  900,		// cyborg_warror
+	  950,		// reptilian_warrior
+	  1000,		// acid_dragon
+	  1050,		// mech_guardian
+	  1,		// Crate 1
+	  1,		// Crate 2
+	  1,		// Crate 3
+	  1,		// Pod egg
+	  },
+
+	 //
+	 // DON'T HURT ME MODE
+	 //
+
+	 {9,		// Rent-A-Cop
+	  9,		// Hang Terrot
+	  9,		// general scientist
+	  60,		// pod alien
+	  37,		// Electro-Alien
+	  1,		// Electro-Sphere
+	  63,		// ProGuard
+	  60,		// Genetic Guard
+	  50,		// Mutant Human Type 1
+	  50,		// Mutant Human Type 2
+	  1,		// Large Canister Alien - CONTAINER HP
+	  75,		// Large Can-Alien - ALIEN HP
+	  1,		// Small Canister Alien - CONTAINER HP
+	  60,		// Small Can-Alien - ALIEN HP
+	  1,		// Gurney Mutant - Waiting HP
+	  37,		// Gurney Mutant - Spawned HP
+	  66,		// Liquid Alien -
+	  112,	// SWAT Guards
+	  63,	// Goldstern
+	  25,		// Volatile Material Transport
+	  40,		// Floating Bomb
+	  175,	// Vital Defence Obj  - DON'T CHANGE
+	  1000,	// spider_mutant
+	  1250,	// breather_beast
+	  1500,	// cyborg_warror
+	  1750,	// reptilian_warrior
+	  2000,	// acid_dragon
+	  2500,	// mech_guardian
+	  1,		// Crate 1
+	  1,		// Crate 2
+	  1,		// Crate 3
+	  1,		// Pod egg
+	  },
+
+	 //
+	 // BRING 'EM ON MODE
+	 //
+
+	 {25,		// Rent-A-Cop
+	  23,		// Hang Terrot
+	  23,		// general scientist
+	  160,	// pod alien
+	  112,	// Electro-Alien
+	  1,		// Electro-Sphere
+	  150,	// ProGuard
+	  180,	// Genetic Guard
+	  155,	// Mutant Human Type 1
+	  155,	// Mutant Human Type 2
+	  1,		// Large Canister Alien - CONTAINER HP
+	  225,	// Large Can-Alien - ALIEN HP
+	  1,		// Small Canister Alien - CONTAINER HP
+	  180,	// Small Can-Alien - ALIEN HP
+	  1,		// Gurney Mutant - Waiting HP
+	  150,	// Gurney Mutant - Spawned HP
+	  163,	// Liquid Alien -
+	  325,	// SWAT Guards
+	  125,	// Goldstern
+	  63,		// Volatile Material Transport
+	  60,		// Floating Bomb
+	  375,	// Vital Defence Obj  - DON'T CHANGE
+	  2000,	// spider_mutant
+	  2500,	// breather_beast
+	  3000,	// cyborg_warror
+	  3500,	// reptilian_warrior
+	  4000,	// acid_dragon
+	  5000,	// mech_guardian
+	  1,		// Crate 1
+	  1,		// Crate 2
+	  1,		// Crate 3
+	  1,		// Pod egg
+	  },
+
+	 //
+	 // DEATH INCARNATE MODE
+	 //
+
+	 {38,		// Rent-A-Cop
+	  28,		// Hang Terrot
+	  28,		// general scientist
+	  210,	// pod alien
+	  150,	// Electro-Alien
+	  1,		// Electro-Sphere
+	  175,	// ProGuard
+	  240,	// Genetic Guard
+	  210,	// Mutant Human Type 1
+	  210,	// Mutant Human Type 2
+	  1,		// Large Canister Alien - CONTAINER HP
+	  300,	// Large Can-Alien - ALIEN HP
+	  1,		// Small Canister Alien - CONTAINER HP
+	  240,	// Small Can-Alien - ALIEN HP
+	  1,		// Gurney Mutant - Waiting HP
+	  200,	// Gurney Mutant - Spawned HP
+	  210,	// Liquid Alien -
+	  425,	// SWAT Gaurds
+	  188,	// Goldstern
+	  75,		// Volatile Material Transport
+	  85,		// Floating Bomb
+	  450,	// Vital Defence Obj - DON'T CHANGE
+	  3000,	// spider_mutant
+	  3500,	// breather_beast
+	  4000,	// cyborg_warror
+	  4500,	// reptilian_warrior
+	  5000,	// acid_dragon
+	  6000,	// mech_guardian
+	  1,		// Crate 1
+	  1,		// Crate 2
+	  1,		// Crate 3
+	  1,		// Pod egg
+	  }
+#else // VERSIONS RESTORATION
 	 {4,		// Rent-A-Cop
 	  4,		// Hang Terrot
 	  4,		// general scientist
@@ -251,18 +411,33 @@
 	  1,		// morphing_reptilian_warrior
 	  1,		// morphing_Mutant Human Type 2
 	  }
+#endif // VERSIONS RESTORATION
 };
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Some AOG vs PS differences
+#ifdef GAMEVER_RESTORATION_AOG
+unsigned far BossShotShapes[] = {SPR_BOSS1_PROJ1,0,0,0,SPR_BOSS5_PROJ1};
+#else
 unsigned far BossShotShapes[] = {SPR_BOSS1_PROJ1,0,0,0,SPR_BOSS5_PROJ1,0,0,SPR_BOSS10_SPIT1};
-unsigned far BossShapes[] = {SPR_BOSS1_W1,SPR_BOSS2_W1,SPR_BOSS3_W1,SPR_BOSS4_W1,SPR_BOSS5_W1,SPR_BOSS6_W1,SPR_BOSS7_W1,SPR_BOSS8_W1,SPR_BOSS9_W1,SPR_BOSS10_W1};
+#endif
+unsigned far BossShapes[] = /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{SPR_BOSS1_W1,SPR_BOSS2_W1,SPR_BOSS3_W1,SPR_BOSS4_W1,SPR_BOSS5_W1,SPR_BOSS6_W1};
+#else
+{SPR_BOSS1_W1,SPR_BOSS2_W1,SPR_BOSS3_W1,SPR_BOSS4_W1,SPR_BOSS5_W1,SPR_BOSS6_W1,SPR_BOSS7_W1,SPR_BOSS8_W1,SPR_BOSS9_W1,SPR_BOSS10_W1};
 unsigned far MorphShapes[] = {SPR_BOSS1_MORPH1, SPR_BOSS4_MORPH1, SPR_MUTHUM2_MORPH1};
 unsigned far MorphClass[] = {spider_mutantobj,reptilian_warriorobj,mutant_human2obj};
 unsigned far MorphEndShapes[] = {SPR_BOSS1_W1,SPR_BOSS4_W1,SPR_MUTHUM2_W1};
 char far MorphSounds[] = {SCANHALTSND,GGUARDHALTSND,DOGBOYHALTSND};
 unsigned bars_connected = 0;
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 unsigned SpecialSpawnFlags[] = {FL2_DROP_RKEY,FL2_DROP_YKEY,FL2_DROP_BKEY,
 									     FL2_DROP_BFG,FL2_DROP_ION,FL2_DROP_DETONATOR};
+#endif
 
 
 void	T_Path (objtype *ob);
@@ -391,12 +566,22 @@
 //
 statetype s_ofs_stand	= {false,SPR_GENETIC_W1 - SPR_GENETIC_W1, 0, T_OfsThink,NULL,&s_ofs_stand};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+statetype s_ofs_chase1 	= {false,SPR_GENETIC_W1 - SPR_GENETIC_W1, 10, T_Action,T_SmartThink,&s_ofs_chase1s};
+statetype s_ofs_chase1s	= {false,SPR_GENETIC_W1 - SPR_GENETIC_W1, 5,NULL,NULL,&s_ofs_chase2};
+statetype s_ofs_chase2 	= {false,SPR_GENETIC_W2 - SPR_GENETIC_W1, 8, T_Action,NULL,&s_ofs_chase3};
+statetype s_ofs_chase3 	= {false,SPR_GENETIC_W3 - SPR_GENETIC_W1, 10, T_Action,T_SmartThink,&s_ofs_chase3s};
+statetype s_ofs_chase3s	= {false,SPR_GENETIC_W3 - SPR_GENETIC_W1, 5, NULL,NULL,&s_ofs_chase4};
+statetype s_ofs_chase4 	= {false,SPR_GENETIC_W4 - SPR_GENETIC_W1, 8, T_Action,NULL,&s_ofs_chase1};
+#else
 statetype s_ofs_chase1 	= {false,SPR_GENETIC_W1 - SPR_GENETIC_W1, 10, T_Chase,NULL,&s_ofs_chase1s};
 statetype s_ofs_chase1s	= {false,SPR_GENETIC_W1 - SPR_GENETIC_W1, 5,NULL,NULL,&s_ofs_chase2};
 statetype s_ofs_chase2 	= {false,SPR_GENETIC_W2 - SPR_GENETIC_W1, 8, T_Chase,NULL,&s_ofs_chase3};
 statetype s_ofs_chase3 	= {false,SPR_GENETIC_W3 - SPR_GENETIC_W1, 10, T_Chase,NULL,&s_ofs_chase3s};
 statetype s_ofs_chase3s	= {false,SPR_GENETIC_W3 - SPR_GENETIC_W1, 5, NULL,NULL,&s_ofs_chase4};
 statetype s_ofs_chase4 	= {false,SPR_GENETIC_W4 - SPR_GENETIC_W1, 8, T_Chase,NULL,&s_ofs_chase1};
+#endif
 
 statetype s_ofs_pain		= {false,SPR_GENETIC_OUCH - SPR_GENETIC_W1, 15, NULL,NULL,&s_ofs_chase1};
 
@@ -482,34 +667,77 @@
 
 	switch (which)
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       case en_final_boss2:
          new->lighting = NO_SHADING;
+#endif
 		case en_spider_mutant:
 		case en_breather_beast:
 		case en_cyborg_warrior:
 		case en_reptilian_warrior:
 		case en_acid_dragon:
 		case en_mech_guardian:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       case en_final_boss1:
       case en_final_boss3:
       case en_final_boss4:
+#endif
 			new->temp1 = BossShapes[which-en_spider_mutant];
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE|FL2_BFGSHOT_SOLID;
+#endif
+		break;
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case en_goldmorphshot:
+			InitAnim(new,SPR_ELEC_ARC1,US_RndT()%3,2,at_CYCLE,ad_FWD,(US_RndT()&7)+35);
+			new->flags &= ~FL_SHOOTABLE;
+			new->flags |= FL_BARRIER|FL_FAKE_STATIC;
+			new->ammo = 1;
+			new->temp2 = ScanBarrierTable(tilex,tiley);
+         new->lighting = LAMP_ON_SHADING;
+		break;
+
+		case en_post_barrier:
+			InitAnim(new,SPR_ELEC_POST1,US_RndT()%3,2,at_CYCLE,ad_FWD,(US_RndT()&7)+35);
+
+			new->flags &= ~FL_SHOOTABLE;
+			new->flags |= FL_BARRIER|FL_FAKE_STATIC;
+			new->ammo = 1;
+			new->temp2 = ScanBarrierTable(tilex,tiley);
+         new->lighting = LAMP_ON_SHADING;
 		break;
 
+#endif
 		case en_green_ooze:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			InitAnim(new,SPR_GREEN_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,35+(US_RndT()&7));
+#else
 			InitSmartSpeedAnim(new,SPR_GREEN_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,5+(US_RndT()&2));
+#endif
 			new->flags &= ~(FL_SHOOTABLE|FL_SOLID);
 		break;
 
 		case en_black_ooze:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			InitAnim(new,SPR_BLACK_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,35+(US_RndT()&7));
+#else
 			InitSmartSpeedAnim(new,SPR_BLACK_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,5+(US_RndT()&2));
+#endif
 			new->flags &= ~(FL_SHOOTABLE|FL_SOLID);
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case en_green2_ooze:
 			InitSmartSpeedAnim(new,SPR_GREEN2_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,5+(US_RndT()&2));
 			new->flags &= ~(FL_SHOOTABLE|FL_SOLID);
@@ -519,6 +747,7 @@
 			InitSmartSpeedAnim(new,SPR_BLACK2_OOZE1,US_RndT()%3,2,at_CYCLE,ad_FWD,5+(US_RndT()&2));
 			new->flags &= ~(FL_SHOOTABLE|FL_SOLID);
 		break;
+#endif
 
 
 		case en_crate1:
@@ -531,11 +760,18 @@
 			//			 this object is a "blastable" or not.
 		break;
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case en_vital:
+			NewState(new,&s_vital);
+		break;
+#else
 		case en_rotating_cube:
 			InitSmartSpeedAnim(new,SPR_CUBE1,0,9,at_CYCLE,ad_FWD,5);
 			new->flags2 = FL2_BFGSHOT_SOLID;
          new->lighting = LAMP_ON_SHADING;
 		break;
+#endif
 
 		case en_ventdrip:
 			if (dir_which == en_bloodvent)
@@ -548,6 +784,8 @@
 			new->flags &= ~(FL_SHOOTABLE|FL_SOLID);
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case en_plasma_detonator:
 		case en_plasma_detonator_reserve:
 			NewState(new,&s_ofs_random);
@@ -557,6 +795,7 @@
          if (detonators_spawned++)
          	ACT2_ERROR(TOO_MANY_DETONATORS);
       break;
+#endif
 
 		case en_flickerlight:
 			new->temp1 = SPR_DECO_ARC_1;
@@ -593,7 +832,10 @@
 			if (new->temp2==0xff*60)
 				new->flags &= ~FL_SHOOTABLE;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE|FL_FAKE_STATIC;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_pod:
@@ -601,7 +843,10 @@
 			new->speed = SPDPATROL;
 			new->ammo = -1;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_genetic_guard:
@@ -609,7 +854,10 @@
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_mutant_human1:
@@ -617,7 +865,10 @@
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_mutant_human2:
@@ -625,21 +876,32 @@
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_scan_wait_alien:
 			new->temp1 = SPR_SCAN_ALIEN_READY;
 			new->flags |= FL_STATIONARY|FL_NO_SLIDE|FL_FAKE_STATIC;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_lcan_wait_alien:
 			new->temp1 = SPR_LCAN_ALIEN_READY;
 			new->flags |= FL_STATIONARY|FL_NO_SLIDE|FL_FAKE_STATIC;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case en_morphing_spider_mutant:
 		case en_morphing_reptilian_warrior:
 		case en_morphing_mutanthuman2:
@@ -658,6 +920,7 @@
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
 			NewState(new,&s_ofs_random);
       break;
+#endif
 
 		case en_gurney_wait:
 			if (scan_value == 0xffff)
@@ -666,7 +929,10 @@
 				new->temp3 = (scan_value & 0xff)*60;
 			new->temp1 = SPR_GURNEY_MUT_READY;
 			new->flags |= FL_STATIONARY|FL_PROJ_TRANSPARENT|FL_NO_SLIDE|FL_FAKE_STATIC;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_lcan_alien:						// Large Canister Alien - Out of can.
@@ -674,7 +940,10 @@
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_scan_alien:						// Small Canister Alien - Out of can.
@@ -682,7 +951,10 @@
 			new->speed = ALIENSPEED;
 			new->ammo = ALIENAMMOINIT;
 			new->flags |= FL_PROJ_TRANSPARENT;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_gurney:							// Gurney Mutant - Off of gurney.
@@ -690,14 +962,30 @@
 			new->speed = ALIENSPEED;
 			new->flags |= FL_PROJ_TRANSPARENT|FL_NO_SLIDE;
 			new->ammo = ALIENAMMOINIT;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	map = mapsegs[0]+farmapylookup[tiley]+tilex;
+	if (*map == AMBUSHTILE)
+	{
+		tilemap[tilex][tiley] = 0;
+		*map = new->areanumber = GetAreaNumber(tilex, tiley);
+		new->flags |= FL_AMBUSH;
+	}
+
+	new->hitpoints = starthitpoints[gamestate.difficulty][which];
+#else
 	CheckForSpecialTile(new,tilex,tiley);
 
 	if (which < SPACER1_OBJ)
 		new->hitpoints = starthitpoints[gamestate.difficulty][which];
+#endif
 }
 
 
@@ -721,6 +1009,8 @@
 
 	switch (obj->obclass)
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case plasma_detonator_reserveobj:
 		break;
 
@@ -750,6 +1040,7 @@
             	obj->temp1 = SPR_DOORBOMB;
          }
       break;
+#endif
 
 		case grenadeobj:
 		{
@@ -773,20 +1064,34 @@
 
 				if (!(obj->temp1 = grenade_shapes[dist]))
 				{
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					obj->obclass = explosionobj;
+					InitSmartSpeedAnim(obj,SPR_GRENADE_EXPLODE1,0,4,at_ONCE,ad_FWD,30+(US_RndT()&7));
+					A_DeathScream(obj);
+#else
 					obj->obclass = gr_explosionobj;
 					InitSmartSpeedAnim(obj,SPR_GRENADE_EXPLODE1,0,4,at_ONCE,ad_FWD,3+(US_RndT()&3));
+#endif
 				}
 			}
 
 			if (obj->obclass != grenadeobj)
 			{
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				ExplodeRadius(obj,50+(US_RndT()&0x3f),false);
+#else
 				ExplodeRadius(obj,50+(US_RndT()&0x7f),false);
 				A_DeathScream(obj);
+#endif
 			}
 		}
 		break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case bfg_shotobj:
 		{
 			T_Projectile(obj);
@@ -813,8 +1118,31 @@
 			}
 		}
 		break;
+#endif
 
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	// (RESTORATION) Vital in AOG
+	case vitalobj:
+		// Decrement timer...
+		//
+			if (tics < obj->temp2)
+			{
+				obj->temp2 -= tics;
+				break;
+			}
+
+			ofs = US_RndT()%3;
+			oldofs = obj->temp1-SPR_VITAL_DEAD_1;
+			if (ofs == oldofs)
+				ofs = (ofs+1) % 3;
+			obj->temp2 = US_RndT()%10+5;
+			obj->temp1 = ofs+SPR_VITAL_DEAD_1;
+		break;
+
+#endif
+
 	case ventdripobj:
 		// Decrement timer...
 		//
@@ -859,10 +1187,17 @@
 		break;
 
 		case electrosphereobj:
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			ofs = oldofs = obj->temp1 - SPR_ELECTRO_SPHERE_ROAM1;
+			while (ofs == oldofs)
+				ofs = US_RndT()%3;
+#else
 			oldofs = obj->temp1 - SPR_ELECTRO_SPHERE_ROAM1;
 			ofs = US_RndT()&3;
 			if (ofs == oldofs)
          	ofs =	(ofs+1) & 3;
+#endif
 			obj->temp1 = SPR_ELECTRO_SPHERE_ROAM1+ofs;
 		break;
 
@@ -896,10 +1231,17 @@
 				break;
 			}
 			PlaySoundLocActor(PODHATCHSND,obj);
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			InitAnim(obj,SPR_POD_HATCH1,0,2,at_ONCE,ad_FWD,75);
+#else
 			InitSmartSpeedAnim(obj,SPR_POD_HATCH1,0,2,at_ONCE,ad_FWD,7);
+#endif
 		break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case morphing_spider_mutantobj:
 		case morphing_reptilian_warriorobj:
 		case morphing_mutanthuman2obj:
@@ -926,6 +1268,7 @@
          obj->flags &= ~FL_SHOOTABLE;
 			InitSmartSpeedAnim(obj,obj->temp1,0,8,at_ONCE,ad_FWD,2);
       break;
+#endif // VERSIONS RESTORATION
 
 
 		case crate1obj:
@@ -941,7 +1284,10 @@
 			break;
 
 		case spider_mutantshotobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       case final_boss4shotobj:
+#endif
 		case acid_dragonshotobj:
 			obj->temp1 = BossShotShapes[obj->obclass-spider_mutantshotobj]+(US_RndT()%3);
 			T_Projectile(obj);
@@ -1232,8 +1578,31 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Borrowing T_Action and T_SmartThink for the following functions,
+// based on a few prototypes
+#ifdef GAMEVER_RESTORATION_AOG
+void T_Action (objtype *ob)
+{
+	T_Chase(ob);
+}
 
+void T_SmartThink (objtype *ob)
+{
+#if (GAME_VERSION != SHAREWARE_VERSION)
+	switch (ob->obclass)
+	{
+	case cyborg_warriorobj:
+	case mech_guardianobj:
+		PlaySoundLocActor(ROBOT_SERVOSND,ob);
+	break;
+	}
+#endif
+}
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // FindObj() - This function will search the objlist for an object
 //					of a given type at a given tilex & tiley coords.
@@ -1344,6 +1713,7 @@
 
    return(NULL);
 }
+#endif // VERSIONS RSETORATION
 
 
 
@@ -1394,11 +1764,21 @@
 	*(ofs_anim_t *)&obj->temp3 = AnimStruct;
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void InitAnim(objtype *obj, unsigned ShapeNum, unsigned char StartOfs, unsigned char MaxOfs, animtype_t AnimType, animdir_t AnimDir, unsigned Delay)
+#else
 void InitAnim(objtype *obj, unsigned ShapeNum, unsigned char StartOfs, unsigned char MaxOfs, animtype_t AnimType, animdir_t AnimDir, unsigned Delay, unsigned WaitDelay)
+#endif
 {
 	InitSmartAnimStruct(obj,ShapeNum,StartOfs,MaxOfs,AnimType,AnimDir);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	obj->s_tilex = obj->s_tiley = Delay;
+#else
 	obj->s_tilex = WaitDelay;
 	obj->s_tiley = Delay;
+#endif
 	NewState(obj,&s_ofs_smart_anim);
 }
 
@@ -1425,11 +1805,15 @@
 //
 //
 
-//statetype s_ofs_smart_anim	= {false,0, 1, NULL,T_SmartThought,&s_ofs_smart_anim};
-//statetype s_ofs_smart_anim2	= {false,0, 5, NULL,T_SmartThought,&s_ofs_smart_anim2};
-
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Re-enable commented out code for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+statetype s_ofs_smart_anim	= {false,0, 1, NULL,T_SmartThought,&s_ofs_smart_anim};
+statetype s_ofs_smart_anim2	= {false,0, 5, NULL,T_SmartThought,&s_ofs_smart_anim2};
+#else
 statetype s_ofs_smart_anim	   = {false, 0, 1, T_SmartThought, NULL, &s_ofs_smart_anim};
 statetype s_ofs_smart_anim2	= {false, 0, 1, T_SmartThought, NULL, &s_ofs_smart_anim2};
+#endif
 
 //
 // Functions
@@ -1448,8 +1832,11 @@
 	{
 			case green_oozeobj:
 			case black_oozeobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case green2_oozeobj:
 			case black2_oozeobj:
+#endif
 			{
 				if (((US_RndT()&7) == 7) && ((ofs_anim_t *)&obj->temp3)->curframe == 2 && obj->tilex == player->tilex && obj->tiley == player->tiley)
 					TakeDamage(4,obj);
@@ -1457,8 +1844,11 @@
 			break;
 
 			case arc_barrierobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
             if (BARRIER_STATE(obj) == bt_DISABLED)
             	return;
+#endif
 
 				if (US_RndT() < 0x10)
 				{
@@ -1479,7 +1869,12 @@
 				// Check for Turn offs
 				//
 				if ((unsigned)obj->temp2 != 0xffff)
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					if (!GAMEVER_RESTORATION_BARRIER_PTR((obj->temp2>>4)&0xF,obj->temp2&0xF)->on)
+#else
 					if (!gamestate.barrier_table[obj->temp2].on)
+#endif
 						ToggleBarrier(obj);
 			break;
 
@@ -1503,6 +1898,8 @@
 		{
 			switch (obj->obclass)
 			{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				case morphing_spider_mutantobj:
 				case morphing_reptilian_warriorobj:
 				case morphing_mutanthuman2obj:
@@ -1515,6 +1912,7 @@
 					obj->flags |= FL_PROJ_TRANSPARENT|FL_SHOOTABLE;
 					NewState (obj,&s_ofs_chase1);
          	break;
+#endif
 
 				case podeggobj:
 					obj->flags |= FL_SHOOTABLE;
@@ -1524,11 +1922,14 @@
 					obj->hitpoints = starthitpoints[gamestate.difficulty][en_pod];
 				break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
            	case rotating_cubeobj:
 				   DISPLAY_TIMED_MSG(pd_floorunlocked, MP_FLOOR_UNLOCKED,MT_GENERAL);
                SD_PlaySound(ROLL_SCORESND);
                obj->lighting = 0;
             break;
+#endif
 
 				case inertobj:
 				case fixup_inertobj:
@@ -1537,6 +1938,8 @@
 				case gurney_waitobj:
 				break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				case gold_morphobj:
              	//
              	// Game completed!
@@ -1544,6 +1947,7 @@
                playstate = ex_victorious;
 					obj->state = NULL;				// Mark to be removed.
             break;
+#endif
 
 
 				case volatiletransportobj:
@@ -1563,6 +1967,8 @@
 		{
 			switch (obj->obclass)
 			{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				case doorexplodeobj:
             	  if (!obj->temp2)
                  {
@@ -1606,6 +2012,7 @@
                     obj->temp2 = 1;
                  }
             break;
+#endif // VERSIONS RESTORATION
 
 
 				case gurney_waitobj:
@@ -1832,303 +2239,65 @@
 					if (ANIM_INFO(obj)->curframe > 0)
 						AdvanceAnimREV(obj);
 					else
-					{
-						ANIM_INFO(obj)->animdir = ad_FWD;
-//						ANIM_INFO(obj)->animdelay = 1;
-						Done = true;
-					}
-					break;
-			}
-			break; /* REBOUND */
-
-#endif
-
-
-	}
-
-	return(Done);
-}
-
-
-//--------------------------------
-// AdvanceAnimFWD()
-//--------------------------------
-void AdvanceAnimFWD(objtype *obj)
-{
-	ANIM_INFO(obj)->curframe++; 		 // INC frames
-
-	obj->temp1++;
-	obj->s_tilex = obj->s_tiley;
-}
-
-
-#if 0
-
-//--------------------------------
-// AdvanceAnimREV()
-//--------------------------------
-void AdvanceAnimREV(objtype *obj)
-{
-	ANIM_INFO(obj)->curframe--; 		 // Dec frames
-	obj->temp1--;
-
-//	ANIM_INFO(obj)->animdelay = ANIM_INFO(obj)->maxdelay;
-}
-
-#endif
-
-
-
-//==========================================================================
-//
-//								WALL SWITCH ACTIVATION
-//
-//==========================================================================
-
-//--------------------------------------------------------------------------
-// ActivateWallSwitch() - Updates the Map, Actors, and Tables for wall switchs
-//--------------------------------------------------------------------------
-void ActivateWallSwitch(unsigned iconnum, short x, short y)
-{
-	#define UPDATE_OTHER_SWITCHES			1
-
-	unsigned states[] = {OFF_SWITCH,ON_SWITCH};
-	unsigned	mapx,mapy,newwall;
-	unsigned icon,num;
-   unsigned char *tile;
-   unsigned *actor;
-   barrier_type *barrier;
-
-
-	if ((iconnum & 0xFF00) == 0xF800)
-   {
-
-		//
-      // Update tile map & Display switch'd message
-      //
-      num = iconnum & 0xff;
-
-
-      barrier = &gamestate.barrier_table[num];
-      barrier->on ^= 1;
-      newwall = tilemap[x][y] = states[barrier->on];
-
-      DisplaySwitchOperateMsg(num);
-      PlaySoundLocActor(SWITCHSND,player);
-
-#if UPDATE_OTHER_SWITCHES
-
-		tile = (unsigned char *)tilemap;
-      actor = (unsigned *)actorat;
-
-		for (mapx=0;mapx<MAPSIZE;mapx++)
-			for (mapy=0;mapy<MAPSIZE;mapy++)
-			{
-      		if (*tile == OFF_SWITCH || *tile == ON_SWITCH)
-            {
-            	icon = *(mapsegs[1]+farmapylookup[mapy]+mapx);
-
-            	if (icon == iconnum)
-               {
-               	*tile = newwall;
-                  *actor = newwall;
-               }
-            }
-
-            tile++;
-            actor++;
-      	}
-#endif
-
-   }
-   else
-   {
-		DISPLAY_TIMED_MSG(SwitchNotActivateMsg,MP_WALLSWITCH_OPERATE,MT_GENERAL);
-      SD_PlaySound(NOWAYSND);
-   }
-}
-
-//--------------------------------------------------------------------------
-// DisplaySwitchOperateMsg() - Displays the Operating Barrier Switch message
-//										 for a particular level across the InfoArea.
-//--------------------------------------------------------------------------
-char OnSwitchMessage[] =  "\r\r  ACTIVATING BARRIER";
-
-char OffSwitchMessage[] = "\r\r DEACTIVATING BARRIER";
-
-
-void DisplaySwitchOperateMsg(unsigned coords)
-{
-   barrier_type *Barrier;
-
-	Barrier = &gamestate.barrier_table[coords];
-
-  	if (Barrier->on)
-   {
-		DISPLAY_TIMED_MSG(OnSwitchMessage,MP_WALLSWITCH_OPERATE,MT_GENERAL);
-   }
-	else
-   {
-		DISPLAY_TIMED_MSG(OffSwitchMessage,MP_WALLSWITCH_OPERATE,MT_GENERAL);
-   }
-}
-
-
-//--------------------------------------------------------------------------
-// UpdateBarrierTable(x,y,level) - Finds/Inserts arc entry in arc list
-//
-// RETURNS: Offset into barrier_table[] for a particular arc
-//
-//--------------------------------------------------------------------------
-unsigned UpdateBarrierTable(unsigned char x, unsigned char y, boolean OnOff)
-{
-   barrier_type *Barrier;
-   short num;
-
-	//
-   // Scan Table...
-   //
-
-  	Barrier = gamestate.barrier_table;
-
-   for (num = 0;num < MAX_BARRIER_SWITCHES;num++,Barrier++)
-   {
-   	if (Barrier->coord.tilex == x && Barrier->coord.tiley == y)
-      {
-         return(num);
-      }
-      else
-   	if (Barrier->on == 0xff)				// Empty?
-      {
-      	// We have hit end of list - Add
-
-  	      Barrier->coord.tilex = x;
-     	   Barrier->coord.tiley = y;
-         Barrier->on = OnOff;
-         return(num);
-      }
-   }
-
-  	AGENT_ERROR(SWITCH_TABLE_OVERFLOW);
-	return(0);
-}
-
-
-
-//--------------------------------------------------------------------------
-// ScanBarrierTable(x,y) - Scans a switch table for a arc in this level
-//
-// RETURNS :
-//	   0xFFFF    - Not found in table
-//		barrier   - barrier_table of the barrier for [num]
-//
-//--------------------------------------------------------------------------
-unsigned ScanBarrierTable(unsigned char x, unsigned char y)
-{
-   barrier_type *Barrier;
-   unsigned num;
+					{
+						ANIM_INFO(obj)->animdir = ad_FWD;
+//						ANIM_INFO(obj)->animdelay = 1;
+						Done = true;
+					}
+					break;
+			}
+			break; /* REBOUND */
 
-   Barrier = gamestate.barrier_table;
+#endif
 
-   for (num=0;num<MAX_BARRIER_SWITCHES;num++,Barrier++)
-   {
-      if (Barrier->coord.tilex == x && Barrier->coord.tiley == y)
-      {
-      	// Found switch...
 
-         return(num);
-		}
 	}
 
-	return(0xffff);		// Mark as EMPTY
+	return(Done);
 }
 
 
-//--------------------------------------------------------------------------
-// Checks to see if the Barrier obj is free
-//--------------------------------------------------------------------------
-boolean CheckActor(objtype *actor,unsigned code)
+//--------------------------------
+// AdvanceAnimFWD()
+//--------------------------------
+void AdvanceAnimFWD(objtype *obj)
 {
-		if ((unsigned)actor->temp2 == 0xffff)		// Is this actor free?
-		{
-      	//
-         // Connect actor to barrier switch (code is index into barrier table)
-         //
-
-			actor->temp2 = code;		// This actor is NO longer a cycle actor.
-			return(true);
-		}
+	ANIM_INFO(obj)->curframe++; 		 // INC frames
 
-	return(false);
+	obj->temp1++;
+	obj->s_tilex = obj->s_tiley;
 }
 
 
-//--------------------------------------------------------------------------
-// CheckAndConnect() -
-//--------------------------------------------------------------------------
-int CheckAndConnect(char x,char y, unsigned code)
-{
-	objtype *ob;
-	char offsets[] = {-1,0,1,0};
-	short loop;
-
-	ob = objlist;
-
-	do
-	{
-		switch (ob->obclass)
-		{
-			case arc_barrierobj:
-			case post_barrierobj:
-			case vpost_barrierobj:
-			case vspike_barrierobj:
-			{
-				for (loop = 0;loop<4;loop++)
-				{
-					if ((ob->tilex == x+offsets[loop]) && (ob->tiley == y+offsets[3-loop]))
-					{
-		         	bars_connected++;
+#if 0
 
-						if (CheckActor(ob,code))
-						   CheckAndConnect(x+offsets[loop],y+offsets[3-loop],code);
-					}
-				}
-			}
-			break;
-		}
-#pragma warn -pia
-	} while (ob = ob->next);
-#pragma warn +pia
+//--------------------------------
+// AdvanceAnimREV()
+//--------------------------------
+void AdvanceAnimREV(objtype *obj)
+{
+	ANIM_INFO(obj)->curframe--; 		 // Dec frames
+	obj->temp1--;
 
-	return(bars_connected);
+//	ANIM_INFO(obj)->animdelay = ANIM_INFO(obj)->maxdelay;
 }
 
-//--------------------------------------------------------------------------
-// ConnectBarriers() - Scans the object list and finds the single barrier
-//                     that is connected by switch and checks to see if
-//							  there are any surrounding barriers that need to be
-//							  connected also.
-//--------------------------------------------------------------------------
-void ConnectBarriers(void)
-{
-   barrier_type *Barrier;
-	unsigned num;
-
-   Barrier = gamestate.barrier_table;
+#endif
 
-   for (num=0;num<MAX_BARRIER_SWITCHES;num++,Barrier++)
-   {
-      if (Barrier->on != 0xff)
-      {
-		   bars_connected = 0;
 
-			if (!CheckAndConnect(Barrier->coord.tilex, Barrier->coord.tiley, num))
-         	AGENT_ERROR(BARRIER_SWITCH_NOT_CONNECTED);
-      }
-   }
-}
 
+//==========================================================================
+//
+//								WALL SWITCH ACTIVATION
+//
+//==========================================================================
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code to a separate file, since these are a part of 3D_AGENT.C
+// in AOG v3.0, but instead are in 3D_ACT2.C as of PS.
+#ifndef GAMEVER_RESTORATION_AOG
+#include "3D_WSWTC.C"
+#endif
 
 /*
 =============================================================================
@@ -2144,11 +2313,16 @@
 void T_BarrierShutdown(objtype *obj);
 
 statetype s_barrier_transition	= {0,0,15,T_BarrierTransition,NULL,&s_barrier_transition};
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 statetype s_vpost_barrier			= {0,SPR_VPOST1,15,T_BarrierTransition,NULL,&s_vpost_barrier};
 statetype s_spike_barrier			= {0,SPR_VSPIKE1,15,T_BarrierTransition,NULL,&s_spike_barrier};
 statetype s_barrier_shutdown		= {0,0,15,T_BarrierShutdown,NULL,&s_barrier_shutdown};
+#endif
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // SpawnBarrier()
 //---------------------------------------------------------------------------
@@ -2227,6 +2401,7 @@
 	}
 
 }
+#endif
 
 //---------------------------------------------------------------------------
 // ToggleBarrier()
@@ -2237,6 +2412,8 @@
 //
 //---------------------------------------------------------------------------
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void TurnPostOff(objtype *obj)
 {
 	NewState(obj,&s_barrier_transition);
@@ -2256,10 +2433,52 @@
    obj->lighting = LAMP_ON_SHADING;
    BARRIER_STATE(obj) = bt_ON;
 }
+#endif
 
 
 void ToggleBarrier(objtype *obj)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Variations of TurnPostOn and TurnPostOff are "inlined" in AOG v3.0,
+// and there a few more differences.
+#ifdef GAMEVER_RESTORATION_AOG
+	switch (BARRIER_STATE(obj))
+	{
+		case bt_ON:
+			//
+			// Turn OFF
+			//
+		NewState(obj,&s_barrier_transition);
+		if (obj->obclass == post_barrierobj)
+			obj->temp1 = SPR_ELEC_POST4;
+		else
+			obj->temp1 = SPR_ELEC_ARC4;
+
+		obj->temp3 = 0;
+		obj->flags &= ~(FL_SOLID|FL_FAKE_STATIC);
+		obj->flags |= (FL_NEVERMARK|FL_NONMARK);
+	   obj->lighting = 0;
+
+		break;
+
+		case bt_OFF:
+			//
+			// Turn ON
+			//
+		if (obj->obclass == arc_barrierobj)
+			InitAnim(obj,SPR_ELEC_ARC1,US_RndT()%3,2,at_CYCLE,ad_FWD,35+(US_RndT()&7));
+		else
+			InitAnim(obj,SPR_ELEC_POST1,US_RndT()%3,2,at_CYCLE,ad_FWD,35+(US_RndT()&7));
+
+		obj->flags |= (FL_SOLID|FL_FAKE_STATIC);
+		obj->flags &= ~(FL_NEVERMARK|FL_NONMARK);
+	   obj->lighting = LAMP_ON_SHADING;
+
+		break;
+	}
+	BARRIER_STATE(obj) ^= bt_ON;
+#else
+
 	switch (BARRIER_STATE(obj))
 	{
 		case bt_ON:				// Same as closed
@@ -2313,11 +2532,14 @@
          }
 		break;
    }
+#endif
 }
 
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // T_BarrierShutdown() - This is used ONLY for electric arc barriers
 //								 which "flicker" out when disabled/destroyed.
@@ -2378,6 +2600,7 @@
 
    }
 }
+#endif
 
 //---------------------------------------------------------------------------
 // T_BarrierTransition() -
@@ -2385,6 +2608,19 @@
 //---------------------------------------------------------------------------
 void T_BarrierTransition(objtype *obj)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	switch (BARRIER_STATE(obj))
+   {
+      //
+      // OFF
+      //
+   	case bt_OFF:
+		if (GAMEVER_RESTORATION_BARRIER_PTR((obj->temp2>>4)&0xF,obj->temp2&0xF)->on)
+			ToggleBarrier(obj);
+	break;
+   }
+#else
 	fixed dx,dy;
 
 	switch (BARRIER_STATE(obj))
@@ -2538,6 +2774,7 @@
    	        	ToggleBarrier(obj);
       break;
    }
+#endif
 }
 
 
@@ -2610,9 +2847,16 @@
 statetype s_rent_chase3s 	= {true,SPR_RENT_W3_1,3,NULL,NULL,&s_rent_chase4};
 statetype s_rent_chase4 	= {true,SPR_RENT_W4_1,8,T_Chase,NULL,&s_rent_chase1};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+statetype s_rent_die1		= {false,SPR_RENT_DIE_1,12,T_BlowBack,A_DeathScream,&s_rent_die2};
+statetype s_rent_die2		= {false,SPR_RENT_DIE_2,13,T_BlowBack,NULL,&s_rent_die3};
+statetype s_rent_die3		= {false,SPR_RENT_DIE_3,14,T_BlowBack,NULL,&s_rent_die3s};
+#else
 statetype s_rent_die1		= {false,SPR_RENT_DIE_1,17,T_BlowBack,A_DeathScream,&s_rent_die2};
 statetype s_rent_die2		= {false,SPR_RENT_DIE_2,21,T_BlowBack,NULL,&s_rent_die3};
 statetype s_rent_die3		= {false,SPR_RENT_DIE_3,16,T_BlowBack,NULL,&s_rent_die3s};
+#endif
 statetype s_rent_die3s		= {false,SPR_RENT_DIE_4,13,T_BlowBack,NULL,&s_rent_die4};
 statetype s_rent_die4		= {false,SPR_RENT_DEAD,0,NULL,NULL,&s_rent_die4};
 
@@ -3127,7 +3371,10 @@
 		case en_goldstern:
 			SpawnNewObj (tilex,tiley,&s_goldwarp_in1);
 			new->flags = FL_SHOOTABLE | FL_SOLID;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL;
 			if (gamestate.mapon==9)
 				new->hitpoints = starthitpoints[gamestate.difficulty][which]*15;
@@ -3144,21 +3391,30 @@
 		case en_liquid:
 			SpawnNewObj(tilex,tiley,&s_liquid_wait);
 			new->flags = FL_OFFSET_STATES|FL_PROJ_TRANSPARENT;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL*3;
 		break;
 
 		case en_rentacop:
 			SpawnNewObj (tilex,tiley,&s_rent_stand);
 			new->flags = FL_SHOOTABLE | FL_SOLID;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL;
 		break;
 
 		case en_gen_scientist:
 			SpawnNewObj (tilex,tiley,&s_ofcstand);
 			new->flags = FL_SHOOTABLE | FL_SOLID | FL_FRIENDLY | FL_RANDOM_TURN;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			if (US_RndT()&1)
 				new->flags |= FL_INFORMANT;
 			new->speed = SPDPATROL;
@@ -3167,7 +3423,10 @@
 		case en_swat:
 			SpawnNewObj (tilex,tiley,&s_swatstand);
 			new->flags = FL_SHOOTABLE | FL_SOLID;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL;
 			ammo = 30;
 			if (scan_value == 0xffff)
@@ -3179,7 +3438,10 @@
 		case en_proguard:
 			SpawnNewObj (tilex,tiley,&s_prostand);
 			new->flags = FL_SHOOTABLE | FL_SOLID;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL;
 			ammo = 25;
 		break;
@@ -3194,7 +3456,10 @@
 			SpawnNewObj (tilex,tiley,&s_scout_stand);
 			new->speed = SPDPATROL;
 			new->temp1 = SPR_FSCOUT_W1_1;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 			new->flags = FL_SHOOTABLE | FL_SOLID | FL_OFFSET_STATES|FL_FAKE_STATIC;
 		break;
 
@@ -3203,7 +3468,10 @@
 			new->speed = SPDPATROL;
 			new->temp1 = SPR_GSCOUT_W1_1;
 			new->flags = FL_SHOOTABLE | FL_SOLID | FL_OFFSET_STATES | FL_STATIONARY|FL_FAKE_STATIC;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_steamgrate:
@@ -3223,7 +3491,18 @@
 		break;
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	map = mapsegs[0]+farmapylookup[tiley]+tilex;
+	if (*map == AMBUSHTILE)
+	{
+		tilemap[tilex][tiley] = 0;
+		*map = new->areanumber = GetAreaNumber(tilex, tiley);
+		new->flags |= (FL_SHOOTABLE|FL_AMBUSH|FL_SOLID);
+	}
+#else
 	CheckForSpecialTile(new,tilex,tiley);
+#endif
 
 	new->ammo = ammo;
 	new->obclass = rentacopobj+which;
@@ -3240,6 +3519,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // CheckForSpecialTile() - Adds special attributes to actor if standing on
 //				               special tiles.
@@ -3321,6 +3602,7 @@
 		#endif
    }
 }
+#endif // VERSIONS RESTORATION
 
 /*
 ===============
@@ -3347,14 +3629,20 @@
 
 		case en_rentacop:
 			SpawnNewObj (tilex,tiley,&s_rent_path1);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			new->speed = SPDPATROL;
 		break;
 
 		case en_gen_scientist:
 			SpawnNewObj (tilex,tiley,&s_ofcpath1);
 			new->flags = FL_FRIENDLY | FL_RANDOM_TURN;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			if (US_RndT()&1)
 				new->flags |= FL_INFORMANT;
 			new->speed = SPDPATROL;
@@ -3363,7 +3651,10 @@
 		case en_proguard:
 			SpawnNewObj (tilex,tiley,&s_propath1);
 			new->speed = SPDPATROL;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 			ammo = 25;
 		break;
 
@@ -3375,7 +3666,10 @@
 				new->temp1 = US_RndT()&1;
 			else
 				new->temp1 = scan_value;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_floatingbomb:
@@ -3383,7 +3677,10 @@
 			new->speed = SPDPATROL;
 			new->temp1 = SPR_FSCOUT_W1_1;
 			new->flags = FL_OFFSET_STATES;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 
 		case en_volatiletransport:
@@ -3391,7 +3688,10 @@
 			new->speed = SPDPATROL;
 			new->temp1 = SPR_GSCOUT_W1_1;
 			new->flags = FL_OFFSET_STATES;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			new->flags2 = FL2_BFGSHOT_SOLID|FL2_BFG_SHOOTABLE;
+#endif
 		break;
 	}
 
@@ -3411,7 +3711,10 @@
 		new->s_tilex = new->s_tiley = 0xff;
 	}
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	CheckForSpecialTile(new,tilex,tiley);
+#endif
 
 	actorat[new->tilex][new->tiley] = NULL;		// don't use original spot
 
@@ -3478,12 +3781,22 @@
 	case swatobj:
 		{
 		 #if (GAME_VERSION != SHAREWARE_VERSION)
+		 /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		 #ifdef GAMEVER_RESTORATION_AOG
+		 int sounds[3]=
+			{
+				SWATDIESND,
+				SWATDEATH3SND,
+			};
+		 PlaySoundLocActor(sounds[US_RndT()%2],ob);
+		 #else
 		 int sounds[2]=
 			{
 				SWATDIESND,
 				SWATDEATH2SND
 			};
 		 PlaySoundLocActor(sounds[US_RndT()&1],ob);
+		 #endif
 		 #else
 		 PlaySoundLocActor(SWATDIESND,ob);
 		 #endif
@@ -3495,27 +3808,53 @@
 	case rentacopobj:
 		{
 #if (GAME_VERSION != SHAREWARE_VERSION)
+		 /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		 #ifdef GAMEVER_RESTORATION_AOG
+		 int sounds[3]=
+			{
+				RENTDEATH1SND,
+				RENTDEATH2SND,
+				RENTDEATH3SND
+			};
+		 PlaySoundLocActor(sounds[US_RndT()%3],ob);
+		 #else
 		 int sounds[2]=
 			{
 				RENTDEATH1SND,
 				RENTDEATH2SND,
 			};
 		 PlaySoundLocActor(sounds[US_RndT()&1],ob);
+		 #endif
 #else
 		 PlaySoundLocActor(RENTDEATH1SND,ob);
 #endif
 		}
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// A few original AOG EXEs have a redundant jump here. At times it is probably
+// the result of a Borland C++ quirk, with no clear hint for the jump present
+// in the C code. Here, though, this jump is not created if the following
+// case is missing (although the compiled jump table doesn't seem to change).
+// 3D_AGENT.C as released on 2013 is known to have a few
+// instances of such do-nothing cases.
+// Note that electroobj is just an arbitrary choice of an enum value.
+#ifdef GAMEVER_RESTORATION_AOG
+	case electroobj:
+		break;
+#endif
 	case mutant_human1obj:
 	case hang_terrotobj:
 	case floatingbombobj:
 	case volatiletransportobj:
 	case explosionobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case gr_explosionobj:
    case bfg_explosionobj:
    case pd_explosionobj:
 	case doorexplodeobj:
+#endif
 		{
 
 #if GAME_VERSION != SHAREWARE_VERSION
@@ -3529,7 +3868,12 @@
 		}
 		break;
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case vitalobj:
+#else
 		case rotating_cubeobj:
+#endif
 			SD_PlaySound(VITAL_GONESND);
 		break;
 
@@ -3570,9 +3914,12 @@
 #endif
 
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case breather_beastobj:
 	case cyborg_warriorobj:
 	case genetic_guardobj:
+#endif
 	case acid_dragonobj:
 	case podobj:
 		PlaySoundLocActor(PODDEATHSND,ob);
@@ -3585,12 +3932,23 @@
 	case proguardobj:
 		{
 #if (GAME_VERSION != SHAREWARE_VERSION)
+		 /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		 #ifdef GAMEVER_RESTORATION_AOG
+		 int sounds[3]=
+			{
+				PROGUARDDEATHSND,
+				PRODEATH2SND,
+				PRODEATH3SND
+			};
+		 PlaySoundLocActor(sounds[US_RndT()%3],ob);
+		 #else
 		 int sounds[3]=
 			{
 				PROGUARDDEATHSND,
 				PRODEATH2SND,
 			};
 		 PlaySoundLocActor(sounds[US_RndT()&1],ob);
+		 #endif
 #else
 		 PlaySoundLocActor(PROGUARDDEATHSND,ob);
 #endif
@@ -3598,13 +3956,25 @@
 		break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	case breather_beastobj:
+	case cyborg_warriorobj:
+	case genetic_guardobj:
+		PlaySoundLocActor(GGUARDDEATHSND,ob);
+		break;
+#else
 	case final_boss1obj:
+#endif
 	case spider_mutantobj:
 		PlaySoundLocActor(BLUEBOYDEATHSND,ob);
 		break;
 
 	case mech_guardianobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case final_boss3obj:
+#endif
 	case mutant_human2obj:
 		PlaySoundLocActor(DOGBOYDEATHSND,ob);
 		break;
@@ -3615,7 +3985,10 @@
 		break;
 
 	case lcan_alienobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case final_boss4obj:
+#endif
 		PlaySoundLocActor(LCANDEATHSND,ob);
 		break;
 
@@ -3645,6 +4018,8 @@
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // DropCargo()
 //---------------------------------------------------------------------------
@@ -3677,6 +4052,7 @@
       OperateSmartSwitch(obj->linc>>8,obj->linc&255,ST_TURN_OFF,true);
    }
 }
+#endif
 
 
 
@@ -3736,8 +4112,14 @@
 	if (ob->flags & (FL_STATIONARY|FL_BARRIER_DAMAGE))
 		return;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (ob->obclass != liquidobj)
+		ob->flags |= FL_SOLID|FL_SHOOTABLE;
+#else
 //	if ((ob->flags & (FL_SOLID|FL_SHOOTABLE)) != (FL_SOLID|FL_SHOOTABLE))
 //		ob->flags |= FL_SOLID|FL_SHOOTABLE;
+#endif
 
   if (ob->ammo)
   {
@@ -3772,11 +4154,14 @@
 			case reptilian_warriorobj:
 			case acid_dragonobj:
 			case mech_guardianobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case gold_morphobj:
 			case final_boss1obj:
 			case final_boss2obj:
 			case final_boss3obj:
 			case final_boss4obj:
+#endif
 
 			// Check for mode change
 			//
@@ -3789,7 +4174,13 @@
 				// Move half as far when doing near attacks...
 				//
 					if (!(ob->flags & FL_SHOOTMODE))
+						/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+						// This one is weird
+#ifdef GAMEVER_RESTORATION_AOG
+						ob->ammo = ((int)ob->ammo) / 2;
+#else
 						ob->ammo >>= 1;
+#endif
 				}
 			break;
 		}
@@ -3820,11 +4211,14 @@
 				case reptilian_warriorobj:
 				case acid_dragonobj:
 				case mech_guardianobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				case gold_morphobj:
 				case final_boss1obj:
 				case final_boss2obj:
 				case final_boss3obj:
 				case final_boss4obj:
+#endif
 
 				// Always shoot when in SHOOTMODE -- Never shoot when not!
 				//
@@ -3951,8 +4345,11 @@
 	{
 		ob->flags |= FL_SHOOTMODE;
 		ob->ammo = 1+(US_RndT()%2);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		if (ob->obclass == gold_morphobj)
 			ob->ammo += 3+(US_RndT()%5);
+#endif
 	}
 }
 
@@ -3985,9 +4382,12 @@
 				NewState (ob,&s_goldshoot1);
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case gold_morphobj:
 				NewState (ob,&s_mgold_shoot1);
 			break;
+#endif
 
 			case rentacopobj:
 				NewState (ob,&s_rent_shoot1);
@@ -4033,10 +4433,13 @@
 			case reptilian_warriorobj:
 			case gurneyobj:
 			case mutant_human1obj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case final_boss1obj:
 			case final_boss2obj:
 			case final_boss3obj:
 			case final_boss4obj:
+#endif
 				NewState(ob,&s_ofs_shoot1);
 			break;
 
@@ -4157,6 +4560,11 @@
 	if (ob->flags & FL_STATIONARY)
 		return;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	ob->flags |= FL_SHOOTABLE|FL_SOLID;
+#endif
+
 	switch (ob->obclass)
    {
       case volatiletransportobj:
@@ -4242,7 +4650,10 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 int morph_angle_adj=0;
+#endif
 
 void T_Shoot (objtype *ob)
 {
@@ -4260,7 +4671,10 @@
 	switch (ob->obclass)
 	{
 		case electroobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case mutant_human2obj:
+#endif
 			SpawnProjectile(ob,electroshotobj);
 		break;
 
@@ -4280,6 +4694,12 @@
 			SpawnProjectile(ob,scanshotobj);
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		case mutant_human2obj:
+			SpawnProjectile(ob,dogshotobj);
+		break;
+#else
 		case gold_morphobj:
 			SpawnProjectile(ob,goldmorphshotobj);
 
@@ -4305,13 +4725,20 @@
 				morph_angle_adj = 0;
 			}
 		break;
+#endif
 
 		case spider_mutantobj:
 		case acid_dragonobj:
 			SpawnProjectile(ob,spider_mutantshotobj+(ob->obclass-spider_mutantobj));
-//			SpawnProjectile(ob,spider_mutantshotobj+(ob->obclass-spider_mutantobj));
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+			// Comment out second call for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+			SpawnProjectile(ob,spider_mutantshotobj+(ob->obclass-spider_mutantobj));
+#endif
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case final_boss2obj:
 			SpawnProjectile(ob,final_boss2shotobj);
 		break;
@@ -4319,12 +4746,18 @@
 		case final_boss4obj:
 			SpawnProjectile(ob,final_boss4shotobj);
 		break;
+#endif
 
 
 		default:
 			hitchance = 128;
 
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			ob->lighting=-4;
+#else
 			ob->lighting=-10;
+#endif
 
 			if (!areabyplayer[ob->areanumber])
 				return;
@@ -4415,6 +4848,10 @@
 void T_Shade(objtype *obj)
 {
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	obj->lighting = 0;
+#else
 	switch (obj->obclass)
 	{
 		case final_boss2obj:
@@ -4424,6 +4861,7 @@
 			obj->lighting = 0;
       break;
    }
+#endif
 }
 
 //----------------------------------------------------------------------
@@ -4498,7 +4936,9 @@
 void A_Laugh(objtype *obj);
 void A_WarpIn(objtype *obj);
 void A_WarpOut(objtype *obj);
+#ifndef GAMEVER_RESTORATION_AOG
 void T_GoldMorph(objtype *obj);
+#endif
 
 
 extern statetype s_goldstand;
@@ -4546,10 +4986,12 @@
 extern statetype s_goldwarp_in4;
 extern statetype s_goldwarp_in5;
 
+#ifndef GAMEVER_RESTORATION_AOG
 extern statetype s_goldmorphwait1;
 extern statetype s_goldmorphwait2;
 
 extern void T_GoldMorphWait(objtype *obj);
+#endif
 
 statetype s_goldstand 	= {true,SPR_GOLD_S_1,20,T_Stand,NULL,&s_goldpath1};
 
@@ -4596,6 +5038,8 @@
 statetype s_goldwarp_in4	= {false,SPR_GOLD_WARP2,15,NULL,NULL,&s_goldwarp_in5};
 statetype s_goldwarp_in5	= {false,SPR_GOLD_WARP1,15,NULL,NULL,&s_goldpath1};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 statetype s_goldmorphwait1	= {false, SPR_GOLD_WRIST_1, 10, NULL, T_GoldMorphWait, &s_goldmorphwait1};
 
 statetype s_goldmorph1		= {false, SPR_GOLD_MORPH1, 10, NULL, NULL, &s_goldmorph2};
@@ -4618,8 +5062,11 @@
 statetype s_mgold_shoot4 	= {false,SPR_MGOLD_ATTACK4, 12, T_Shade,NULL,&s_mgold_chase1};
 
 statetype s_mgold_pain 		= {false,SPR_MGOLD_OUCH,  25, NULL,NULL,&s_mgold_chase1};
+#endif
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 boolean noShots = false;
 int morphWaitTime;
 
@@ -4647,6 +5094,7 @@
 
 	noShots = false;
 }
+#endif
 
 //--------------------------------------------------------------------------
 // A_Laugh() - Plays a Goldstern Laugh Sound
@@ -4892,8 +5340,14 @@
 //-------------------------------------------------------------------------
 // SpawnCusExplosion() - Spawns an explosion at a given x & y.
 //-------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void SpawnExplosion(fixed x, fixed y)
+#else
 void SpawnCusExplosion(fixed x, fixed y, unsigned StartFrame, unsigned NumFrames, unsigned Delay, unsigned Class)
+#endif
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
 	int tilex=x>>TILESHIFT, tiley=y>>TILESHIFT;
 
 	usedummy = nevermark = true;
@@ -4902,9 +5356,16 @@
 	new->x = x;
 	new->y = y;
 	new->flags = FL_OFFSET_STATES|FL_NONMARK|FL_NEVERMARK;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	new->obclass = explosionobj;
+   new->lighting = NO_SHADING;
+	InitAnim(new,SPR_EXPLOSION_1,0,4,at_ONCE,ad_FWD,(US_RndT()&0x7)+32);
+#else
 	new->obclass = Class;
    new->lighting = NO_SHADING;
 	InitAnim(new,StartFrame,0,NumFrames,at_ONCE,ad_FWD,(US_RndT()&0x7),Delay);
+#endif
 	A_DeathScream(new);
 	MakeAlertNoise(new);
 }
@@ -4915,7 +5376,12 @@
 //---------------------------------------------------------------------------
 void T_SpawnExplosion(objtype *obj)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	SpawnExplosion(obj->x,obj->y);
+#else
 	SpawnCusExplosion(obj->x,obj->y,SPR_EXPLOSION_1,4,4,explosionobj);
+#endif
 }
 
 //==========================================================================
@@ -4964,6 +5430,49 @@
 
 //===========================================================================
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void T_VitalDie(objtype *obj);
+
+extern statetype s_vital;
+
+extern statetype s_vital_ouch;
+extern statetype s_vital_die;
+extern statetype s_vital_die1;
+extern statetype s_vital_die2;
+extern statetype s_vital_die3;
+extern statetype s_vital_die4;
+extern statetype s_vital_die5;
+extern statetype s_vital_die6;
+extern statetype s_vital_die7;
+extern statetype s_vital_die8;
+
+statetype s_vital		= {false,SPR_VITAL_STAND,1,NULL,NULL,&s_vital};
+
+statetype s_vital_ouch		= {false,SPR_VITAL_OUCH,25,NULL,NULL,&s_vital};
+statetype s_vital_die		= {false,SPR_VITAL_DIE_1,5,NULL,NULL,&s_vital_die1};
+statetype s_vital_die1		= {false,SPR_VITAL_DIE_2,6,NULL,NULL,&s_vital_die2};
+statetype s_vital_die2		= {false,SPR_VITAL_DIE_3,7,NULL,T_ExplodeDamage,&s_vital_die3};
+statetype s_vital_die3		= {false,SPR_VITAL_DIE_4,7,NULL,NULL,&s_vital_die4};
+statetype s_vital_die4		= {false,SPR_VITAL_DIE_5,7,NULL,T_ExplodeDamage,&s_vital_die5};
+statetype s_vital_die5		= {false,SPR_VITAL_DIE_6,7,NULL,NULL,&s_vital_die6};
+statetype s_vital_die6		= {false,SPR_VITAL_DIE_7,7,NULL,NULL,&s_vital_die7};
+statetype s_vital_die7		= {false,SPR_VITAL_DIE_8,7,NULL,A_DeathScream,&s_vital_die8};
+statetype s_vital_die8		= {false,SPR_VITAL_DEAD_1,1,NULL,T_VitalDie,&s_ofs_random};
+
+
+void T_VitalDie(objtype *obj)
+{
+	obj->temp1 = SPR_VITAL_DEAD_1;
+	obj->temp2 = US_RndT()%10+5;
+	obj->flags &= ~FL_SHOOTABLE;
+	obj->flags |= FL_OFFSET_STATES;
+	if (!gamestate.secrettotal)
+		playstate = ex_victorious;
+}
+#endif // VERSIONS RESTORATION
+
+
 /*
 ===============
 =
@@ -5133,7 +5642,10 @@
 	{
 		case spider_mutantshotobj:
 		case acid_dragonshotobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case final_boss4shotobj:
+#endif
 			SpawnNewObj(x>>TILESHIFT,y>>TILESHIFT,&s_ofs_random);
 			PlaySoundLocActor(SPITATTACKSND,new);
 			new->speed = SPDPROJ;
@@ -5144,9 +5656,15 @@
 		break;
 
 		case mut_hum1shotobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case goldmorphshotobj:
+#endif
 		case electroshotobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case final_boss2shotobj:
+#endif
 			SpawnNewObj(x>>TILESHIFT,y>>TILESHIFT,&s_ofs_shot1);
 			PlaySoundLocActor(ELECTSHOTSND,new);
 			new->speed = SPDPROJ;
@@ -5154,6 +5672,11 @@
 			new->temp1 = SPR_ELEC_SHOT1;
 			new->flags = FL_OFFSET_STATES|FL_PROJ_CHECK_TRANSPARENT|FL_STORED_OBJPTR;
 			new->temp3 = (unsigned)shooter;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			if (class == electroshotobj)
+				new->lighting = NO_SHADING;
+#else
 			switch (class)
 			{
 				case final_boss2shotobj:
@@ -5163,6 +5686,7 @@
 				case electroshotobj:
 					new->lighting = NO_SHADING;
 			}
+#endif
 		break;
 
 		case lcanshotobj:
@@ -5204,6 +5728,8 @@
 			new->s_tiley = y>>TILESHIFT;
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case bfg_shotobj:
 			SpawnNewObj(x>>TILESHIFT,y>>TILESHIFT,&s_ofs_random);
 			new->speed = SPDPROJ+Random(SPDPROJ);
@@ -5217,6 +5743,7 @@
 			new->s_tilex = x>>TILESHIFT;
 			new->s_tiley = y>>TILESHIFT;
 		break;
+#endif
 
 	}
 
@@ -5230,11 +5757,19 @@
 	new->y=y;
 	new->active = true;
 	new->obclass = class;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (class != grenadeobj)
+#else
 	if (class != grenadeobj && class != bfg_shotobj)
+#endif
 		new->angle=CalcAngle(new,player)+angle_adj;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (shooter->obclass == gold_morphobj)
 		new->angle += morph_angle_adj;
+#endif
 
 	if (new->angle<=0)
 		new->angle+=359;
@@ -5247,7 +5782,12 @@
 // Move grenade slightly in front of player so you can see instant
 // explosions (ie: when you're face up against a wall).
 //
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (new->obclass==grenadeobj)
+#else
 	if (class==grenadeobj || class == bfg_shotobj)					  
+#endif
 	{
 		long deltax,deltay;
 
@@ -5263,7 +5803,10 @@
 }
 
 objtype *proj_check;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 unsigned char proj_wall;		
+#endif
 
 //---------------------------------------------------------------------------
 // ProjectileTryMove()
@@ -5281,7 +5824,10 @@
 	fixed dx, dy;
 	short ydist,xdist;
 
-   proj_wall = 0;		
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+   proj_wall = 0;
+#endif		
 	steps = tics;
 	//
 	// Move that lil' projectile
@@ -5328,7 +5874,10 @@
 							if ((unsigned)xdist < PROJCHECKSIZE && (unsigned)ydist < PROJCHECKSIZE)
 							{
 								proj_check=false;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
                         proj_wall = NULL;
+#endif
 								ob->tilex = ob->x>>TILESHIFT;
 								ob->tiley = ob->y>>TILESHIFT;
 								return(false);
@@ -5339,7 +5888,10 @@
                   {
 							// We have a wall!
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
                      proj_wall = (unsigned char)proj_check;	 
+#endif
 							proj_check=false;
 			            ob->tilex = ob->x>>TILESHIFT;
 	   		         ob->tiley = ob->y>>TILESHIFT;
@@ -5396,21 +5948,38 @@
 		switch (ob->obclass)
 		{
 			case spider_mutantshotobj:
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_BOSS1_EXP1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_BOSS1_EXP1,0,2,at_ONCE,ad_FWD,5);
+#endif
 				return;
 			break;
 
 			case acid_dragonshotobj:
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_BOSS5_EXP1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_BOSS5_EXP1,0,2,at_ONCE,ad_FWD,5);
+#endif
 				return;
 			break;
 
 			case mut_hum1shotobj:
 			case electroshotobj:						// Explode on walls
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_ELEC_SHOT_EXP1,0,1,at_ONCE,ad_FWD,25+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_ELEC_SHOT_EXP1,0,1,at_ONCE,ad_FWD,5+(US_RndT()&3));
+#endif
 				return;
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          case final_boss2shotobj:
          case goldmorphshotobj:
 				InitSmartSpeedAnim(ob,SPR_MGOLD_SHOT_EXP1,0,1,at_ONCE,ad_FWD,5+(US_RndT()&3));
@@ -5421,22 +5990,38 @@
 				InitSmartSpeedAnim(ob,SPR_BOSS10_SPIT_EXP1,0,1,at_ONCE,ad_FWD,5+(US_RndT()&3));
          	return;
          break;
+#endif
 
 			case lcanshotobj:						// Explode on walls
 			case podshotobj:
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_SPIT_EXP3_1,0,2,at_ONCE,ad_FWD,25+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_SPIT_EXP3_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&3));
+#endif
 				return;
 			break;
 
 			case scanshotobj:						// Explode on walls
 			case dogshotobj:
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_SPIT_EXP1_1,0,2,at_ONCE,ad_FWD,25+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_SPIT_EXP1_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				return;
 			break;
 
 
 			case liquidshotobj:						// Explode on walls
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				InitAnim(ob,SPR_LIQUID_SHOT_BURST_1,0,2,at_ONCE,ad_FWD,25+(US_RndT()&7));
+#else
 				InitSmartSpeedAnim(ob,SPR_LIQUID_SHOT_BURST_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				return;
 			break;
 
@@ -5452,13 +6037,21 @@
 				// Start Anim, Sound, and mark as exploded...
 				//
 
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				ob->obclass = explosionobj;
+				InitAnim(ob,SPR_EXPLOSION_1,0,4,at_ONCE,ad_FWD,30+(US_RndT()&7));
+#else
 				ob->obclass = gr_explosionobj;
 				InitSmartSpeedAnim(ob,SPR_EXPLOSION_1,0,4,at_ONCE,ad_FWD,3+(US_RndT()&7));
+#endif
 				A_DeathScream(ob);
 				return;
 			break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case bfg_shotobj:
 
 #if BFG_SHOT_STOPS
@@ -5509,13 +6102,19 @@
 				A_DeathScream(ob);
 				return;
 			break;
+#endif
 		}
 	}
 #pragma warn +rch
 
 // Determine if object hit player.
 //
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (ob->obclass != grenadeobj)
+#else
 	if (ob->obclass != grenadeobj && ob->obclass != bfg_shotobj)	 
+#endif
 	{
 	// Determine distance from player.
 	//
@@ -5542,9 +6141,16 @@
 				case mut_hum1shotobj:
 				case electroshotobj:
 					damage = (US_RndT() >>5);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_ELEC_SHOT_EXP1,0,1,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_ELEC_SHOT_EXP1,0,1,at_ONCE,ad_FWD,3+(US_RndT()&7));
+#endif
 				break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	         case final_boss4shotobj:
 					damage = (US_RndT()>>4);
 					InitSmartSpeedAnim(ob,SPR_BOSS10_SPIT_EXP1,0,1,at_ONCE,ad_FWD,3+(US_RndT()&3));
@@ -5555,32 +6161,58 @@
 					damage = (US_RndT()>>4);
 					InitSmartSpeedAnim(ob,SPR_MGOLD_SHOT_EXP1,0,1,at_ONCE,ad_FWD,5+(US_RndT()&7));
          	break;
+#endif
 
 				case lcanshotobj:
 				case podshotobj:
 					damage = (US_RndT()>>4);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_SPIT_EXP3_1,0,2,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_SPIT_EXP3_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				break;
 
 				case scanshotobj:
 				case dogshotobj:
 					damage = (US_RndT()>>4);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_SPIT_EXP1_1,0,2,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_SPIT_EXP1_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				break;
 
 				case liquidshotobj:
 					damage = (US_RndT()>>4);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_LIQUID_SHOT_BURST_1,0,2,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_LIQUID_SHOT_BURST_1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				break;
 
 				case spider_mutantshotobj:
 					damage = (US_RndT()>>4);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_BOSS1_EXP1,0,2,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_BOSS1_EXP1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				break;
 
 				case acid_dragonshotobj:
 					damage = (US_RndT()>>4);
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					InitAnim(ob,SPR_BOSS5_EXP1,0,2,at_ONCE,ad_FWD,35+(US_RndT()&7));
+#else
 					InitSmartSpeedAnim(ob,SPR_BOSS5_EXP1,0,2,at_ONCE,ad_FWD,5+(US_RndT()&7));
+#endif
 				break;
 			}
 
@@ -5600,7 +6232,12 @@
 #define EX_RADIUS				2					// Tiles out from center
 
 char ff_buffer[EX_RADIUS*2+1][EX_RADIUS*2+1];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char ff_damageplayer,ff_damage;
+#else
 short ff_damageplayer,ff_damage;
+#endif
 objtype *ff_obj;
 
 void ExplodeFill(char tx, char ty);
@@ -5612,17 +6249,24 @@
 {
 	int xl,yl,xh,yh,y,x;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //
 // Did this object start out in a wall?
 //
    if (tilemap[obj->tilex][obj->tiley])
    	return;
+#endif
 
 // Setup globals to minimize parameter passing while recursing!
 //
 	ff_obj = obj;
 	ff_damage = damage;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	ff_damageplayer = damageplayer;
+#else
 // Check to see if play is a Baby and should not be hurt by explosions,
 // except from actors that use explosions for attacks (IE. PerScan Drones).
 //
@@ -5630,6 +6274,7 @@
 		ff_damageplayer = damageplayer;
    else
 		ff_damageplayer = false;
+#endif
 
 
 #if 0
@@ -5672,7 +6317,10 @@
 	ff_obj = obj;
 	memset(ff_buffer,0,sizeof(ff_buffer));
 	ExplodeFill(obj->tilex,obj->tiley);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    ExplodeStatics(obj->tilex,obj->tiley);
+#endif
 }
 
 //---------------------------------------------------------------------------
@@ -5710,12 +6358,17 @@
 				// concussion weapons.
 				//
 					case hang_terrotobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
                case arc_barrierobj:
                case post_barrierobj:
                case vpost_barrierobj:
                case vspike_barrierobj:
+#endif
 					break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				//
 				// Test for Level completion object
 				//
@@ -5744,14 +6397,21 @@
 						else
 							DamageActor(proj_check,20,ff_obj);					// An explosion has started a chain reaction
 					break;
+#endif
 
 
 				// Everyone else gets the shit kicked
 				// out of them...
 				//
 					default:
+						/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+						SpawnExplosion(proj_check->x,proj_check->y);
+						SpawnExplosion(proj_check->x,proj_check->y);
+#else
 						if (!(proj_check->flags2 & FL2_CLOAKED))
 							SpawnFlash(proj_check->x,proj_check->y);
+#endif
 						DamageActor(proj_check,ff_damage,ff_obj);
 					break;
 				}
@@ -6004,4 +6664,4 @@
 			}
 	}
 }
-
\ No newline at end of file
+
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_AGENT.C bstone/3D_AGENT.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_AGENT.C	1994-08-23 12:19:30.000000000 +0300
+++ bstone/3D_AGENT.C	2015-06-27 14:35:54.628838900 +0300
@@ -7,8 +7,11 @@
 
 #include "jm_tp.h"
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void InitWeaponBounce(void);
 void HandleWeaponBounce(void);
+#endif
 
 /*
 =============================================================================
@@ -55,7 +58,10 @@
 #define INFOAREA_TSHAD_COLOR	0x04			// Text Shadow Color
 
 #define GRENADE_ENERGY_USE		4
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 #define BFG_ENERGY_USE			(GRENADE_ENERGY_USE<<1)
+#endif
 
 
 #define NUM_AMMO_SEGS			21
@@ -71,10 +77,13 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern boolean noShots;
 extern short bounceOk;
 
 short tryDetonatorDelay=0;
+#endif
 
 //
 // player state info
@@ -96,8 +105,11 @@
 char term_msg_name[13]= {"TERM_MSG."};
 #endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 unsigned player_oldtilex;
 unsigned player_oldtiley;
+#endif
 
 
 /*
@@ -108,17 +120,23 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void writeTokenStr(char far *str);
 
 void ShowOverheadChunk(void);
 void LoadOverheadChunk(short tpNum);
 void SaveOverheadChunk(short tpNum);
 void DisplayTeleportName(char tpNum, boolean locked);
+#endif
 
 void ForceUpdateStatusBar(void);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void UpdateRadarGuage(void);
 void DrawLedStrip(short x,short y,short frac,short max);
+#endif
 void DisplayPinballBonus(void);
 void CheckPinballBonus(long points);
 byte LevelCompleted(void);
@@ -130,7 +148,12 @@
 
 long	playerxmove,playerymove;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+atkinf_t far attackinfo[5][14] =
+#else
 atkinf_t far attackinfo[7][14] =
+#endif
 
 {
 { {6,0,1},{6,2,2},{6,0,3},{6,-1,4} },     // Auto charge
@@ -138,10 +161,18 @@
 { {6,0,1},{6,1,2},{5,3,3},{5,-1,4} },		// Pulse
 { {6,0,1},{6,1,2},{3,4,3},{3,-1,4} },		// ION
 { {6,0,1},{6,5,2},{6,6,3},{6,-1,4} },
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 { {6,0,1},{6,9,2},{6,10,3},{6,-1,4} },
 { {5,7,0},{5,8,0},{2,-2,0},{0,0,0} },
+#endif
 };
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+unsigned far PulsePics[6] = {ECG_HEARTBEAT_00,ECG_HEARTBEAT_00,ECG_HEARTBEAT_00,ECG_HEARTBEAT_00,ECG_HEARTBEAT_00,ECG_HEARTBEAT_00};
+#endif
+
 //int	strafeangle[9] = {0,90,180,270,45,135,225,315,0};
 
 #define GD0 0x55
@@ -152,8 +183,14 @@
 #define YD1 0x33
 #define RD1 0x13
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char  far DimAmmo[2][21] = {{GD0,GD0,GD0,GD0,GD0,GD0,GD0,YD0,YD0,YD0,YD0,YD0,YD0,YD0,RD0,RD0,RD0,RD0,RD0,RD0,RD0},
+									 {GD1,GD1,GD1,GD1,GD1,GD1,GD1,YD1,YD1,YD1,YD1,YD1,YD1,YD1,RD1,RD1,RD1,RD1,RD1,RD1,RD1}};
+#else
 char  far DimAmmo[2][22] = {{GD0,GD0,GD0,GD0,GD0,GD0,GD0,YD0,YD0,YD0,YD0,YD0,YD0,YD0,RD0,RD0,RD0,RD0,RD0,RD0,RD0,RD0},
 									 {GD1,GD1,GD1,GD1,GD1,GD1,GD1,YD1,YD1,YD1,YD1,YD1,YD1,YD1,RD1,RD1,RD1,RD1,RD1,RD1,RD1,RD1}};
+#endif
 
 #define GL0 0x58
 #define YL0 0x38
@@ -163,8 +200,14 @@
 #define YL1 0x36
 #define RL1 0x16
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char  far LitAmmo[2][21] = {{GL0,GL0,GL0,GL0,GL0,GL0,GL0,YL0,YL0,YL0,YL0,YL0,YL0,YL0,RL0,RL0,RL0,RL0,RL0,RL0,RL0},
+									 {GL1,GL1,GL1,GL1,GL1,GL1,GL1,YL1,YL1,YL1,YL1,YL1,YL1,YL1,RL1,RL1,RL1,RL1,RL1,RL1,RL1}};
+#else
 char  far LitAmmo[2][22] = {{GL0,GL0,GL0,GL0,GL0,GL0,GL0,YL0,YL0,YL0,YL0,YL0,YL0,YL0,RL0,RL0,RL0,RL0,RL0,RL0,RL0,RL0},
 									 {GL1,GL1,GL1,GL1,GL1,GL1,GL1,YL1,YL1,YL1,YL1,YL1,YL1,YL1,RL1,RL1,RL1,RL1,RL1,RL1,RL1,RL1}};
+#endif
 
 
 #define IA_MAX_LINE			30
@@ -182,11 +225,17 @@
 unsigned LastMsgPri = 0;
 short MsgTicsRemain = 0;
 classtype LastInfoAttacker = nothing;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 int LastInfoAttacker_Cloaked = 0;
+#endif
 infomsg_type LastMsgType = MT_NOTHING;
 InfoArea_Struct InfoAreaSetup;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char DrawRadarGuage_COUNT = 3;
+#endif
 char DrawAmmoNum_COUNT = 3;
 char DrawAmmoPic_COUNT = 3;
 //char DrawPDAmmoPic_COUNT = 3;
@@ -194,6 +243,12 @@
 char DrawWeaponPic_COUNT = 3;
 char DrawKeyPics_COUNT = 3;
 char DrawHealthNum_COUNT = 3;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char DrawHealthMonitor_COUNT = 3;
+char DrawHealthPic_COUNT = 3;
+char DrawPulse_COUNT = 3;
+#endif
 
 char DrawInfoArea_COUNT = 3;
 char InitInfoArea_COUNT = 3;
@@ -204,8 +259,11 @@
 void	GiveAmmo (int ammo);
 void DrawGAmmoNum(void);
 void DrawMAmmoNum(void);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void DrawPDAmmoMsg(void);
 void ComputeAvailWeapons(void);
+#endif
 void SW_HandleActor(objtype *obj);
 void SW_HandleStatic(statobj_t *stat,unsigned tilex, unsigned tiley);
 
@@ -258,16 +316,37 @@
 {
 	int	i,buttons,last;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// A few AOG/PS differences
+#ifdef GAMEVER_RESTORATION_AOG
+	if (gamestate.ammo == 0)
+		return;
+
+	if (gamestate.ammo < 4)
+		last = wp_ion_cannon;
+	else
+		last = wp_grenade;
+
+	for (i=wp_autocharge;i<=last;i++)
+#else
 	for (i=wp_autocharge;i<=wp_bfg_cannon;i++)
+#endif
 	{
 		if (buttonstate[bt_ready_autocharge+i-wp_autocharge])
 		{
+#ifdef GAMEVER_RESTORATION_AOG
+			if (gamestate.weapons & (1<<i))
+#else
 			if (gamestate.useable_weapons & (1<<i))
+#endif
 			{
 				gamestate.weapon = gamestate.chosenweapon = i;
 
 				DISPLAY_TIMED_MSG(WeaponAvailMsg, MP_WEAPON_AVAIL, MT_GENERAL);
 				DrawWeapon();
+#ifdef GAMEVER_RESTORATION_AOG
+				DrawAmmo(true);
+#endif
 				return;
 			}
 			else
@@ -391,6 +470,8 @@
 			angle -= ANGLES;
 		Thrust (angle,controly*BACKMOVESCALE);		// move backwards
 	}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	else
 		if (bounceOk)
 			bounceOk--;
@@ -400,6 +481,7 @@
 	else
 		if (bounceOk)
 			bounceOk--;
+#endif
 
 	ob->dir = ((ob->angle + 22) % 360)/45;
 
@@ -418,7 +500,7 @@
 =============================================================================
 */
 
-#define STATUSDRAWPIC(x, y, picnum)			JLatchDrawPic((x),(y+(200-STATUSLINES)),(picnum))
+#define STATUSDRAWPIC(x, y, picnum)			GAMEVER_RESTORATION_LATCHDRAWPIC((x),(y+(200-STATUSLINES)),(picnum))
 
 
 /*
@@ -436,22 +518,22 @@
 
 	temp = bufferofs;
 	bufferofs = PAGE1START+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = PAGE2START+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = PAGE3START+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = temp;
 
 #else
 
 	temp = bufferofs;
 	bufferofs = screenloc[0]+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = screenloc[1]+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = screenloc[2]+(200-STATUSLINES)*SCREENWIDTH;
-	JLatchDrawPic (x,y,picnum);
+	GAMEVER_RESTORATION_LATCHDRAWPIC (x,y,picnum);
 	bufferofs = temp;
 
 #endif
@@ -459,6 +541,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void JLatchDrawPic (unsigned x, unsigned y, unsigned picnum)
 {
 	unsigned wide, height, source;
@@ -469,6 +553,7 @@
 	source = latchpics[2+picnum-LATCHPICS_LUMP_START];
 	VL_LatchToScreen (source,wide/4,height,x,y);
 }
+#endif
 
 
 
@@ -531,6 +616,18 @@
 //--------------------------------------------------------------------------
 void DrawHealth (void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (gamestate.health < 33)
+		gamestate.heartrate = ECG_HEARTBEAT_18;
+	else if (gamestate.health < 66)
+		gamestate.heartrate = ECG_HEARTBEAT_09;
+	else
+		gamestate.heartrate = ECG_HEARTBEAT_01;
+
+	DrawHealthMonitor_COUNT=3;
+	DrawHealthNum_COUNT=3;
+#else
 	char *ptr = gamestate.health_str;
 
 	itoa(gamestate.health,gamestate.health_str,10);
@@ -538,13 +635,46 @@
 		*ptr++ -= '0';
 
 	DrawHealthNum_COUNT=3;
+#endif
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void DrawHealthPic (void)
+{
+	DrawHealthPic_COUNT--;
+	if (gamestate.health < 40)
+		LatchDrawPic(15,184,ECG_HEART_BAD);
+	else
+		LatchDrawPic(15,184,ECG_HEART_GOOD);
+}
+#endif
+
 //--------------------------------------------------------------------------
 // DrawHealthNum()
 //--------------------------------------------------------------------------
 void DrawHealthNum(void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	fontnumber = 2;
+	fontcolor = 0x9A;
+
+	DrawHealthNum_COUNT--;
+	PrintY = 186;
+	PrintX = 149;
+	if (gamestate.health < 100)
+	{
+		PrintX += 5;
+		if (gamestate.health < 10)
+			PrintX += 5;
+	}
+	LatchDrawPic(18,184,ECG_GRID_PIECE);
+	LatchDrawPic(19,184,ECG_GRID_PIECE);
+	LatchDrawPic(20,184,ECG_GRID_PIECE);
+	US_PrintUnsigned(gamestate.health);
+	US_Print("%");
+#else
 	char loop,num;
 	short check=100;
 
@@ -555,8 +685,105 @@
 			JLatchDrawPic(16+loop,162,NG_BLANKPIC);
 		else
 			JLatchDrawPic(16+loop,162,gamestate.health_str[num++]+NG_0PIC);
+#endif
+}
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void UpdateHealth(void)
+{
+	int loop;
+	int pic;
+	static int healthDelay;
+	static boolean healthPulse;
+
+	if ((gamestate.health == 0) && (playstate != ex_died))
+		playstate = ex_died;
+
+	if (gamestate.health_delay <= 0)
+	{
+		if (PulsePics[5] == ECG_HEARTBEAT_00)
+		{
+			gamestate.health_delay = (gamestate.health * 90) / 100 - tics;
+			if (gamestate.health != 0)
+			{
+				PulsePics[5] = gamestate.heartrate;
+				DrawHealthMonitor_COUNT = 3;
+				if ((gamestate.flags&GS_HEARTB_SOUND) && !screenfaded)
+					SD_PlaySound(H_BEATSND);
+			}
+			if (healthDelay <= 0)
+			{
+				DrawHealthPic_COUNT = 3;
+				healthDelay = gamestate.health_delay>>1;
+				healthPulse = false;
+			}
+		}
+	}
+	else
+	{
+		gamestate.health_delay -= tics;
+		if (!healthPulse)
+		{
+			if (((healthDelay -= tics) <= 0) && (gamestate.health >= 20))
+			{
+				DrawPulse_COUNT = 3;
+				healthPulse = true;
+			}
+		}
+	}
+
+	for (loop=0; loop<tics; loop++)
+		if (--gamestate.heartbeattics <= 0)
+		{
+			gamestate.heartbeattics = 7;
+			DrawHealthMonitor_COUNT = 3;
+			for (pic=0; pic<6; pic++)
+				if (PulsePics[pic] != ECG_HEARTBEAT_00)
+				{
+					PulsePics[pic]++;
+					if (pic)
+					{
+						switch (PulsePics[pic])
+						{
+						case ECG_HEARTBEAT_05:
+							PulsePics[pic-1] = ECG_HEARTBEAT_01;
+							break;
+						case ECG_HEARTBEAT_13:
+							PulsePics[pic-1] = ECG_HEARTBEAT_09;
+							break;
+						case ECG_HEARTBEAT_22:
+							PulsePics[pic-1] = ECG_HEARTBEAT_18;
+							break;
+						}
+					}
+					// (VERSIONS RESTORATION) That's right, no mistake,
+					// INFOAREAPIC is mentioned, same as in ClearInfoArea.
+					// Maybe the offsets were originally hardcoded, leading to a typo here.
+					switch (PulsePics[pic])
+					{
+					case ECG_HEARTBEAT_09:
+					case ECG_HEARTBEAT_18:
+					case INFOAREAPIC:
+						PulsePics[pic] = ECG_HEARTBEAT_00;
+						break;
+					}
+				}
+		}
 }
 
+void DrawHealthMonitor(void)
+{
+	DrawHealthMonitor_COUNT--;
+	LatchDrawPic(15,160,PulsePics[0]);
+	LatchDrawPic(16,160,PulsePics[1]);
+	LatchDrawPic(17,160,PulsePics[2]);
+	LatchDrawPic(18,160,PulsePics[3]);
+	LatchDrawPic(19,160,PulsePics[4]);
+	LatchDrawPic(20,160,PulsePics[5]);
+}
+#endif // VERSIONS RESTORATION
+
 //---------------------------------------------------------------------------
 // TakeDamage()
 //---------------------------------------------------------------------------
@@ -571,10 +798,18 @@
 				MsgTicsRemain = DISPLAY_MSG_STD_TIME;
 			else
 			{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				if (DISPLAY_TIMED_MSG(ActorInfoMsg[attacker->obclass],MP_TAKE_DAMAGE,MT_ATTACK))
+#else
 				if (DISPLAY_TIMED_MSG(ActorInfoMsg[attacker->obclass-rentacopobj],MP_TAKE_DAMAGE,MT_ATTACK))
+#endif
             {
 					LastInfoAttacker = attacker->obclass;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
                LastInfoAttacker_Cloaked = attacker->flags2 & FL2_CLOAKED;
+#endif
             }
 			}
 		}
@@ -647,17 +882,22 @@
 	#define Y	3
 	#define X	32
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	DrawScoreNum_COUNT--;
+#endif
+
 	if (gamestate.tic_score > MAX_DISPLAY_SCORE)
 	{
 		if (gamestate.score_roll_wait)
 		{
-			JLatchDrawPic(X+0,(200-STATUSLINES)+Y,N_BLANKPIC);
-			JLatchDrawPic(X+1,(200-STATUSLINES)+Y,N_DASHPIC);
-			JLatchDrawPic(X+2,(200-STATUSLINES)+Y,N_RPIC);
-			JLatchDrawPic(X+3,(200-STATUSLINES)+Y,N_OPIC);
-			JLatchDrawPic(X+4,(200-STATUSLINES)+Y,N_LPIC);
-			JLatchDrawPic(X+5,(200-STATUSLINES)+Y,N_LPIC);
-			JLatchDrawPic(X+6,(200-STATUSLINES)+Y,N_DASHPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+0,(200-STATUSLINES)+Y,N_BLANKPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+1,(200-STATUSLINES)+Y,N_DASHPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+2,(200-STATUSLINES)+Y,N_RPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+3,(200-STATUSLINES)+Y,N_OPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+4,(200-STATUSLINES)+Y,N_LPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+5,(200-STATUSLINES)+Y,N_LPIC);
+			GAMEVER_RESTORATION_LATCHDRAWPIC(X+6,(200-STATUSLINES)+Y,N_DASHPIC);
 		}
 		else
 		{
@@ -724,7 +964,7 @@
 // Add score to statistics.
 //
 	if (add_to_stats)
-		gamestuff.level[gamestate.mapon].stats.accum_points += points;
+		GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_points += points;
 
 // Check for bonuses!
 //
@@ -761,15 +1001,40 @@
 //---------------------------------------------------------------------------
 void DrawKeyPics(void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	int KeyX[] = {257, 265, 273, 281, 289};
+	int loop;
+	int KeyColors[] = {
+		0x11, 0xC9,
+		0x31, 0xB9,
+		0x51, 0x5B,
+		0x91, 0x9C,
+		0x21, 0x2B,
+	};
+#else
 	char loop;
+#endif
 
 	DrawKeyPics_COUNT--;
 
 	for (loop=0; loop<NUMKEYS; loop++)
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		// Hack to force single left shift by 2 instead of two shifts
+		// by 1 (one for duplication of loop var by 2, another one for
+		// access of 16-bit int):
+		// Maybe a bytes array was originally used for some reason.
+#ifdef GAMEVER_RESTORATION_AOG
+		if (gamestate.numkeys[loop])
+			VWB_Bar(KeyX[loop],177,7,7,*(int *)&((byte *)KeyColors)[2+loop*4]);
+		else
+			VWB_Bar(KeyX[loop],177,7,7,*(int *)&((byte *)KeyColors)[loop*4]);
+#else
 		if (gamestate.numkeys[loop])
 			JLatchDrawPic(15+2*loop,179,RED_KEYPIC+loop);
 		else
 			JLatchDrawPic(15+2*loop,179,NO_KEYPIC);
+#endif
 }
 
 //---------------------------------------------------------------------------
@@ -820,7 +1085,12 @@
 	if (gamestate.weapon == -1)
 		return;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	LatchDrawPic(22,152,WEAPON1PIC+gamestate.weapon);
+#else
 	JLatchDrawPic(31,176,WEAPON1PIC+gamestate.weapon);
+#endif
 
 	DrawWeaponPic_COUNT--;
 }
@@ -836,7 +1106,12 @@
 	{
 		gamestate.weapons |= (1<<weapon);
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (gamestate.weapon < (1<<weapon))
+#else
 		if (gamestate.weapon < weapon)
+#endif
 		{
 			gamestate.weapon = gamestate.chosenweapon = weapon;
 			DrawWeapon();
@@ -863,38 +1138,62 @@
 void DrawAmmo(boolean ForceRefresh)
 {
 	int temp;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    unsigned ammo,max_ammo;
 
    ComputeAvailWeapons();
+#endif
 
    //
    // Which weapon are we needing a refresh for?
    //
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (gamestate.weapon == wp_autocharge)
+#else
 	switch (gamestate.weapon)
+#endif
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //      case wp_plasma_detonators:
 //			DrawAmmoPic_COUNT = 3;
 //			DrawAmmoNum_COUNT = 0;
 //		return;
 
 		case wp_autocharge:
+#endif
 			DrawAmmoPic_COUNT = 3;
 			DrawAmmoNum_COUNT = 0;
 		return;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       default:
       	ammo = gamestate.ammo;
          max_ammo = MAX_AMMO;
       break;
+#endif
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (gamestate.ammo)
+	{
+		temp = (gamestate.ammo*NUM_AMMO_SEGS)/MAX_AMMO;
+		if (!temp)
+			temp = 1;
+	}
+#else
 	if (ammo)
 	{
 		temp = (ammo*NUM_AMMO_SEGS)/max_ammo;
 		if (!temp)
 			temp = 1;
 	}
+#endif
 	else
 		temp = 0;
 
@@ -916,12 +1215,32 @@
 //---------------------------------------------------------------------------
 void DrawAmmoNum(void)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (gamestate.weapon == -1)
 		return;
+#endif
 
 	fontnumber = 2;
 	fontcolor = 0x9D;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	PrintX = 211;
+	PrintY = 200-STATUSLINES+38;
+	if (gamestate.ammo < MAX_AMMO)
+	{
+		PrintX += 5;
+		if (gamestate.ammo < 10)
+			PrintX += 5;
+	}
+	LatchDrawPic(26,188,AMMONUM_BACKGR);
+	LatchDrawPic(27,188,AMMONUM_BACKGR);
+	LatchDrawPic(28,188,AMMONUM_BACKGR);
+	VWB_Vlin(186,196,231,0);
+	US_PrintUnsigned(gamestate.ammo);
+	US_Print("%");
+#else
 	PrintX = 252;
 	PrintY = 200-STATUSLINES+38;
 
@@ -941,12 +1260,15 @@
    DrawGAmmoNum();
 
 #endif
+#endif // VERSIONS RESTORATION
 
 	DrawAmmoNum_COUNT--;
 }
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // DrawGAmmoNum()
 //---------------------------------------------------------------------------
@@ -968,12 +1290,21 @@
 	VW_DrawPropString(ultoa(gamestate.ammo,buffer,10));
 	VW_DrawPropString("%");
 }
+#endif
 
 //---------------------------------------------------------------------------
 // DrawAmmoPic()
 //---------------------------------------------------------------------------
 void DrawAmmoPic(void)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Basically the same behaviors, but not going through a switch
+#ifdef GAMEVER_RESTORATION_AOG
+	if (gamestate.weapon == wp_autocharge)
+		DrawAmmoMsg();
+	else
+		DrawAmmoGuage();
+#else
 	switch (gamestate.weapon)
 	{
 		case wp_autocharge:
@@ -988,6 +1319,7 @@
 			DrawAmmoGuage();
       break;
    }
+#endif
 
 	DrawAmmoPic_COUNT--;
 }
@@ -997,12 +1329,22 @@
 //---------------------------------------------------------------------------
 void DrawAmmoMsg(void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
 	if (gamestate.weapon_wait)
-		JLatchDrawPic(30,(200-STATUSLINES),WAITPIC);
+		GAMEVER_RESTORATION_LATCHDRAWPIC(29,(200-STATUSLINES),WAITPIC);
 	else
-		JLatchDrawPic(30,(200-STATUSLINES),READYPIC);
+		GAMEVER_RESTORATION_LATCHDRAWPIC(29,(200-STATUSLINES),READYPIC);
+#else
+	if (gamestate.weapon_wait)
+		GAMEVER_RESTORATION_LATCHDRAWPIC(30,(200-STATUSLINES),WAITPIC);
+	else
+		GAMEVER_RESTORATION_LATCHDRAWPIC(30,(200-STATUSLINES),READYPIC);
+#endif
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // DrawPDAmmoMsg() -
 //---------------------------------------------------------------------------
@@ -1013,6 +1355,7 @@
 	else
 		JLatchDrawPic(30,(200-STATUSLINES),WAITPIC);
 }
+#endif
 
 
 //---------------------------------------------------------------------------
@@ -1033,9 +1376,38 @@
 //---------------------------------------------------------------------------
 void DrawAmmoGuage(void)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	unsigned amount;
+	int ypos, y;
+
+	if (gamestate.ammo_leds)
+		amount = NUM_AMMO_SEGS-gamestate.ammo_leds;
+	else
+		amount = NUM_AMMO_SEGS-1;
+
+// Draw dim LEDs.
+//
+	for (y=155,ypos = 0;ypos < amount;ypos++,y++)
+	{
+		VW_Hlin (234,244,y,DimAmmo[0][amount]);
+		VW_Hlin (234,244,++y,DimAmmo[1][amount]);
+	}
+
+// Draw lit LEDs.
+//
+	for (;ypos<=NUM_AMMO_SEGS-1;ypos++,y++)
+	{
+		VW_Hlin (234,244,y,LitAmmo[0][amount]);
+		VW_Hlin (234,244,++y,LitAmmo[1][amount]);
+	}
+#else
 	DrawLedStrip(243,155,gamestate.ammo_leds,NUM_AMMO_SEGS);
+#endif
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 // UpdateRadarGuage()
 //---------------------------------------------------------------------------
@@ -1113,6 +1485,7 @@
 		VW_Hlin (x,x+4,y++,LitAmmo[1][amount]);
 	}
 }
+#endif // VERSIONS RESTORATION
 
 
 //---------------------------------------------------------------------------
@@ -1120,6 +1493,9 @@
 //---------------------------------------------------------------------------
 void	GiveAmmo (int ammo)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Should be similar to commented out code below for AOG, but without mentions
+// of the BFG
 
 #if MP_NO_MORE_AMMO > MP_BONUS
 	if (LastMsgType == MT_OUT_OF_AMMO)
@@ -1135,17 +1511,26 @@
 		gamestate.ammo = MAX_AMMO;
 	}
 
+#ifndef GAMEVER_RESTORATION_AOG
 	DrawAmmo(false);
+#endif
 
    if (gamestate.weapon != gamestate.chosenweapon)
 	{
+#ifdef GAMEVER_RESTORATION_AOG
+	   if (!((gamestate.chosenweapon == wp_grenade) && (gamestate.ammo < GRENADE_ENERGY_USE)))
+#else
 	   if (gamestate.useable_weapons & (1<<gamestate.chosenweapon))
+#endif
 		{
 			gamestate.weapon = gamestate.chosenweapon;
 			DrawWeapon ();
      	}
 	}
 
+#ifdef GAMEVER_RESTORATION_AOG
+	DrawAmmo(false);
+#endif
 	SD_PlaySound (GETAMMOSND);
 
 
@@ -1182,6 +1567,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 //ComputeAvailWeapons()
 //
@@ -1268,6 +1655,7 @@
 
 	ComputeAvailWeapons();
 }
+#endif // VERSIONS RESTORATION
 
 
 //---------------------------------------------------------------------------
@@ -1328,8 +1716,11 @@
 
       LastMsgType = MsgType;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       if (LastMsgType != MT_ATTACK)
       	LastInfoAttacker_Cloaked = 0;
+#endif
 
 		return(true);
 	}
@@ -1357,7 +1748,7 @@
 	InfoAreaSetup.y = INFOAREA_Y;
 	InfoAreaSetup.framecount = InfoAreaSetup.numanims = 0;
 
-	JLatchDrawPic(0,200-STATUSLINES,INFOAREAPIC);
+	GAMEVER_RESTORATION_LATCHDRAWPIC(0,200-STATUSLINES,INFOAREAPIC);
 }
 
 
@@ -1429,16 +1820,26 @@
 //---------------------------------------------------------------------------
 // DisplayTokens()
 //---------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char default_msg[] = {   "\r\r    NO MESSAGES."
+						  "^FCA8\r\r    FOOD TOKENS:      "
+						  };
+#else
 char default_msg[] = {   "\r    NO MESSAGES."
 						  "^FCA8\r    FOOD TOKENS:      "
 						  "                                 "
 						  };
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char needDetonator_msg[]="\r\r^FC39 FIND THE DETONATOR!";
 
 char haveDetonator_msg[]="\r\r^FC39DESTROY SECURITY CUBE!";
 
 char destroyGoldfire_msg[]="\r\r^FC39  DESTROY GOLDFIRE!";
+#endif
 
 void DisplayNoMoMsgs(void)
 {
@@ -1454,6 +1855,10 @@
 
 	MsgTicsRemain = 0;
 	StatusAllDrawPic (0,40,DIM_LIGHTPIC);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	sprintf((char *)&default_msg[42],"%-d",gamestate.tokens);
+#else
 	sprintf((char *)&default_msg[40],"%-d",gamestate.tokens);
 	if (gamestuff.level[gamestate.mapon+1].locked)
 	{
@@ -1477,6 +1882,7 @@
 			break;
 		}
 	}
+#endif
 
 	DisplayInfoMsg(default_msg,MP_max_val,0,MT_NOTHING);
 }
@@ -1567,12 +1973,22 @@
 
 				px = InfoAreaSetup.x+1;
 				py = InfoAreaSetup.y+1;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				USL_DrawString(first_ch);
+#else
 				VW_DrawPropString(first_ch);
+#endif
 				fontcolor = temp_color;
 
 				px = InfoAreaSetup.x;
 				py = InfoAreaSetup.y;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				USL_DrawString(first_ch);
+#else
 				VW_DrawPropString(first_ch);
+#endif
 			}
 
 			*scan_ch = temp;
@@ -1705,10 +2121,17 @@
 short DrawShape(short x, short y, short shapenum, pisType shapetype)
 {
 	short width;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	unsigned i,old_ofs;
+#else
 	unsigned i,old_ofs,shade;
+#endif
 
 //	width=TP_BoxAroundShape(x,y,shapenum,shapetype);
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	//
 	// If Image is Cloaked... Shade the image
 	//
@@ -1716,6 +2139,7 @@
 		shade = 35;				// 63 == BLACK | 0 == NO SHADING
 	else
 		shade = 0;
+#endif
 
 	switch (shapetype)
 	{
@@ -1724,9 +2148,19 @@
 //			for (i=0;i<3;i++)
 //			{
 //				bufferofs = screenloc[i];
-//				VWB_Bar(x,y,37,37,InfoAreaSetup.backgr_color);
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+				// This explains JTR comment, plus commented out call to VWB_Bar (VW_Bar -> VWB_Bar)
+#ifdef GAMEVER_RESTORATION_AOG
+				VWB_Bar(x,y,37,37,InfoAreaSetup.backgr_color);
+#else
 				VW_Bar(x,y,37,37,InfoAreaSetup.backgr_color);				// JTR changed
+#endif
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				MegaSimpleScaleShape(x+19,y+19,shapenum,37);
+#else
 				MegaSimpleScaleShape(x+19,y+20,shapenum,37,shade);
+#endif
 //			}
 //			bufferofs = old_ofs;
 			width = 37;
@@ -1739,7 +2173,7 @@
 //			for (i=0;i<3;i++)
 //			{
 //				bufferofs = screenloc[i];
-				JLatchDrawPic(x>>3,y,shapenum);
+				GAMEVER_RESTORATION_LATCHDRAWPIC(x>>3,y,shapenum);
 //			}
 //			bufferofs = old_ofs;
 		break;
@@ -1889,6 +2323,10 @@
 	//
 
 	UpdateScore();
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	UpdateHealth();
+#endif
 	UpdateInfoArea();
 
 	//
@@ -1898,16 +2336,25 @@
 	if (DrawAmmoPic_COUNT)
 		DrawAmmoPic();
 
-//	if (DrawScoreNum_COUNT)
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (DrawScoreNum_COUNT)
+#endif
 		DrawScoreNum();
 
 	if (DrawWeaponPic_COUNT)
 		DrawWeaponPic();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (DrawRadarGuage_COUNT)
 		DrawRadarGuage();
+#endif
 
-//	if (DrawAmmoNum_COUNT)
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (DrawAmmoNum_COUNT)
+#endif
 		DrawAmmoNum();
 
 	if (DrawKeyPics_COUNT)
@@ -1916,6 +2363,21 @@
 	if (DrawHealthNum_COUNT)
 		DrawHealthNum();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (DrawHealthMonitor_COUNT)
+		DrawHealthMonitor();
+
+	if (DrawHealthPic_COUNT)
+		DrawHealthPic();
+
+	if (DrawPulse_COUNT)
+	{
+		LatchDrawPic(15,184,ECG_GRID_PIECE);
+		DrawPulse_COUNT--;
+	}
+#endif
+
 	if (gamestate.flags & (GS_TICS_FOR_SCORE))
    	DrawScore();
 
@@ -1934,7 +2396,10 @@
 	DrawWeapon();
 	DrawKeys();
 	DrawHealth();
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	UpdateRadarGuage();
+#endif
 
 	for (i=0;i<3;i++)
 	{
@@ -1985,8 +2450,11 @@
 	{  5,HEALTH1SND,-1},    						// Water puddle
 };
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern char far bonus_msg24[];
 extern char far bonus_msg25[];
+#endif
 
 void GetBonus (statobj_t *check)
 {
@@ -1996,8 +2464,21 @@
 	switch (check->itemnumber)
 	{
 	case	bo_red_key:
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		gamestuff.level[gamestate.episode][gamestate.mapon+1].locked = false;
+		gamestate.key_floor = gamestate.mapon+1;
+#endif
 	case	bo_yellow_key:
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	case	bo_green_key:
+#endif
 	case	bo_blue_key:
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	case	bo_gold_key:
+#endif
 	{
 		unsigned keynum = check->itemnumber - bo_red_key;
 
@@ -2006,7 +2487,10 @@
 
 		GiveKey(keynum);
 		SD_PlaySound(GETKEYSND);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		TravelTable[check->tilex][check->tiley] &= ~TT_KEYS;
+#endif
 		break;
 	}
 
@@ -2073,11 +2557,14 @@
 		}
 		break;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case	bo_plasma_detonator:
 		TravelTable[check->tilex][check->tiley] &= ~TT_KEYS;
 		GivePlasmaDetonator(1);
 		SD_PlaySound (GETDETONATORSND);
 		break;
+#endif
 
 	case	bo_pistol:
 		SD_PlaySound (GETPISTOLSND);
@@ -2100,10 +2587,13 @@
 		break;
 
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case	bo_bfg_cannon:
 		SD_PlaySound (GETCANNONSND);
 		GiveWeapon (wp_bfg_cannon);
 		break;
+#endif
 
 
 	case bo_coin:
@@ -2111,7 +2601,10 @@
 			return;
 		GiveToken(1);
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		writeTokenStr(bonus_msg24);
+#endif
 	break;
 
 	case bo_coin5:
@@ -2119,9 +2612,14 @@
 			return;
 		GiveToken(5);
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		writeTokenStr(bonus_msg25);
+#endif
 	break;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case bo_automapper1:
 			if (gamestate.rpower > MAX_RADAR_ENERGY-(RADAR_PAK_VALUE/8))
 				return;
@@ -2129,6 +2627,7 @@
          SD_PlaySound(RADAR_POWERUPSND);
 			UpdateRadarGuage();
 		break;
+#endif
 	}
 
 	if (givepoints)
@@ -2147,6 +2646,8 @@
 	check->itemnumber = bo_nothing;
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void writeTokenStr(char far *str)
 {
 	char buffer[3],len;
@@ -2162,6 +2663,7 @@
 
 	_fstrcpy(str+len-2,buffer);
 }
+#endif
 
 
 /*
@@ -2331,7 +2833,10 @@
 	unsigned	offset, far *map[2];
 	short dx,dy;
 	int dangle;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    boolean ignore_map1;
+#endif
 
 	thrustspeed += speed;
 //
@@ -2345,8 +2850,11 @@
 
 	ClipMove(player,xmove,ymove);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    player_oldtilex = player->tilex;
    player_oldtiley = player->tiley;
+#endif
 	player->tilex = player->x >> TILESHIFT;		// scale to tile values
 	player->tiley = player->y >> TILESHIFT;
 
@@ -2365,11 +2873,22 @@
 		case DOORTRIGGERTILE:
 			dx = *map[1]>>8;									// x
 			dy = *map[1]&255;									// y
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Similar to a few bits of code from OperateSmartSwitch
+// NOTE: Borrowing "dangle" since the same var is apparently used in a few AOG EXEs.
+#ifdef GAMEVER_RESTORATION_AOG
+			dangle = tilemap[dx][dy] & ~0x80;
+			doorobjlist[dangle].lock = kt_none;
+			OpenDoor(dangle);
+#else
          if (OperateSmartSwitch(dx,dy,ST_TOGGLE,false))	// Operate & Check for removeal
          	*map[0] = AREATILE+player->areanumber;	// Remove switch
          ignore_map1 = true;
+#endif
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       case SMART_OFF_TRIGGER:
       case SMART_ON_TRIGGER:
 			dx = *map[1]>>8;
@@ -2377,6 +2896,7 @@
          OperateSmartSwitch(dx,dy,(*map[0])-SMART_OFF_TRIGGER,false);
          ignore_map1 = true;
       break;
+#endif
 
 		case WINTIGGERTILE:
 			playstate = ex_victorious;
@@ -2385,16 +2905,22 @@
 			dumb.flags = 0;
 			dangle=CalcAngle(player,&dumb);
 			RotateView(dangle,2);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          ignore_map1 = true;
 		break;
 
       default:
          ignore_map1 = false;
       break;
+#endif
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    if (!ignore_map1)
 	{
+#endif
 		// Change sky and ground color on-the-fly.
 		//
 
@@ -2428,7 +2954,10 @@
 			break;
 #endif
 		}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    }
+#endif
 
 }
 
@@ -2501,11 +3030,17 @@
 		case HIDDENAREATILE:
 		case DOORTRIGGERTILE:
 		case WINTIGGERTILE:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       case SMART_ON_TRIGGER:
       case SMART_OFF_TRIGGER:
+#endif
 		case AMBUSHTILE:
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case LINC_TILE:
 		case CLOAK_AMBUSH_TILE:
+#endif
 		break;
 
 		default:
@@ -2539,8 +3074,11 @@
 
 void Cmd_Fire (void)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (noShots)
 		return;
+#endif
 
 	if ((gamestate.weapon == wp_autocharge) && (gamestate.weapon_wait))
 		return;
@@ -2563,10 +3101,17 @@
 {
 	objtype 	*check;
 	int			checkx,checky,doornum,dir;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	boolean dir_horiz;
+#endif
 	unsigned iconnum;
 	unsigned offset,new_level;
 	unsigned char static interrogate_delay=0;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	boolean tryDetonator = false;
+#endif
 
 // Find which cardinal direction the player is facing
 //
@@ -2575,24 +3120,40 @@
 		checkx = player->tilex + 1;
 		checky = player->tiley;
 		dir = di_east;
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		dir_horiz = true;
+#endif
 	}
 	else if (player->angle < 3*ANGLES/8)
 	{
 		checkx = player->tilex;
 		checky = player->tiley-1;
 		dir = di_north;
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		dir_horiz = false;
+#endif
 	}
 	else if (player->angle < 5*ANGLES/8)
 	{
 		checkx = player->tilex - 1;
 		checky = player->tiley;
 		dir = di_west;
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		dir_horiz = true;
+#endif
 	}
 	else
 	{
 		checkx = player->tilex;
 		checky = player->tiley + 1;
 		dir = di_south;
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		dir_horiz = false;
+#endif
 	}
 
 	doornum = tilemap[checkx][checky];
@@ -2622,11 +3183,18 @@
 		// Test for 'display elevator buttons'
 		//
 			case TRANSPORTERTILE:
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			case ELEVATORTILE2:
+				if (dir_horiz)
+#endif
 			{
 				short new_floor;
 
 				if ((new_floor=InputFloor()) != -1 && new_floor != gamestate.mapon)
 				{
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 					int angle = player->angle;
 
 					gamestuff.level[gamestate.mapon].ptilex = player->tilex;
@@ -2635,8 +3203,14 @@
 					if (angle < 0)
 						angle += ANGLES;
 					gamestuff.level[gamestate.mapon].pangle = angle;
+#endif
 
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					playstate=ex_completed;
+#else
 					playstate=ex_transported;
+#endif
 					gamestate.lastmapon=gamestate.mapon;
 					gamestate.mapon=new_floor-1;
 				}
@@ -2688,9 +3262,12 @@
 				OperateConcession((int)actorat[checkx][checky]);
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			default:
 				tryDetonator = true;
 			break;
+#endif
 		}
 	}
 	else
@@ -2739,8 +3316,11 @@
 			else
 				interrogate_delay=120;		// Non-informants have 2 sec delay
 		}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		else
 			tryDetonator = true;
+#endif
 	}
 	else
 	{
@@ -2749,9 +3329,14 @@
 		else
 			interrogate_delay=0;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		tryDetonator = true;
+#endif
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (tryDetonator)
 	{
 		if ((!tryDetonatorDelay) && gamestate.plasma_detonators)
@@ -2762,6 +3347,7 @@
 	}
 	else
 		tryDetonatorDelay = 60;
+#endif
 
 	if (!buttonheld[bt_use])
 		interrogate_delay=0;
@@ -2913,6 +3499,13 @@
 
 extern boolean pollMouseUsed;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far * far if_msgs[] = {NULL, NULL, NULL, NULL, NULL, NULL};
+
+#define TOV_X  14
+#define TOV_Y	71
+#else
 char far if_help[]="UP/DN MOVES SELECTOR - ENTER ACTIVATES";
 char far if_noImage[]="   AREA\n"
 							 "  UNMAPPED\n"
@@ -2927,12 +3520,189 @@
 
 #define TOV_X  16
 #define TOV_Y	132
+#endif
 
 //--------------------------------------------------------------------------
 // InputFloor
 //--------------------------------------------------------------------------
 short InputFloor(void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// A few bits from functions like ActivateTerminal seem to be here
+#ifdef GAMEVER_RESTORATION_AOG
+	#define FULL_VIEW_WIDTH	19 // From 3D_MENU.C
+	#define RADAR_FLAGS		(OV_PLAYER|OV_NODEBUG|OV_HIDDEN|OV_DOORS|OV_KEYS)
+	#define MAX_TELEPORTS 	11
+
+	fontstruct _seg *font;
+	boolean buttonsNotReady = true;
+	short *currTeleX,*currTeleY;
+	short teleX[MAX_TELEPORTS]={256,280, 256,280, 256,280, 256,280, 256,280, 232};
+	short teleY[MAX_TELEPORTS]={92,92, 72,72, 52,52, 32,32, 12,12, 92};
+	short buttonX=0,buttonY,buttonPic=0,rt_code=-1;
+	char flClass=0,flNum;
+	boolean prepareStats=true;
+	byte flScan=0,lastFlScan=0,loop,msgNum;
+	unsigned oldwidth = viewwidth/16;
+
+	NewViewSize(FULL_VIEW_WIDTH);
+	StopMusic();
+	SD_StopSound();
+	ClearMemory();
+	DrawPlayScreen(true);
+
+	CacheDrawPic(8,22,TELEPORTBACKPIC);
+	fontnumber = 1;
+	CA_CacheGrChunk(STARTFONT+1);
+	CacheBMAmsg(FLOORMSG_TEXT);
+	fontnumber = 3;
+	CA_CacheGrChunk(STARTFONT+3);
+	font = (fontstruct _seg *)grsegs[STARTFONT+3];
+	font->height -= 3;
+	fontcolor = 0x97;
+	CacheLump(TELEPORT_LUMP_START,TELEPORT_LUMP_END);
+
+	for (loop=0, msgNum=0; loop<4; loop++, msgNum++)
+	{
+		CA_CacheGrChunk(ELEVMSG0_TEXT+loop);
+		if (loop == 2)
+			msgNum += 2;
+
+		if_msgs[msgNum] = (char far *)grsegs[ELEVMSG0_TEXT+loop];
+		TerminateStr(if_msgs[msgNum]);
+	}
+
+	ShowOverhead(TOV_X,TOV_Y,RADAR_FLAGS);
+	VW_MarkUpdateBlock(TOV_X,TOV_Y,227,134);
+
+	IN_ClearKeysDown();
+	// (VERSIONS RESTORATION) Allocate separate space for variables
+	currTeleX = teleX;
+	currTeleY = teleY;
+	while (1)
+	{
+		if (!flScan && (LastScan >= sc_1) && (LastScan <= sc_0))
+		{
+			buttonX = currTeleX[LastScan-sc_1];
+			buttonY = currTeleY[LastScan-sc_1];
+			buttonPic = LastScan-sc_1+TELEPORT1ONPIC;
+			flScan = LastScan;
+		}
+		if (flScan != lastFlScan)
+		{
+			if ((flNum = buttonPic+1-TELEPORT1ONPIC) != gamestate.mapon)
+			{
+				VWB_DrawPic(buttonX+8,buttonY+22,buttonPic);
+				lastFlScan = flScan;
+				if (gamestuff.level[gamestate.episode][flNum].locked)
+				{
+					if (flNum == gamestate.key_floor)
+						flClass = 5;
+					else
+						flClass = 4;
+					LastScan = 0;
+				}
+				else
+				{
+					if (flNum == gamestate.key_floor)
+					{
+						gamestate.numkeys[kt_red] = 0;
+						gamestate.key_floor = 0;
+						flClass = 1;
+					}
+					rt_code = flNum;
+				}
+				SD_PlaySound(ELEV_BUTTONSND);
+			}
+			else
+				flScan = 0;
+		}
+		else if (flScan && !Keyboard[flScan] && !buttonsNotReady)
+		{
+			VWB_DrawPic(buttonX+8,buttonY+22,buttonPic+TELEPORT1OFFPIC-TELEPORT1ONPIC);
+			flScan = lastFlScan = LastScan = flClass = 0;
+		}
+
+		if (Keyboard[sc_Escape])
+		{
+			Keyboard[sc_Escape] = false;
+			break;
+		}
+
+		if (flClass != -1)
+		{
+			fontcolor = 0x97;
+			WindowX = PrintX = 28;
+			if (flClass == 2)
+				WindowY = PrintY = 34;
+			else
+				WindowY = PrintY = 25;
+			VWB_DrawPic(24,26,TELEPORT_TEXT_BG);
+			US_Print(if_msgs[flClass]);
+			switch (flClass)
+			{
+			case 0:
+				fontcolor = 0x38;
+				PrintX = 168;
+				PrintY = 25;
+				US_PrintUnsigned(gamestate.mapon);
+				fontcolor = 0x97;
+			break;
+
+			case 4:
+				fontcolor = 0x38;
+				PrintX = 82;
+				PrintY = 25;
+				US_PrintUnsigned(flNum);
+				PrintX = px = 139;
+				PrintY = py = 42;
+			case 1:
+			case 5:
+				VW_UpdateScreen();
+				IN_UserInput(180);
+				buttonsNotReady = false;
+
+				while (Keyboard[flScan])
+					;
+			}
+			flClass = -1;
+		}
+		VW_UpdateScreen();
+		if (screenfaded)
+			VW_FadeIn();
+		if (prepareStats)
+		{
+			ShowStats(167,92,ss_normal);
+			prepareStats = false;
+			fontnumber = 3;
+		}
+		VW_WaitVBL(2);
+		CycleColors();
+
+		if (rt_code != -1)
+			break;
+	};
+
+	UNCACHEGRCHUNK(STARTFONT+3);
+	UNCACHEGRCHUNK(STARTFONT+1);
+
+	for (loop=0; loop<4; loop++)
+		UNCACHEGRCHUNK(ELEVMSG0_TEXT+loop);
+	UnCacheLump(TELEPORT_LUMP_START,TELEPORT_LUMP_END);
+
+	if (rt_code == -1)
+		StartMusic(false);
+	else
+		VW_FadeOut();
+
+	PM_CheckMainMem();
+	IN_ClearKeysDown();
+	NewViewSize(oldwidth);
+	DrawPlayScreen(false);
+
+	return(rt_code);
+
+#else // VERSIONS RESTORATION
 	#define RADAR_FLAGS		OV_KEYS
 	#define MAX_TELEPORTS 	20
 	#define MAX_MOVE_DELAY	10
@@ -3171,8 +3941,11 @@
 	IN_ClearKeysDown();
 
 	return(rt_code);
+#endif // VERSIONS RESTORATION
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 // ShowOverheadChunk()
 //--------------------------------------------------------------------------
@@ -3281,6 +4054,7 @@
 	VW_MarkUpdateBlock(54,101,265,108);
 	ShPrint(s,0,false);
 }
+#endif
 
 //--------------------------------------------------------------------------
 // CacheDrawPic()
@@ -3313,8 +4087,17 @@
 //--------------------------------------------------------------------------
 // ShowStats()
 //--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+short ShowStats(short bx, short by, ss_type type)
+#else
 short ShowStats(short bx, short by, ss_type type, statsInfoType far *stats)
+#endif
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	short floor,total=0,mission=0,p1,p2,p3,loop;
+#else
 	short floor,total=0,mission=0,p1,p2,p3,loop,maxPerFloor;
 
 // Define max points per floor...
@@ -3323,6 +4106,7 @@
 		maxPerFloor = 300;
 	else
 		maxPerFloor = 0;
+#endif
 
 // Setup to test for bypassing stats.
 //
@@ -3339,6 +4123,38 @@
 //      OVERALL FLOOR, OVERALL MISSION
 //
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+// Show TOTAL POINTS ratio.
+//
+	p1=ShowRatio(bx,by,bx+52,by,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_points,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_points,type);
+
+// Show INFORMANTS ALIVE ratio.
+//
+	by += 7;
+	p2=ShowRatio(bx,by,bx+52,by,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_inf,type);
+
+// Show ENEMY DESTROYED ratio.
+//
+	by += 7;
+	p3=ShowRatio(bx,by,bx+52,by,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_enemy,GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_enemy,type);
+
+// Show OVERALL FLOOR ratio.
+//
+	by += 12;
+	floor=p1+p2+p3;
+	ShowRatio(bx,by,bx+52,by,300,floor,type);
+
+// Show OVERALL MISSION ratio.
+//
+	by += 7;
+	GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.overall_floor=floor;
+	for (loop=1; loop<=MAPS_WITH_STATS; loop++)
+	{
+		total+=300;
+		mission+=gamestuff.level[gamestate.episode][loop].stats.overall_floor;
+	}
+#else
 // Show TOTAL POINTS ratio.
 //
 	p1=ShowRatio(bx,by,bx+52,by,stats->total_points,stats->accum_points,type);
@@ -3368,10 +4184,14 @@
 		total+=300;
 		mission+=gamestuff.level[loop].stats.overall_floor;
 	}
+#endif
 	mission=ShowRatio(bx,by,bx+52,by,total,mission,type);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (show_stats_quick)
 		VW_UpdateScreen();
+#endif
 
 	return(mission);
 }
@@ -3392,14 +4212,23 @@
 //
 	if (total)
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		numbars=LRATIO(48,total,perc,9);
+		maxperc=LRATIO(100,total,perc,9);
+#else
 		maxperc=LRATIO(100,total,perc,10);
 		numbars=LRATIO(48,100,maxperc,10);
+#endif
 	}
 	else
 	{
 		if (type != ss_justcalc)
 		{
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			fontcolor = 0x57;
+#endif
 			VW_Bar(bx,by,BAR_W,BAR_H,0);
 			VW_MarkUpdateBlock(bx,by,bx+(BAR_W-1),by+(BAR_H-1));
 			VW_Bar(nx,ny,PERC_W+6,PERC_H,0);
@@ -3424,6 +4253,18 @@
 		if (LastScan)
 			show_stats_quick=true;
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (show_stats_quick)
+		{
+			int barsleft = numbars-loop;
+			VW_Bar(bx,by,barsleft,BAR_H,0xC8);
+			VW_MarkUpdateBlock(bx,by,bx+barsleft-1,by+(BAR_H-1));
+			PrintStatPercent(nx,ny,maxperc);
+			break;
+		}
+		VW_WaitVBL(1);
+#endif
 	// Print one line of bar
 	//
 		VW_MarkUpdateBlock(bx,by,bx,by+(BAR_H-1));
@@ -3438,20 +4279,40 @@
 
 		PrintStatPercent(nx,ny,percentage);
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		if (!show_stats_quick)
 		{
+#endif
 			if (!(loop%2))
 				SD_PlaySound(STATS1SND);
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			VW_WaitVBL(1);
+#endif
 			VW_UpdateScreen();
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		}
+#endif
 	}
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (show_stats_quick)
+		VW_UpdateScreen();
+	else if (numbars)
+	{
+		SD_PlaySound(STATS2SND);
+		SD_WaitSoundDone();
+	}
+#else
 	if (!show_stats_quick && numbars)
 	{
 		SD_PlaySound(STATS2SND);
 		while (SD_SoundPlaying() && !LastScan);
 	}
+#endif
 
 	return(maxperc);
 }
@@ -3462,16 +4323,27 @@
 void PrintStatPercent(short nx, short ny, char percentage)
 {
 	if (percentage < 10)
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		PrintX=nx+8;
+#else
 		PrintX=nx+9;
+#endif
 	else
 	if (percentage < 100)
 		PrintX=nx+4;
 	else
 		PrintX=nx-1;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	VW_Bar(nx,ny,PERC_W,PERC_H,0);
+	US_PrintUnsigned(percentage);
+#else
 	VW_Bar(nx,ny,PERC_W+5,PERC_H,0);
 	US_PrintUnsigned(percentage);
 	US_Print("%");
+#endif
 }
 
 //--------------------------------------------------------------------------
@@ -3479,9 +4351,9 @@
 //--------------------------------------------------------------------------
 boolean PerfectStats()
 {
-	if ((gamestuff.level[gamestate.mapon].stats.total_points == gamestuff.level[gamestate.mapon].stats.accum_points) &&
-		 (gamestuff.level[gamestate.mapon].stats.total_inf == gamestuff.level[gamestate.mapon].stats.accum_inf) &&
-		 (gamestuff.level[gamestate.mapon].stats.total_enemy == gamestuff.level[gamestate.mapon].stats.accum_enemy))
+	if ((GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_points == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_points) &&
+		 (GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_inf) &&
+		 (GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_enemy == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_enemy))
 		return(true);
 
 	return(false);
@@ -3519,7 +4391,7 @@
 	for (i=0;i<3;i++)
 	{
 		bufferofs = screenloc[i];
-		JLatchDrawPic(0,0,TOP_STATUSBARPIC);
+		GAMEVER_RESTORATION_LATCHDRAWPIC(0,0,TOP_STATUSBARPIC);
 		ShadowPrintLocationText(sp_normal);
 	}
 
@@ -3607,7 +4479,14 @@
 
 // Check queue for bonuses
 //
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// For some unknown reason the compiler may bork here if we use
+	// the GAMEVER_RESTORATION_GAMESTUFF_LVL macro
+#ifdef GAMEVER_RESTORATION_AOG
+	for (loop=0; loop<sizeof(gamestuff.level[gamestate.episode][0].bonus_queue)*8; loop++)
+#else
 	for (loop=0; loop<sizeof(gamestuff.level[0].bonus_queue)*8; loop++)
+#endif
 		if ((BONUS_QUEUE & (1<<loop)) && (LastMsgPri < MP_PINBALL_BONUS))
 		{
 		// Start this bonus!
@@ -3661,18 +4540,18 @@
 
 // Check TOTAL ENEMY bonus
 //
-	if (gamestuff.level[gamestate.mapon].stats.total_enemy == gamestuff.level[gamestate.mapon].stats.accum_enemy)
+	if (GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_enemy == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_enemy)
 		ActivatePinballBonus(B_ENEMY_DESTROYED);
 
 // Check TOTAL POINTS bonus
 //
-	if (gamestuff.level[gamestate.mapon].stats.total_points == gamestuff.level[gamestate.mapon].stats.accum_points)
+	if (GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_points == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_points)
 		ActivatePinballBonus(B_TOTAL_POINTS);
 
 // Check INFORMANTS ALIVE bonus
 //
-	if ((gamestuff.level[gamestate.mapon].stats.total_inf == gamestuff.level[gamestate.mapon].stats.accum_inf) &&	// All informants alive?
-		  (gamestuff.level[gamestate.mapon].stats.total_inf) &&																							// Any informants in level?
+	if ((GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf == GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_inf) &&	// All informants alive?
+		  (GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf) &&																							// Any informants in level?
 		  ((BONUS_SHOWN & (B_TOTAL_POINTS|B_ENEMY_DESTROYED)) == (B_TOTAL_POINTS|B_ENEMY_DESTROYED)))														// Got ENEMY and POINTS bonuses?
 		ActivatePinballBonus(B_INFORMANTS_ALIVE);
 
@@ -3682,6 +4561,19 @@
 		DisplayPinballBonus();
 }
 
+//==========================================================================
+//
+//								WALL SWITCH ACTIVATION
+//
+//==========================================================================
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code from 3D_AGENT.C to a separate file, since these are a part
+// of 3D_AGENT.C in AOG v3.0, but instead are in 3D_ACT2.C as of PS.
+#ifdef GAMEVER_RESTORATION_AOG
+#include "3D_WSWTC.C"
+#endif
+
 //===========================================================================
 //
 //
@@ -4450,6 +5342,8 @@
 
 void SpawnPlayer (int tilex, int tiley, int dir)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (gamestuff.level[gamestate.mapon].ptilex &&
 		 gamestuff.level[gamestate.mapon].ptiley)
 	{
@@ -4457,6 +5351,7 @@
 		tiley = gamestuff.level[gamestate.mapon].ptiley;
 		dir = 1+(gamestuff.level[gamestate.mapon].pangle/90);
 	}
+#endif
 
 	player->obclass = playerobj;
 	player->active = true;
@@ -4476,7 +5371,10 @@
 
 	InitAreas ();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	InitWeaponBounce();
+#endif
 }
 
 
@@ -4538,8 +5436,13 @@
 			{
 				if (check->transx < viewdist)
 				{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+            	if (skip && (check->obclass == hang_terrotobj))
+#else
             	if ((skip && (check->obclass == hang_terrotobj))
 					   || (check->flags2 & FL2_NOTGUNSHOOTABLE))
+#endif
                	continue;
 
 					viewdist = check->transx;
@@ -4565,6 +5468,20 @@
 	dy = abs(closest->tiley - player->tiley);
 	dist = dx>dy ? dx:dy;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// This explains the given comments
+#ifdef GAMEVER_RESTORATION_AOG
+	if (dist<2)
+		damage = US_RndT() / 4;
+	else if (dist<4)
+		damage = US_RndT() / 6;
+	else
+	{
+		if ( (US_RndT() / 12) < dist)		// missed
+			return;
+		damage = US_RndT() / 6;
+	}
+#else
 	if (dist<2)
 		damage = US_RndT() / 2;			// 4
 	else if (dist<4)
@@ -4575,6 +5492,7 @@
 			return;
 		damage = US_RndT() / 4;			// 6
 	}
+#endif
 
 	DamageActor (closest,damage,player);
 }
@@ -4602,12 +5520,15 @@
 	atkinf_t	far *cur;
 	int x, wp_start;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (noShots)
 	{
 		ob->state = &s_player;
 		gamestate.attackframe = gamestate.weaponframe = 0;
 		return;
 	}
+#endif
 
 	if (gamestate.weapon == wp_autocharge)
 			UpdateAmmoMsg();
@@ -4646,7 +5567,12 @@
 			}
 			else
 			{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				if ((gamestate.weapon == wp_grenade) && (gamestate.ammo < GRENADE_ENERGY_USE))
+#else
 				if (!(gamestate.useable_weapons & (1<<gamestate.weapon)))
+#endif
 				{
 					gamestate.weapon = wp_autocharge;
 					DrawWeapon();
@@ -4656,6 +5582,8 @@
 			gamestate.attackframe = gamestate.weaponframe = 0;
 			return;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case -2:
 			ob->state = &s_player;
 			if (!gamestate.plasma_detonators)
@@ -4677,6 +5605,7 @@
 			}
 			gamestate.attackframe = gamestate.weaponframe = 0;
 			return;
+#endif
 
 		case 4:
 			if (!gamestate.ammo)
@@ -4756,6 +5685,8 @@
 		break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case 7:
 	   	TryDropPlasmaDetonator();
      		DrawAmmo(false);
@@ -4802,6 +5733,7 @@
 					DISPLAY_TIMED_MSG(WeaponMalfunction,MP_WEAPON_MALFUNCTION,MT_MALFUNCTION);
             }
 		break;
+#endif
 
 		}
 
@@ -4830,10 +5762,13 @@
 	if (gamestate.weapon == wp_autocharge)
 		UpdateAmmoMsg();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (tryDetonatorDelay > tics)
 		tryDetonatorDelay -= tics;
 	else
 		tryDetonatorDelay = 0;
+#endif
 
 	if ( buttonstate[bt_use] )
 	{
@@ -4845,7 +5780,10 @@
 		Cmd_Fire ();
 
 	ControlMovement (ob);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	HandleWeaponBounce();
+#endif
 
 
 //	plux = player->x >> UNSIGNEDSHIFT;			// scale to fit in unsigned
@@ -4854,7 +5792,9 @@
 	player->tiley = player->y >> TILESHIFT;
 }
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
 //-------------------------------------------------------------------------
 // RunBlakeRun()
 //-------------------------------------------------------------------------
@@ -4932,6 +5872,8 @@
 
 #endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //-------------------------------------------------------------------------
 // SW_HandleActor() - Handle all actors connected to a smart switch.
 //-------------------------------------------------------------------------
@@ -5289,3 +6231,4 @@
 			bounceOffset = wb_MinOffset;
 }
 
+#endif // RESTORATION
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DEBUG.C bstone/3D_DEBUG.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DEBUG.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/3D_DEBUG.C	2015-06-27 14:35:54.630223500 +0300
@@ -17,7 +17,12 @@
 #define VIEWTILEX	(viewwidth/16)
 #define VIEWTILEY	(viewheight/16)
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define MAX_WARP_LEVEL	10
+#else
 #define MAX_WARP_LEVEL	23
+#endif
 
 /*
 =============================================================================
@@ -280,6 +285,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //------------------------------------------------------------------------
 // CountTotals
 //------------------------------------------------------------------------
@@ -324,13 +331,16 @@
    memcpy(player,&old_player,sizeof(objtype));
 	IN_Ack ();
 }
+#endif
 
 
 //===========================================================================
 
 //===========================================================================
 
-#if IN_DEVELOPMENT
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#if (defined GAMEVER_RESTORATION_AOG) || IN_DEVELOPMENT
+//#if IN_DEVELOPMENT
 /*
 ================
 =
@@ -443,9 +453,28 @@
 			{
 				byte far *dp = (byte far *)MK_FP(addr,0);
 
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				for (j = 0;j < NumDigi; j++)
+				{
+					k = (DigiList[(j * 2) + 1] + (PMPageSize - 1)) / PMPageSize;
+					if ((PMSoundStart + DigiList[(j * 2)] <= i) && (PMSoundStart + DigiList[(j * 2)] + k > i))
+						break;
+				}
+
+				if (j < NumDigi)
+				{
+					sound = j;
+					US_Print("\n Sound #");
+					US_PrintUnsigned(j);
+					US_Print("\n Segment #");
+					US_PrintUnsigned(i - PMSoundStart - DigiList[(j * 2)]);
+				}
+#else
 	 			sound = i-PMSoundStart;
 				US_Print("\n Sound #");
 				US_PrintUnsigned(sound);
+#endif
 
 				for (j = 0;j < page->length;j += 32)
 				{
@@ -602,21 +631,27 @@
 		return 1;
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (Keyboard[sc_K])		// K = Map Content totals
 	{
 		CountTotals();
 		return 1;
 	}
+#endif
 	else if (Keyboard[sc_C])		// C = count objects
 	{
 		CountObjects();
 		return 1;
 	}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	else if (Keyboard[sc_R])		// C = count objects
 	{
 		ShowMap();
 		return 1;
 	}
+#endif
 	else if (Keyboard[sc_D])			// D = Dumb/Blind Objects (Player Invisable)
 	{
 		CenterWindow (19,3);
@@ -690,7 +725,12 @@
 		HealSelf (99);
 		GiveToken(5);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		for (i=wp_autocharge;i<=wp_grenade;i++)
+#else
 		for (i=wp_autocharge;i<=wp_bfg_cannon;i++)
+#endif
 			if (!(gamestate.weapons & (1<<i)))
 			{
 				GiveWeapon (i);
@@ -734,7 +774,9 @@
 #endif
 	else if (Keyboard[sc_Q])			// Q = fast quit
 		Quit (NULL);
-#if IN_DEVELOPMENT
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#if (defined GAMEVER_RESTORATION_AOG) || IN_DEVELOPMENT
+//#if IN_DEVELOPMENT
 	else if (Keyboard[sc_T])			// T = shape test
 	{
 		ShapeTest ();
@@ -762,7 +804,12 @@
 		IN_Ack();
 
 		for (i=0;i<11;i++)
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			gamestuff.level[gamestate.episode][i].locked=false;
+#else
 			gamestuff.level[i].locked=false;
+#endif
 
       return 1;
 	}
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DEF.H bstone/3D_DEF.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DEF.H	1994-10-24 18:20:18.000000000 +0200
+++ bstone/3D_DEF.H	2015-06-27 14:35:54.632839000 +0300
@@ -10,12 +10,31 @@
 //#define TRACK_ENEMY_COUNT
 #define OBJ_RESERV
 
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_BS1_210
+#define __VERSION__ "2.10S"
+#elif (defined GAMEVER_RESTORATION_BS6_210)
+#define __VERSION__ "2.10R"
+#elif (defined GAMEVER_RESTORATION_VSI_100)
+#define __VERSION__ "1.00"
+#elif (defined GAMEVER_RESTORATION_VSI_101)
 #define __VERSION__ "V1.01"
+#elif (defined GAMEVER_RESTORATION_BS1_300)
+#define __VERSION__ "3.00S"
+#elif (defined GAMEVER_RESTORATION_BS6_300)
+#define __VERSION__ "3.00R"
+#endif
 
 #define GOLD_MORPH_LEVEL				(19)			// Level which Dr. GoldFire Morphs.
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define VERSION_TEXT_COLOR				(0x82)
+#define VERSION_TEXT_BKCOLOR			(0x00)
+#else
 #define VERSION_TEXT_COLOR				(0x82)
 #define VERSION_TEXT_BKCOLOR			(0x80)
+#endif
 
 #define NO_SHADING						((char)0x80)
 #define LAMP_ON_SHADING					((char)-12)
@@ -26,9 +45,19 @@
 #define BETA_TEST							(false)
 #define LOOK_FOR_DEAD_GUYS				(false)
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define BETA_CODE						   "CAGES"
+#else
 #define BETA_CODE						   "NEWGAME"
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define MIN_MEM_NEEDED				(209000l)
+#else
 #define MIN_MEM_NEEDED				(231568l)		// 560K
+#endif
 #define LIMITED_AMMO
 
 #define SHADE_MAX						51
@@ -43,9 +72,16 @@
 
 #define DISK_SPACE_NEEDED	(1024l*1024l)
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define BORDER_HI_COLOR		0x86
+#define BORDER_MED_COLOR	0x83
+#define BORDER_LO_COLOR		0x81
+#else
 #define BORDER_HI_COLOR		0x85
 #define BORDER_MED_COLOR	0x82
 #define BORDER_LO_COLOR		0x80
+#endif
 #define BORDER_TEXT_COLOR	0xaf
 
 
@@ -111,7 +147,10 @@
 #define ABS(x)          ((int)(x)>0?(x):-(x))
 #define LABS(x)         ((long)(x)>0?(x):-(x))
 
-//#define STATUSDRAWPIC(x, y, picnum)			JLatchDrawPic((x),(y+(200-STATUSLINES)),(picnum))
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Just for a little bit of consistency (even though this is commented out)...
+// Use our macro instead of JLatchDrawPic.
+//#define STATUSDRAWPIC(x, y, picnum)			GAMEVER_RESTORATION_LATCHDRAWPIC((x),(y+(200-STATUSLINES)),(picnum))
 
 #define FMAPWIDTH			((fixed)mapwidth<<TILESHIFT)
 #define FMAPHEIGHT		((fixed)mapheight<<TILESHIFT)
@@ -138,7 +177,12 @@
 
 // Barrier Code Stuff
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define MAX_BARRIER_SWITCHES	  		5	 // max number level wall switches
+#else
 #define MAX_BARRIER_SWITCHES	  		40	 // max number level wall switches
+#endif
 
 
 #define SLIDE_TEMP(obj)				((unsigned)obj->hitpoints)
@@ -169,9 +213,18 @@
 
 #define DOOR_RUBBLE_STATNUM				112			// Door Rubble sprite
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// It looks like SpawnCusExplosion was an upgraded version of what was
+// probably once SpawnExplosion, and there may be a similar history for
+// the InitAnim names.
+// NOTE: We let SpawnExplosion be an actual function in AOG v3.0.
+#ifdef GAMEVER_RESTORATION_AOG
+#define InitSmartSpeedAnim(a, b, c, d, e, f, g)   InitAnim((a),(b),(c),(d),(e),(f),(g))
+#else
+#define InitSmartSpeedAnim(a, b, c, d, e, f, g)   InitAnim((a),(b),(c),(d),(e),(f),(g),(g))
 #define SpawnExplosion(a,b)							  SpawnCusExplosion((a),(b),SPR_EXPLOSION_1,4,5,explosionobj)
 #define SpawnFlash(a,b)									  SpawnCusExplosion((a),(b),SPR_EXPLOSION_1,4,5,deadobj)
-#define InitSmartSpeedAnim(a, b, c, d, e, f, g)   InitAnim((a),(b),(c),(d),(e),(f),(g),(g))
+#endif
 
 /*
 =============================================================================
@@ -181,10 +234,23 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define OV_ACTORS	0x0002
+#define OV_PLAYER	0x0004
+#define OV_NODEBUG	0x0008
+#define OV_HIDDEN	0x0010
+#define OV_TILES	0x0020
+#define OV_ROTATED	0x0080
+#define OV_DOORS	0x0100
+#define OV_KEYS		0x0200
+#define OV_PUSHWALLS	0x0400
+#else
 #define OV_ACTORS		0x0001
 #define OV_SHOWALL 	0x0002
 #define OV_KEYS		0x0004
 #define OV_PUSHWALLS	0x0008
+#endif
 
 #define TT_TRAVELED	0x01
 #define TT_KEYS		0x02
@@ -228,8 +294,11 @@
 #define HIDDENAREATILE			  	162										 // first of hidden floor tiles
 #define NUMAREAS                	45
 #define DOORTRIGGERTILE				158
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 #define SMART_OFF_TRIGGER			159
 #define SMART_ON_TRIGGER			160
+#endif
 #define ELEVATORTILE2				27										 // Space Will Switch
 #define TRANSPORTERTILE    	  	21
 #define DIRECTTRANSPORTTILE		32										 // Wall to use on direct level transporters
@@ -242,10 +311,13 @@
 #define BKEY_TILE        			74
 #define BFG_TILE        			75
 #define ION_TILE        			76
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 #define DETONATOR_TILE    			77
 #define CLOAK_TILE    				78
 #define LINC_TILE    				79
 #define CLOAK_AMBUSH_TILE			80
+#endif
 #define EATILE							24
 #define ON_SWITCH						45										// ON Wall Switch -
 #define OFF_SWITCH					57										// OFF Wall Switch -
@@ -344,8 +416,11 @@
 //#define NUM_AMMO_SEGS				42			// 42 Color segments (OR 21 2-Color segs)
 #define MAX_AMMO 						100		// Max ammount of ammo for any weapon
 #define AUTOCHARGE_WAIT				50			// Tics wait time for a full charge
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 #define MAX_PLASMA_DETONATORS		100		// Max number of Plasma Detonators	 
 #define PLASMA_DETONATORS_DELAY	60*4		// Number of tics before plasma detonator explodes
+#endif
 
 
 
@@ -376,6 +451,10 @@
 #define GS_NOWAIT						0x2000
 #define GS_STARTLEVEL				0x4000
 #define GS_QUICKRUN					0x8000
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define GS_TAB_ROTATED_MAP				0x10000
+#endif
 
 // object flag values - Oh Shit Longs!
 
@@ -415,6 +494,8 @@
 #define FL_BARRIER_DAMAGE		FL_HAS_TOKENS
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 // object flags2 values
 
 #define FL2_BFGSHOT_SOLID				0x0001
@@ -431,6 +512,8 @@
 #define FL2_LINC							0x0800
 #define FL2_DAMAGE_CLOAK				0x1000
 
+#endif
+
 
 // Run Reason Flags -- Why am I running..Duh..
 
@@ -592,8 +675,11 @@
 #endif
 		SPR_STAT_77,SPR_STAT_78,SPR_STAT_79,
 
-		SPR_DOORBOMB,SPR_ALT_DOORBOMB,SPR_RUBBLE,SPR_BONZI_TREE,			// OBJECTS1V
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+SPR_DOORBOMB,SPR_ALT_DOORBOMB,SPR_RUBBLE,SPR_BONZI_TREE,			// OBJECTS1V
 		SPR_AUTOMAPPER,SPR_POT_PLANT,SPR_TUBE_PLANT,SPR_HITECH_CHAIR,
+#endif
 
 
 //
@@ -611,10 +697,13 @@
 		SPR_STEAM_PIPE,
 		SPR_PIPE_STEAM_1,SPR_PIPE_STEAM_2,SPR_PIPE_STEAM_3,SPR_PIPE_STEAM_4,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //
 // Dead Actors (from Blake Stone: AOG)
 //
 		SPR_DEAD_RENT, SPR_DEAD_PRO, SPR_DEAD_SWAT,
+#endif
 
 //
 // Rent-A-Cop
@@ -737,6 +826,8 @@
 		SPR_GOLD_WARP1,SPR_GOLD_WARP2,SPR_GOLD_WARP3,SPR_GOLD_WARP4,
 		SPR_GOLD_WARP5,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		SPR_GOLD_DEATH1,SPR_GOLD_DEATH2,SPR_GOLD_DEATH3,SPR_GOLD_DEATH4,
 		SPR_GOLD_DEATH5,SPR_MGOLD_OUCH,
 
@@ -748,6 +839,7 @@
 
       SPR_MGOLD_SHOT1,SPR_MGOLD_SHOT2,SPR_MGOLD_SHOT3,
       SPR_MGOLD_SHOT_EXP1,SPR_MGOLD_SHOT_EXP2,SPR_MGOLD_SHOT_EXP3,
+#endif
 
 //
 //		GROUND SCOUT
@@ -797,17 +889,22 @@
 		SPR_EXPLOSION_1,SPR_EXPLOSION_2,SPR_EXPLOSION_3,SPR_EXPLOSION_4,
 		SPR_EXPLOSION_5,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Comment out for AOG (Registered): The rotating cube
+// replaced the vital in PS (at least sort-of).
+#ifdef GAMEVER_RESTORATION_AOG
 //
 //		VITAL DEFENCE OBJECT
 //
-//#if GAME_VERSION != SHAREWARE_VERSION
-//		SPR_VITAL_STAND,
-//		SPR_VITAL_DIE_1, SPR_VITAL_DIE_2, SPR_VITAL_DIE_3,SPR_VITAL_DIE_4,
-//		SPR_VITAL_DIE_5, SPR_VITAL_DIE_6, SPR_VITAL_DIE_7, SPR_VITAL_DIE_8,
-//		SPR_VITAL_DEAD_1,SPR_VITAL_DEAD_2,SPR_VITAL_DEAD_3,
-//		SPR_VITAL_OUCH,
-//#endif
+#if GAME_VERSION != SHAREWARE_VERSION
+		SPR_VITAL_STAND,
+		SPR_VITAL_DIE_1, SPR_VITAL_DIE_2, SPR_VITAL_DIE_3,SPR_VITAL_DIE_4,
+		SPR_VITAL_DIE_5, SPR_VITAL_DIE_6, SPR_VITAL_DIE_7, SPR_VITAL_DIE_8,
+		SPR_VITAL_DEAD_1,SPR_VITAL_DEAD_2,SPR_VITAL_DEAD_3,
+		SPR_VITAL_OUCH,
+#endif
 
+#else
 //
 //		ROTATING CUBE
 //
@@ -817,6 +914,7 @@
       SPR_CUBE_EXP1,SPR_CUBE_EXP2,SPR_CUBE_EXP3,SPR_CUBE_EXP4,
       SPR_CUBE_EXP5,SPR_CUBE_EXP6,SPR_CUBE_EXP7,SPR_CUBE_EXP8,
 		SPR_DEAD_CUBE,
+#endif
 
 
 //
@@ -884,10 +982,13 @@
 		SPR_MUTHUM2_OUCH,
 		SPR_MUTHUM2_SPIT1,SPR_MUTHUM2_SPIT2,SPR_MUTHUM2_SPIT3,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       SPR_MUTHUM2_MORPH1,SPR_MUTHUM2_MORPH2,SPR_MUTHUM2_MORPH3,SPR_MUTHUM2_MORPH4,
       SPR_MUTHUM2_MORPH5,SPR_MUTHUM2_MORPH6,SPR_MUTHUM2_MORPH7,SPR_MUTHUM2_MORPH8,
       SPR_MUTHUM2_MORPH9,
 #endif
+#endif
 
 //
 // Large Cantained Alien
@@ -993,17 +1094,27 @@
 		SPR_ELEC_ARC1,SPR_ELEC_ARC2,SPR_ELEC_ARC3,SPR_ELEC_ARC4,
 		SPR_ELEC_POST1,SPR_ELEC_POST2,SPR_ELEC_POST3,SPR_ELEC_POST4,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       SPR_VPOST1,SPR_VPOST2,SPR_VPOST3,SPR_VPOST4,
 		SPR_VPOST5,SPR_VPOST6,SPR_VPOST7,SPR_VPOST8,
 
       SPR_VSPIKE1,SPR_VSPIKE2,SPR_VSPIKE3,SPR_VSPIKE4,
 		SPR_VSPIKE5,SPR_VSPIKE6,SPR_VSPIKE7,SPR_VSPIKE8,
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// These shouldn't be in the shareware, use dummy_sprite_t values instead
+#if GAME_VERSION != SHAREWARE_VERSION
 		SPR_GREEN_OOZE1,SPR_GREEN_OOZE2,SPR_GREEN_OOZE3,
 		SPR_BLACK_OOZE1,SPR_BLACK_OOZE2,SPR_BLACK_OOZE3,
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
   		SPR_GREEN2_OOZE1,SPR_GREEN2_OOZE2,SPR_GREEN2_OOZE3,
 		SPR_BLACK2_OOZE1,SPR_BLACK2_OOZE2,SPR_BLACK2_OOZE3,
+#endif
 
 		SPR_CANDY_BAR,SPR_CANDY_WRAPER,
 		SPR_SANDWICH,SPR_SANDWICH_WRAPER,
@@ -1020,9 +1131,12 @@
 		SPR_BOSS1_OUCH,
 		SPR_BOSS1_PROJ1,SPR_BOSS1_PROJ2,SPR_BOSS1_PROJ3,
 		SPR_BOSS1_EXP1,SPR_BOSS1_EXP2,SPR_BOSS1_EXP3,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       SPR_BOSS1_MORPH1,SPR_BOSS1_MORPH2,SPR_BOSS1_MORPH3,SPR_BOSS1_MORPH4,
       SPR_BOSS1_MORPH5,SPR_BOSS1_MORPH6,SPR_BOSS1_MORPH7,SPR_BOSS1_MORPH8,
       SPR_BOSS1_MORPH9,
+#endif
 
 //
 // BOSS 2
@@ -1055,10 +1169,13 @@
 		SPR_BOSS4_DEAD,
 		SPR_BOSS4_DIE1,SPR_BOSS4_DIE2,SPR_BOSS4_DIE3,SPR_BOSS4_DIE4,
 		SPR_BOSS4_OUCH,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       SPR_BOSS4_MORPH1,SPR_BOSS4_MORPH2,SPR_BOSS4_MORPH3,SPR_BOSS4_MORPH4,
       SPR_BOSS4_MORPH5,SPR_BOSS4_MORPH6,SPR_BOSS4_MORPH7,SPR_BOSS4_MORPH8,
       SPR_BOSS4_MORPH9,
 #endif
+#endif
 
 //
 // BOSS 5
@@ -1085,6 +1202,8 @@
 #endif
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //
 // BOSS 7
 //
@@ -1163,6 +1282,7 @@
 //
       SPR_BFG_EXP1, SPR_BFG_EXP2, SPR_BFG_EXP3, SPR_BFG_EXP4,
       SPR_BFG_EXP5, SPR_BFG_EXP6, SPR_BFG_EXP7, SPR_BFG_EXP8,
+#endif // GAMEVER RESTORATION
 
 
 
@@ -1541,11 +1661,14 @@
 {
    bt_OFF,
 	bt_ON,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    bt_DISABLING,
    bt_DISABLED,
 
    bt_OPENING,				// For physical barriers
    bt_CLOSING,				//	      " " "
+#endif
 
 } barrier_state_type;
 
@@ -1572,8 +1695,17 @@
 #define B_TOTAL_POINTS			0x0020
 #define B_INFORMANTS_ALIVE		0x0040
 
-#define BONUS_QUEUE gamestuff.level[gamestate.mapon].bonus_queue
-#define BONUS_SHOWN gamestuff.level[gamestate.mapon].bonus_shown
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// It looks like the episode and map number are both used in various places
+// within AOG v3.0, while only the map is specified in PS.
+#ifdef GAMEVER_RESTORATION_AOG
+#define GAMEVER_RESTORATION_GAMESTUFF_LVL(m) gamestuff.level[gamestate.episode][m]
+#else
+#define GAMEVER_RESTORATION_GAMESTUFF_LVL(m) gamestuff.level[m]
+#endif
+
+#define BONUS_QUEUE GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).bonus_queue
+#define BONUS_SHOWN GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).bonus_shown
 
 #define PinballBonusShown(bonus)		(BONUS_SHOWN & bonus)
 #define ActivatePinballBonus(bonus) if (!PinballBonusShown(bonus)) BONUS_QUEUE |= bonus
@@ -1592,9 +1724,23 @@
 	char  frame;		// attack is 1 for gun, 2 for knife
 } atkinf_t;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+typedef struct
+{
+	byte tilex;
+	byte tiley;
+	byte dir;
+} playerwarp_t;
+#endif
 
 typedef enum				// NOTE - This enum list is ORDERED!
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	mv_ending1,
+	mv_ending2,
+#endif
 	mv_intro,
 	mv_final,
 	mv_NUM_MOVIES,
@@ -1626,7 +1772,14 @@
 	kt_none =-1,
 	kt_red,
 	kt_yellow,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	kt_green,
+#endif
 	kt_blue,
+#ifdef GAMEVER_RESTORATION_AOG
+	kt_gold,
+#endif
 	NUMKEYS,
 } keytype;
 
@@ -1667,10 +1820,20 @@
 	liquidobj,
 	swatobj,
 	goldsternobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	gold_morphobj,
+#endif
 	volatiletransportobj,
 	floatingbombobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// We can actually use rotating_cubeobj in AOG,
+// but it's clearer if we use a more suitable name
+#ifdef GAMEVER_RESTORATION_AOG
+	vitalobj,
+#else
 	rotating_cubeobj,
+#endif
 
 	spider_mutantobj,
 	breather_beastobj,
@@ -1679,10 +1842,13 @@
 	acid_dragonobj,
 	mech_guardianobj,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    final_boss1obj,
    final_boss2obj,
    final_boss3obj,
    final_boss4obj,
+#endif
 
 	blakeobj,
 
@@ -1692,21 +1858,30 @@
 
 	green_oozeobj,
 	black_oozeobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	green2_oozeobj,
 	black2_oozeobj,
+#endif
 	podeggobj,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    morphing_spider_mutantobj,
    morphing_reptilian_warriorobj,
    morphing_mutanthuman2obj,
+#endif
 
 	SPACER1_OBJ,
 	electroshotobj,			// NON-HITPOINT objects...
 	post_barrierobj,
 	arc_barrierobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	vpost_barrierobj,
 	vspike_barrierobj,
    goldmorphshotobj,
+#endif
 
 	security_lightobj,
 	explosionobj,
@@ -1725,13 +1900,19 @@
 	playerspshotobj,
 	flickerlightobj,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	plasma_detonatorobj,
 	plasma_detonator_reserveobj,
+#endif
 
 	grenadeobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	bfg_shotobj,
 	bfg_explosionobj,
 	pd_explosionobj,
+#endif
 
 	spider_mutantshotobj,
 	breather_beastshotobj,
@@ -1739,12 +1920,15 @@
 	reptilian_warriorshotobj,
 	acid_dragonshotobj,
 	mech_guardianshotobj,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	final_boss2shotobj,
 	final_boss4shotobj,
 
 	doorexplodeobj,    			         	// Door explosion_anim acto
 	gr_explosionobj,
 	gold_morphingobj,
+#endif
 
 } classtype;
 
@@ -1760,7 +1944,14 @@
 
 	bo_red_key,
 	bo_yellow_key,
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	bo_green_key,
+#endif
 	bo_blue_key,
+#ifdef GAMEVER_RESTORATION_AOG
+	bo_gold_key,
+#endif
 
 	bo_clip,
 	bo_clip2,
@@ -1768,7 +1959,10 @@
 	bo_burst_rifle,
 	bo_ion_cannon,
 	bo_grenade,
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    bo_bfg_cannon,	 
+#endif
 
    // START of Bonus Health Ordered list
 
@@ -1800,8 +1994,11 @@
 	bo_coin,
 	bo_coin5,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	bo_plasma_detonator,				  
 	bo_automapper1,
+#endif
 
 	bo_nothing,
 
@@ -1848,10 +2045,20 @@
 	en_liquid,
 	en_swat,
 	en_goldstern,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	en_gold_morph,
+#endif
 	en_volatiletransport,
 	en_floatingbomb,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// We can actually use en_rotating_cube in AOG,
+// but it's clearer if we use a more suitable name
+#ifdef GAMEVER_RESTORATION_AOG
+	en_vital,
+#else
 	en_rotating_cube,
+#endif
 
 	en_spider_mutant,
 	en_breather_beast,
@@ -1860,10 +2067,13 @@
 	en_acid_dragon,
 	en_mech_guardian,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    en_final_boss1,
    en_final_boss2,
    en_final_boss3,
    en_final_boss4,
+#endif
 
 	en_blake,
 
@@ -1873,21 +2083,30 @@
 
 	en_green_ooze,
 	en_black_ooze,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	en_green2_ooze,
 	en_black2_ooze,
+#endif
 	en_podegg,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    en_morphing_spider_mutant,
    en_morphing_reptilian_warrior,
    en_morphing_mutanthuman2,
+#endif
 
 	NUMHITENEMIES,
 
 	en_electro_shot,			// Actors WITHOUT hitpoints (abnormal actors?)
 	en_post_barrier,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	en_arc_barrier,
 	en_vpost_barrier,
 	en_vspike_barrier,
+#endif
    en_goldmorphshot,
 
 	en_security_light,
@@ -1907,8 +2126,11 @@
 	en_playerspshotobj,
 	en_flickerlight,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	en_plasma_detonator,
 	en_plasma_detonator_reserve,
+#endif
 
 	en_vertsphere,				// Actor types only used for spawning.
 	en_horzsphere,
@@ -1959,10 +2181,18 @@
 {
 	byte    		tilex,tiley;
 	boolean 		vertical;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	char	 		flags;
+#endif
 	keytype    	lock;
 	door_t  		type;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	enum    		{dr_open,dr_closed,dr_opening,dr_closing}       action;
+#else
 	enum    		{dr_open,dr_closed,dr_opening,dr_closing,dr_jammed}       action;
+#endif
 	int         ticcount;
 	byte    		areanumber[2];
 } doorobj_t;
@@ -1985,7 +2215,10 @@
 	statetype *state;
 
 	unsigned long flags;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    unsigned flags2;				// Aux flags
+#endif
 
 	long distance;				// if negative, wait for that door to open
 	dirtype dir;
@@ -2001,7 +2234,10 @@
 	int hitpoints;
 	unsigned char ammo;
    char lighting;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	unsigned linc;
+#endif
 	int angle;
 	long speed;
 
@@ -2027,10 +2263,13 @@
 	bt_ready_burst_rifle,
 	bt_ready_ion_cannon,
 	bt_ready_grenade,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    bt_ready_bfg_cannon,
    bt_ready_plasma_detonators,
 
    bt_SPACER,
+#endif
 
    NUMBUTTONS,							
 };
@@ -2043,8 +2282,11 @@
 	wp_burst_rifle,
 	wp_ion_cannon,
 	wp_grenade,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	wp_bfg_cannon,
 //	wp_plasma_detonators,
+#endif
 
    wp_SPACER,
    NUMWEAPONS,
@@ -2110,21 +2352,34 @@
 	unsigned bonus_shown;				// bonuses that have been shown
 	boolean locked;
 	statsInfoType stats;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	byte ptilex,ptiley;
 	int pangle;
+#endif
 } levelinfo;
 
 
 typedef struct
 {
 	levelinfo	old_levelinfo[MAPS_PER_EPISODE];
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	levelinfo 	level[NUM_EPISODES][MAPS_PER_EPISODE];
+#else
 	levelinfo 	level[MAPS_PER_EPISODE];
+#endif
 } fargametype;
 
 typedef struct
 {
 	int			turn_around,turn_angle;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	long 	flags;
+#else
 	unsigned 	flags;
+#endif
 	int			lastmapon;
 	int         difficulty;
 	int         mapon;
@@ -2134,19 +2389,28 @@
 	int         lives;
 	int         health;
 	int			health_delay;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	int			heartbeattics;
+	int			heartrate;
+#else
 	char			health_str[4];
-
 	int			rpower,old_rpower;
 	char 			rzoom;
+
 	char			radar_leds,lastradar_leds;
+#endif
 
 	char			lastammo_leds;
 	char			ammo_leds;
 	int         ammo,old_ammo;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	int			plasma_detonators,old_plasma_detonators;		
 
    char 			useable_weapons;		 
+#endif
 	char			weapons,weapon,chosenweapon,old_weapons[4];
 	char			key_floor;
 
@@ -2157,8 +2421,15 @@
 	long     	killx,killy;
 	char 			far *msg;					// InfoArea msg...
 	char			numkeys[NUMKEYS],old_numkeys[NUMKEYS];
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	char			secrettotal;
+	barrier_type barrier_table[MAX_BARRIER_SWITCHES*MAPS_PER_EPISODE];
+	barrier_type old_barrier_table[MAX_BARRIER_SWITCHES*MAPS_PER_EPISODE];
+#else
 	barrier_type barrier_table[MAX_BARRIER_SWITCHES];
 	barrier_type old_barrier_table[MAX_BARRIER_SWITCHES];
+#endif
 	unsigned		tokens,old_tokens;
 	boolean		boss_key_dropped,old_boss_key_dropped;
 	int 			wintilex,wintiley;
@@ -2195,7 +2466,10 @@
 			viewheight,
 			shapenum;
    char lighting;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    char cloaked;
+#endif
 } visobj_t;
 
 
@@ -2246,7 +2520,10 @@
 	MP_BONUS 								= 0x0200,
 
 	MP_TAKE_DAMAGE							= 0x0200,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    MP_DETONATOR							= 0x0200,
+#endif
 
 	MP_PINBALL_BONUS						= 0x3000,
 	MP_FLOOR_UNLOCKED						= 0x3000,
@@ -2389,13 +2666,22 @@
 =============================================================================
 */
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define TITLE_LOOP_MUSIC	GOLDA_MUS
+#else
 #define TITLE_LOOP_MUSIC	PLOT_MUS
+#endif
 
 #define CANT_PLAY_TXT "\n"																	\
 							 "ERROR: Insufficient disk space.\n"                  \
 							 "Try deleting some files from your hard disk.\n\n"
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+extern char destPath[];
+#endif
 extern char tempPath[];
 
 extern const   float   radtoint;	// = (float)FINEANGLES/2/PI;
@@ -2462,7 +2748,12 @@
 void 				AlignPlayerOnTransporter(void);
 
 unsigned UseFunc(char huge *first, char huge *next);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+boolean DoMovie(movie_t movie);
+#else
 boolean DoMovie(movie_t movie, memptr palette);
+#endif
 boolean CheckDiskSpace(long needed,char far *text,cds_io_type io_type);
 boolean SaveTheGame(int handle, char far *description);
 long ChecksumFile(char *file, long checksum);  
@@ -2479,11 +2770,21 @@
 void CleanUpDoors_N_Actors(void);
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void MakeDestPath(char *file);
+#else
 void MakeDestPath(char far *file);
+#endif
 void InitDestPath(void);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Prototype was apparently missing in AOG v3.0, so the compiler "assumes"
+// that FindChunk returns a 16-bit int within SetupSaveGames
+#ifndef GAMEVER_RESTORATION_AOG
 extern long FindChunk(int file, char *chunk);
 extern long NextChunk(int file);
+#endif
 
 /*
 =============================================================================
@@ -2500,8 +2801,17 @@
 extern GoldsternInfo_t GoldsternInfo;
 
 extern unsigned char VitalsRemain,VitalsOnFloor;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+extern  playerwarp_t playerwarp;
+#endif
 
 extern  eaWallInfo eaList[];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+extern  statobj_t        *KeyStatObjs[];
+extern  char NumKeys;
+#endif
 extern  char NumEAWalls,NumEASpawned;
 extern  boolean         ingame,fizzlein,screensplit;
 extern  unsigned        latchpics[NUMLATCHPICS];
@@ -2620,7 +2930,11 @@
 
 void ChangeSwapFiles(boolean display);
 void OpenPageFile(void);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// CheckMusicToggle is "inlined" within CheckKeys AOG v3.0
+#ifndef GAMEVER_RESTORATION_AOG
 void CheckMusicToggle(void);	 
+#endif
 
 /*
 =============================================================================
@@ -2655,7 +2969,10 @@
 extern long space_xmove,space_ymove;	
 
 extern  long    lasttimecount;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern  long    framecount;
+#endif
 extern  long    frameon;
 extern  boolean fizzlein;
 
@@ -2693,7 +3010,10 @@
 
 extern  unsigned        pwallpos;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern boolean cloaked_shape;
+#endif
 
 fixed   FixedByFrac (fixed a, fixed b);
 void    TransformActor (objtype *ob);
@@ -2715,7 +3035,12 @@
 void WrapDrawScaleds (void);
 boolean WrapActorPosition(objtype *obj);
 void WrapStaticPosition(statobj_t *statptr, visobj_t *visptr);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void ShowOverhead(short bx, short by, unsigned flags);
+#else
 void ShowOverhead(short bx, short by, short radius, short zoom, unsigned flags);
+#endif
 void UpdateTravelTable(void);
 
 
@@ -2826,7 +3151,12 @@
 void SetupScaling (int maxscaleheight);
 void ScaleShape (int xcenter, int shapenum, unsigned height);
 void SimpleScaleShape (int xcenter, int shapenum, unsigned height);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void MegaSimpleScaleShape (int xcenter, int ycenter, int shapenum, unsigned height);
+#else
 void MegaSimpleScaleShape (int xcenter, int ycenter, int shapenum, unsigned height, unsigned shade);
+#endif
 
 /*
 =============================================================================
@@ -2846,12 +3176,20 @@
 extern byte NumAreaMsgs,LastInfArea;
 extern short FirstGenInfMsg,TotalGenInfMsgs;
 extern classtype LastInfoAttacker;						 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern int LastInfoAttacker_Cloaked;
+#endif
 
 extern char term_com_name[];
 extern char term_msg_name[];
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+extern atkinf_t far attackinfo[5][14];
+#else
 extern atkinf_t far attackinfo[7][14];
+#endif
 
 //
 // player state info
@@ -2863,8 +3201,11 @@
 extern char DrawInfoArea_COUNT;
 extern char InitInfoArea_COUNT;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern unsigned player_oldtilex;
 extern unsigned player_oldtiley;
+#endif
 
 // Terminal variables
 
@@ -2874,7 +3215,17 @@
 
 extern char LocationText[MAX_LOCATION_DESC_LEN];
 
-void JLatchDrawPic (unsigned x, unsigned y, unsigned picnum);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// AOG v3.0 doesn't have JLatchDrawPic, so use a macro for simplification
+// (it is NOT the same as STATUSDRAWPIC).
+#ifdef GAMEVER_RESTORATION_AOG
+#define GAMEVER_RESTORATION_LATCHDRAWPIC LatchDrawPic
+#else
+#define GAMEVER_RESTORATION_LATCHDRAWPIC JLatchDrawPic
+#endif
+
+void GAMEVER_RESTORATION_LATCHDRAWPIC (unsigned x, unsigned y, unsigned picnum);
+//void JLatchDrawPic (unsigned x, unsigned y, unsigned picnum);
 
 
 //
@@ -2927,20 +3278,40 @@
 void		TakeKey(int key);
 void	GiveToken (int tokens);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void	TakePlasmaDetonator (int count);		  
 void	GivePlasmaDetonator (int count);		  
+#endif
 
 void CacheDrawPic(short x, short y, short pic);	
 void LoadTerminalCommands(void);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Hacks used for 3D_ACT2.C and relocated code (3D_WSWTC.C)
+#ifdef GAMEVER_RESTORATION_AOG
+#define GAMEVER_RESTORATION_BARRIER_PTR(floor,num) ((barrier_type *)((byte *)gamestate.barrier_table + (20*(floor)+4*((num)&15))))
+#define GAMEVER_RESTORATION_BARRIER_CODE(floor,num) ((((floor)*16)|((num)&15))&255)
+#endif
+
 void ActivateWallSwitch(unsigned iconnum, short x, short y);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+unsigned UpdateBarrierTable(unsigned char x, unsigned char y, unsigned char level);
+#else
 unsigned UpdateBarrierTable(unsigned char x, unsigned char y, boolean OnOff);
+#endif
 unsigned ScanBarrierTable(unsigned char x, unsigned char y);
 void DisplaySwitchOperateMsg(unsigned coords);
 
 void DisplayNoMoMsgs(void);
 void PrintStatPercent(short nx, short ny, char percentage);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+short ShowStats(short bx, short by, ss_type type);
+#else
 short ShowStats(short bx, short by, ss_type type, statsInfoType far *stats);
+#endif
 boolean PerfectStats(void);
 boolean CheckPerfectStats(void);
 boolean OperateSmartSwitch(unsigned tilex, unsigned tiley, char Operation, boolean Force);
@@ -2994,6 +3365,8 @@
 void CacheConcessionMsg(void);
 boolean ReuseMsg(mCacheInfo *ci, short count, short struct_size);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void DropPlasmaDetonator(void);
 void BlockDoorOpen(int door);
 void BlastNearDoors(int tilex, int tiley);
@@ -3003,6 +3376,7 @@
 statobj_t *UseReservedStatic(int itemtype, int tilex, int tiley);
 void PlaceReservedItemNearTile(int itemtype, int tilex, int tiley);
 void ExplodeStatics(int tilex, int tiley);
+#endif
 
 
 /*
@@ -3018,15 +3392,24 @@
 
 #define	BARRIER_STATE(obj)	((obj)->ammo)
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define InitSmartAnim(obj, ShapeNum, StartOfs,  MaxOfs, AnimType,  AnimDir)						\
+        InitSmartSpeedAnim(obj, ShapeNum, StartOfs, MaxOfs, AnimType, AnimDir, 30)
+#else
 #define InitSmartAnim(obj, ShapeNum, StartOfs,  MaxOfs, AnimType,  AnimDir)						\
         InitSmartSpeedAnim(obj, ShapeNum, StartOfs, MaxOfs, AnimType, AnimDir, 7)
+#endif
 
 
 
 void MakeFakeStatic(objtype *ob);
 void UnmakeFakeStatic(objtype *ob);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern char detonators_spawned;
+#endif
 extern int far	starthitpoints[][NUMHITENEMIES];			
 extern unsigned far MorphClass[];
 
@@ -3102,6 +3485,8 @@
 extern statetype s_goldwarp_out1;
 extern statetype s_goldwarp_in1;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern statetype s_goldmorph1;
 extern statetype s_goldmorph2;
 extern statetype s_goldmorph3;
@@ -3122,6 +3507,7 @@
 extern statetype s_mgold_shoot4;
 
 extern statetype s_mgold_pain;
+#endif
 
 extern statetype s_security_light;
 
@@ -3156,8 +3542,11 @@
 extern statetype s_vital_die8;
 
 extern statetype s_ooze_chase;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern statetype s_vpost_barrier;
 extern statetype s_spike_barrier;
+#endif
 
 void T_PainThink(objtype *obj);
 void T_ExplodeScout(objtype *obj);
@@ -3194,7 +3583,12 @@
 void AdvanceAnimREV(objtype *obj);
 void AdvanceAnimFWD(objtype *obj);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void SpawnExplosion(fixed x, fixed y);
+#else
 void SpawnCusExplosion(fixed x, fixed y, unsigned StartFrame, unsigned NumFrames, unsigned Delay, unsigned Class);
+#endif
 void T_SpawnExplosion(objtype *obj);
 void T_ExplodeDamage(objtype *obj);
 
@@ -3203,11 +3597,21 @@
 extern statetype s_barrier_transition;
 extern statetype s_barrier_shutdown;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void SpawnBarrier (enemy_t which, int tilex, int tiley,boolean OnOff);
+#endif
 void ToggleBarrier(objtype *obj);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void InitAnim(objtype *obj, unsigned ShapeNum, unsigned char StartOfs, unsigned char MaxOfs, animtype_t AnimType, animdir_t AnimDir, unsigned Delay);
+#else
 void InitAnim(objtype *obj, unsigned ShapeNum, unsigned char StartOfs, unsigned char MaxOfs, animtype_t AnimType, animdir_t AnimDir, unsigned Delay, unsigned WaitDelay);
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 objtype *FindObj(classtype which, short tilex, short tiley);
 objtype *FindHiddenOfs(classtype which);
 void SpawnHiddenOfs(enemy_t which, int tilex, int tiley);
@@ -3215,6 +3619,7 @@
 
 void CheckForSpecialTile(objtype *obj, unsigned tilex, unsigned tiley);
 void DropCargo(objtype *obj);
+#endif
 
 
 /*
@@ -3255,8 +3660,11 @@
 extern char far attacker_info_disabled[];
 extern char far WeaponNotAvailMsg[];
 extern char far WeaponAvailMsg[];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern char far RadarAvailMsg[];
 extern char far RadarEnergyGoneMsg[];
+#endif
 extern char far WeaponAutoSelectMsg[];
 extern char far EnergyPackDepleted[];
 extern char far NotEnoughEnergyForWeapon[];
@@ -3275,6 +3683,8 @@
 extern char far SoundOn[];
 extern char far SoundOff[];
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern char far pd_dropped[];
 extern char far pd_nomore[];
 extern char far pd_switching[];
@@ -3284,6 +3694,7 @@
 extern char far pd_donthaveany[];
 extern char far pd_no_computer[];
 extern char far pd_floornotlocked[];
+#endif
 
 
 
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DRAW2.C bstone/3D_DRAW2.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DRAW2.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/3D_DRAW2.C	2015-06-27 14:35:54.635979800 +0300
@@ -77,12 +77,20 @@
 	if (gamestate.flags & GS_LIGHTING)
 	{
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	i=shade_max-(63l*(long)height/(long)normalshade);
+#else
 	i=shade_max-(63l*(unsigned long)height/(unsigned long)normalshade);
+#endif
 	if (i<0)
 		i=0;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    else
    	if (i>63)
       	i = 63;
+#endif
 	shadingtable=lightsource+(i<<8);
 	plane = startplane = x1&3;
 	prestep = viewwidth/2 - x1;
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DRAW.C bstone/3D_DRAW.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_DRAW.C	1994-07-29 11:31:48.000000000 +0300
+++ bstone/3D_DRAW.C	2015-06-27 14:35:54.634856600 +0300
@@ -26,7 +26,10 @@
 
 #define ACTORSIZE	0x4000
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void DrawRadar(void);
+#endif
 
 /*
 =============================================================================
@@ -54,7 +57,10 @@
 
 long 	lasttimecount;
 long 	frameon;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 long framecount;
+#endif
 
 unsigned	wallheight[MAXVIEWWIDTH];
 
@@ -126,9 +132,12 @@
 unsigned viewflags;
 extern byte lightson;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 // Global Cloaked Shape flag..
 
 boolean cloaked_shape = false;
+#endif
 
 
 
@@ -456,13 +465,21 @@
 	if (gamestate.flags & GS_LIGHTING)
 		{
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		i=shade_max-(63l*(long)height/(long)normalshade);
+#else
 		i=shade_max-(63l*(unsigned long)height/(unsigned long)normalshade);
+#endif
 
 		if (i<0)
 			i=0;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       else
       	if (i > 63)
          	i = 63;					// Debugging.. put break point here!
+#endif
 
 		shadingtable=lightsource+(i<<8);
 		bufx=postx>>2;
@@ -715,8 +732,11 @@
 
 	doornum = tilehit&0x7f;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (doorobjlist[doornum].action == dr_jammed)
 		return;
+#endif
 
 #ifdef WOLFDOORS
 	texture = ((xintercept-doorposition[doornum]) >> 4) &0xfc0;
@@ -857,8 +877,11 @@
 
 	doornum = tilehit&0x7f;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (doorobjlist[doornum].action == dr_jammed)
 		return;
+#endif
 
 #ifdef WOLFDOORS
 	texture = ( (yintercept-doorposition[doornum]) >> 4) &0xfc0;
@@ -1385,7 +1408,10 @@
 		if (!visptr->viewheight)
 			continue;						// to close to the object
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		visptr->cloaked = false;
+#endif
 		visptr->lighting = statptr->lighting;			// Could add additional
         															// flashing/lighting
 		if (visptr < &vislist[MAXVISABLE-1])	// don't let it overflow
@@ -1433,6 +1459,10 @@
 			if (!obj->viewheight)
 				continue;						// too close or far away
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			visptr->lighting = obj->lighting;
+#else
          if ((obj->flags2 & (FL2_CLOAKED|FL2_DAMAGE_CLOAK)) == (FL2_CLOAKED))
          {
 				visptr->cloaked = 1;
@@ -1446,6 +1476,7 @@
 
 			if (!(obj->flags & FL_DEADGUY))
 				obj->flags2 &= ~FL2_DAMAGE_CLOAK;
+#endif
 
 			visptr->viewx = obj->viewx;
 			visptr->viewheight = obj->viewheight;
@@ -1489,12 +1520,20 @@
       // Init our global flag...
       //
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       cloaked_shape = farthest->cloaked;
+#endif
 
 		//
 		// draw farthest
 		//
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (gamestate.flags & GS_LIGHTING && (farthest->lighting != NO_SHADING))
+#else
 		if (gamestate.flags & GS_LIGHTING && (farthest->lighting != NO_SHADING) || cloaked_shape)
+#endif
 			ScaleLSShape(farthest->viewx,farthest->shapenum,farthest->viewheight,farthest->lighting);
 		else
 			ScaleShape(farthest->viewx,farthest->shapenum,farthest->viewheight);
@@ -1502,7 +1541,10 @@
 		farthest->viewheight = 32000;
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	cloaked_shape = false;
+#endif
 
 }
 
@@ -1520,9 +1562,17 @@
 */
 
 int	weaponscale[NUMWEAPONS] = {SPR_KNIFEREADY,SPR_PISTOLREADY
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		,SPR_MACHINEGUNREADY,SPR_CHAINREADY,SPR_GRENADEREADY,0};
+#else
 		,SPR_MACHINEGUNREADY,SPR_CHAINREADY,SPR_GRENADEREADY,SPR_BFG_WEAPON1,0};
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 boolean useBounceOffset=false;
+#endif
 
 void DrawPlayerWeapon (void)
 {
@@ -1534,6 +1584,8 @@
 	if (gamestate.weapon != -1)
 	{
 		shapenum = weaponscale[gamestate.weapon]+gamestate.weaponframe;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		if (shapenum)
 		{
 			static int vh=63;
@@ -1546,7 +1598,10 @@
 			int centery;
 
 			useBounceOffset=true;
-#if 1
+#endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+//#if 1
 #if 0
 			if (Keyboard[sc_PgUp])
 			{
@@ -1590,10 +1645,13 @@
 #else
 			SimpleScaleShape(viewwidth/2,shapenum,viewheight+1);
 #endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			useBounceOffset=false;
 
 			viewheight=oldviewheight;
 		}
+#endif
 	}
 }
 
@@ -1651,7 +1709,10 @@
 		} while (!tics);			// make sure at least one tic passes
 
 		lasttimecount = newtime;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       framecount++;
+#endif
 
 #ifdef FILEPROFILE
 			strcpy (scratch,"\tTics:");
@@ -1756,13 +1817,24 @@
 		LatchDrawPic(0,0,TOP_STATUSBARPIC);
 		ShadowPrintLocationText(sp_normal);
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		LatchDrawPic(0,200-STATUSLINES,STATUSBARPIC);
+#else
 		JLatchDrawPic(0,200-STATUSLINES,STATUSBARPIC);
+#endif
 		DrawAmmoPic();
 		DrawScoreNum();
 		DrawWeaponPic();
 		DrawAmmoNum();
 		DrawKeyPics();
 		DrawHealthNum();
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		DrawHealthMonitor();
+		DrawHealthPic();
+		LatchDrawPic(15,184,ECG_GRID_PIECE);
+#endif
 
 		bufferofs += SCREENSIZE;
 		if (bufferofs > PAGE3START)
@@ -1804,8 +1876,12 @@
 	bufferofs = displayofs = screenloc[0];
 #endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Different location for AOG
+#ifndef GAMEVER_RESTORATION_AOG
 	UpdateInfoAreaClock();
 	UpdateStatusBar();
+#endif
 
 	bufferofs += screenofs;
 
@@ -1882,7 +1958,11 @@
 
 #endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Different location for AOG
+#ifndef GAMEVER_RESTORATION_AOG
 	UpdateTravelTable();
+#endif
 
 //
 // draw all the scaled images
@@ -1906,7 +1986,21 @@
 
 	bufferofs -= screenofs;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	displayofs = bufferofs;
+
+	if (gamestate.flags & GS_SHOW_OVERHEAD)
+	{
+		if (Keyboard[sc_LShift] || Keyboard[sc_RShift])
+			ShowOverhead(0,136,OV_ACTORS|OV_PLAYER|OV_NODEBUG|OV_HIDDEN|OV_ROTATED|OV_DOORS|OV_KEYS);
+		else
+			ShowOverhead(0,136,OV_ACTORS|OV_PLAYER|OV_HIDDEN|OV_ROTATED|OV_DOORS|OV_KEYS);
+	}
+	UpdateTravelTable();
+#else
 	DrawRadar();
+#endif
 
 //	VW_WaitVBL(1);		// mike check this out
 
@@ -1914,6 +2008,13 @@
 	NextBuffer();
 #endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Different location for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+	UpdateInfoAreaClock();
+	UpdateStatusBar();
+#endif
+
 	frameon++;
 	PM_NextFrame();
 }
@@ -1968,6 +2069,8 @@
 extern short an_offset[];
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 // DrawRadar()
 //--------------------------------------------------------------------------
@@ -1997,13 +2100,160 @@
 
 clock_t tc_start,tc_end;
 unsigned tc_time;
+#endif
 
 
 //--------------------------------------------------------------------------
 // ShowOverhead()
 //--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void ShowOverhead(short bx, short by, unsigned flags)
+#else
 void ShowOverhead(short bx, short by, short radius, short zoom, unsigned flags)
+#endif
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	#define PLAYER_COLOR 	0xf1
+
+	extern byte pixmasks[];
+
+	statobj_t **stat;
+	fixed xoff,yoff,baselmx,baselmy,dx,dy,psin,pcos;
+	unsigned far *ptr[2];
+	short iconnum;
+	byte lastmask=0xFF,mask,unmappedcolor;
+	short mx,my,mapx,mapy,playertx,playerty,angle;
+	boolean checkhidden=true,drawplayerok=true;
+	byte color,tile,door;
+	objtype *ob;
+
+	stat = KeyStatObjs;
+	playertx = player->tilex;
+	playerty = player->tiley;
+	xoff = (1L<<21)|8L;
+	yoff = (1L<<21)|8L;
+
+	angle = (ANGLES-1-player->angle)-ANGLES/2;
+	if (angle < 0)
+		angle += ANGLES;
+
+	psin = sintable[angle];
+	pcos = costable[angle];
+
+	unmappedcolor = 6; /* Default (unmapped) gray shade of color */
+	VW_Bar (bx,by,MAPSIZE,MAPSIZE,unmappedcolor);
+	ptr[0] = mapsegs[0];
+	ptr[1] = mapsegs[1];
+
+	for (mapy=0;mapy<MAPSIZE;++mapy)
+		for (mapx=0;mapx<MAPSIZE;++mapx,ptr[0]++,ptr[1]++)
+		{
+			color = unmappedcolor;
+			if (flags & OV_ROTATED)
+			{
+				dx = xoff-(((unsigned long)mapx<<TILESHIFT)+8);
+				dy = (((unsigned long)mapy<<TILESHIFT)+8)-yoff;
+				baselmx = FixedByFrac(dy,pcos)-FixedByFrac(dx,psin);
+				baselmy = FixedByFrac(dy,psin)+FixedByFrac(dx,pcos);
+
+				mx = playertx+(baselmx>>16);
+				my = playerty+(baselmy>>16);
+
+				if (mx<0 || mx>63 || my<0 || my>63)
+					continue;
+			}
+			else
+			{
+				mx = mapx;
+				my = mapy;
+			}
+			tile=tilemap[mx][my];
+			door=tile&0x3f;
+			ob=(objtype *)actorat[mx][my];
+			iconnum = *(mapsegs[1]+farmapylookup[my]+mx);
+
+			if (tile)
+			{
+				checkhidden = false;
+				if ((flags & OV_DOORS) && (tile & 0x80))
+				{
+					if (doorobjlist[door].type == dr_elevator)
+						color = 0xfb;
+					else if (doorobjlist[door].lock != kt_none)
+						color = 0x18;
+					else if (doorobjlist[door].action == dr_closed)
+						color = 0x58;
+					else
+						checkhidden = true;
+				}
+			}
+
+			if (checkhidden)
+			{
+				if (flags & OV_HIDDEN)
+				{
+					GetAreaNumber(mx,my);
+					if (GAN_HiddenArea)
+						color = 0x52;
+					else
+						color = 0x55;
+				}
+				if (flags & OV_TILES)
+					color = *(ptr[0])&0xFF;
+			}
+			else
+				checkhidden = true;
+
+			if ((flags & OV_ACTORS) && (ob >= objlist))
+				color = 0x10+ob->obclass;
+
+			if ((flags & OV_PUSHWALLS) && (iconnum == PUSHABLETILE))
+			{
+				if (TravelTable[mx+1][my]
+				||  TravelTable[mx-1][my]
+				||  TravelTable[mx][my+1]
+				||  TravelTable[mx][my-1]
+				||  !(flags & OV_NODEBUG))
+				{
+					color = 0xf7;
+					TravelTable[mx][my] = TT_TRAVELED;
+				}
+			}
+
+			if ((flags & OV_KEYS) && stat && ((*stat)->tilex == mx) && ((*stat)->tiley == my))
+			{
+				if (((*stat)->shapenum != -1) && ((*stat)->itemnumber >= bo_red_key) && ((*stat)->itemnumber <= bo_gold_key))
+					color = 0xf2;
+				++stat;
+			}
+
+			if (flags & OV_NODEBUG)
+				if (!TravelTable[mx][my])
+					color = unmappedcolor;
+
+			if ((flags & OV_PLAYER) && (player->tilex == mx) && (player->tiley == my) && drawplayerok)
+			{
+				color = PLAYER_COLOR;
+				drawplayerok = false;
+			}
+
+			if (color != unmappedcolor)
+			{
+				mask = pixmasks[(bx+mapx)&3];
+				if (mask != lastmask)
+				{
+					lastmask = mask;
+					VGAMAPMASK(mask);
+				}
+				// (VERSIONS RESTORATION) This is compiled to the desired code
+				*(byte far *)MK_FP(SCREENSEG,ylookup[by+mapy]+((bx+mapx)>>2)+bufferofs) = color;
+			}
+		}
+
+	VGAMAPMASK(15);
+#else // VERSIONS RESTORATION
 	#define PLAYER_COLOR 	0xf1
 	#define UNMAPPED_COLOR	0x52
 	#define MAPPED_COLOR		0x55
@@ -2211,4 +2461,5 @@
 	}
 
 	VGAMAPMASK(15);
+#endif
 }
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_GAME.C bstone/3D_GAME.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_GAME.C	1994-09-01 13:52:20.000000000 +0200
+++ bstone/3D_GAME.C	2015-06-27 14:35:54.638195100 +0300
@@ -40,7 +40,16 @@
 boolean		ingame,fizzlein;
 unsigned	latchpics[NUMLATCHPICS];
 eaWallInfo eaList[MAXEAWALLS];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+statobj_t        *KeyStatObjs[NUMKEYS+1];
+char NumKeys;
+#endif
 char NumEAWalls;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+playerwarp_t playerwarp;
+#endif
 
 tilecoord_t far GoldieList[GOLDIE_MAX_SPAWNS];	 
 GoldsternInfo_t GoldsternInfo;
@@ -91,9 +100,16 @@
    74,			// Gore 2
 	32,			// red key
 	33,			// yel key
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   34,		// grn key
+   35,		// blu key
+   36,		// gld key
+#else
    52-23,		// grn key
    35,			// blu key
    488-375,		// gld key
+#endif
 };
 
 
@@ -292,16 +308,26 @@
 	unsigned	x,y,i,j;
 	int			tile;
 	unsigned	far	*start, far *floor;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	boolean gotlight = false,gottextures = false;
+#endif
 
 #ifdef CEILING_FLOOR_COLORS
 	boolean gotcolors=false;
 #endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	boolean gottextures = false;
+#endif
 
 #if IN_DEVELOPMENT
 	db_count=0;
 #endif
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	detonators_spawned = 0;
+#endif
 
 #ifdef TRACK_ENEMY_COUNT
 memset(numEnemy,0,sizeof(numEnemy));
@@ -318,6 +344,8 @@
 
 
          tile = *start++;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          //
          // Check for tiles/icons to ignore...
          //
@@ -329,6 +357,7 @@
             	// Ignore all values/icons on top of these tiles...
            	continue;
          }
+#endif
 			tilehi = (tile&0xff00)>>8;
 			tilelo = (tile&0xff);
 
@@ -394,8 +423,19 @@
 					continue;
 				break;
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
 				case 0xF6:									// Lighting effects
+					/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+					// Bit different code from released
+#if 1
+					x++;
+					tile = *start++;
+					normalshade_div = tile&0xff;
+					shade_max = tile&0xff;
+					normalshade=(3*(maxscale>>2))/normalshade_div;
+#else
 					if (gotlight)
 						break;
 					x++;
@@ -410,6 +450,7 @@
 
 					normalshade=(3*(maxscale>>2))/normalshade_div;
 					gotlight = true;
+#endif
 					continue;
 				break;
 #endif
@@ -538,7 +579,13 @@
 			case 20:
 			case 21:
 			case 22:
-				SpawnPlayer(x,y,NORTH+tile-19);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				if (playstate == ex_transported)
+					SpawnPlayer(playerwarp.tilex,playerwarp.tiley,(1-(playerwarp.dir>>1))&3);
+				else
+#endif
+					SpawnPlayer(x,y,NORTH+tile-19);
 			break;
 
 			case 85:					// Money bag
@@ -609,7 +656,10 @@
 			case 68:
 			case 69:
 			case 70:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          case 71:					// BFG Weapon		  
+#endif
 			case 72:					// Gurney Mutant
 			case 73:             // Large Canister
 			case 74:             // Small Canister
@@ -677,6 +727,8 @@
 				SpawnStatic(x,y,tile-315);
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case 486:				// Plasma Detonator
 				SpawnHiddenOfs(en_plasma_detonator_reserve, x, y);			// Spawn a reserve  
 				SpawnStatic(x,y,486-375);
@@ -693,6 +745,7 @@
 			case 495:				// AOG: Swat Guard - Dead.
 				SpawnStatic(x,y,tile-375);
 			break;
+#endif
 
 
 			case 393:				// crate 2
@@ -751,6 +804,18 @@
 			break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+
+			case 174:
+				SpawnOffsetObj(en_goldmorphshot,x,y);
+			break;
+
+			case 175:
+				SpawnOffsetObj(en_post_barrier,x,y);
+			break;
+
+#else // GAMEVER RESTORATION
 
 		// Arc Barrier
 		//
@@ -825,6 +890,7 @@
 				SpawnBarrier(en_vspike_barrier,x,y,0);
 				break;
 
+#endif // GAMEVER RESTORATION
 
 		//
 		// STEAM GRATE
@@ -860,6 +926,8 @@
 					GoldieList[GoldsternInfo.SpawnCnt].tiley=y;
 					GoldsternInfo.SpawnCnt++;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 					if (gamestate.mapon == GOLD_MORPH_LEVEL)
 					{
 						AddTotalPoints(actor_points[goldsternobj-rentacopobj]);
@@ -868,9 +936,12 @@
 numEnemy[goldsternobj]++;
 #endif
 					}
+#endif
 				}
 				break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		//
 		// GOLDFIRE SPAWN - IMMEDEATLY
 		//
@@ -895,6 +966,7 @@
 					new = NULL;
 				}
 				break;
+#endif
 
 //
 // P wall
@@ -919,10 +991,21 @@
 		// Rotating Cube
 		//
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#if GAME_VERSION != SHAREWARE_VERSION
 			case 177:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Most of this is basically copied off commented out "P wall" case 98 code
+#ifdef GAMEVER_RESTORATION_AOG
+				SpawnOffsetObj(en_vital,x,y);
+				if (!loadedgame)
+				  gamestate.secrettotal++;
+#else
 				SpawnOffsetObj(en_rotating_cube,x,y);
 				new = NULL;
+#endif
 			break;
+#endif
 
 		//
 		// RENT-A-COP
@@ -1223,6 +1306,8 @@
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		//
 		//		Black Ooze
 		//
@@ -1254,6 +1339,7 @@
 			case 286:
 				SpawnOffsetObj(en_green2_ooze,x,y);
 			break;
+#endif
 
 
 
@@ -1315,6 +1401,23 @@
 				break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			case 232:
+			case 233:
+			case 250:
+			case 251:
+			case 268:
+			case 269:
+				if (tile >= 268)
+					tile -= 264;
+				else if (tile >= 250)
+					tile -= 248;
+				else
+					tile -= 232;
+				SpawnOffsetObj(en_spider_mutant+tile,x,y);
+				break;
+#else
 		//
 		// Cyborg Warrior
 		//
@@ -1398,6 +1501,7 @@
 		//
 		// Mutant Human type 1
 		//
+#endif
 
 			case 105:
 				if (gamestate.difficulty<gd_hard)
@@ -1611,10 +1715,15 @@
 					scan_value = 0xff;
 
 			case 306:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				if (scan_value != 0xff)
+#else
 				SpawnOffsetObj(en_podegg,x,y);
 				if (scan_value == 0xff)
 					new->obclass = deadobj;
 				else
+#endif
 				{
 					AddTotalPoints(actor_points[podobj-rentacopobj]);
 					AddTotalEnemy(1);
@@ -1622,10 +1731,16 @@
 numEnemy[podobj]++;
 #endif
 				}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				SpawnOffsetObj(en_podegg,x,y);
+#endif
 				scan_value=0xffff;
 			break;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		// Morphing Brown/LBlue Post -> Spider Mutant
 		//
 			case 610:
@@ -1703,6 +1818,7 @@
 				}
 				scan_value=0xffff;
 			break;
+#endif // GAMEVER RESTORATION
 
 
 
@@ -2008,12 +2124,15 @@
 // BOSS ACTORS
 //-----------------------
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case 630:	// FINAL BOSS 1
          case 631:	// FINAL BOSS 2
          case 632:	// FINAL BOSS 3
          case 633:	// FINAL BOSS 4
          	SpawnOffsetObj(en_final_boss1+tile-630,x,y);
 			break;
+#endif
 
 			}
 
@@ -2052,7 +2171,7 @@
 		}
 
 	if (!loadedgame)
-		gamestuff.level[gamestate.mapon].stats.accum_inf =	gamestuff.level[gamestate.mapon].stats.total_inf;
+		GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_inf =	GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf;
 
 #if IN_DEVELOPMENT
 	db_count=0;
@@ -2067,7 +2186,7 @@
 	if (loadedgame)
 		return;
 
-	gamestuff.level[gamestate.mapon].stats.total_points += points;
+	GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_points += points;
 }
 
 //--------------------------------------------------------------------------
@@ -2078,7 +2197,7 @@
 	if (loadedgame)
 		return;
 
-	gamestuff.level[gamestate.mapon].stats.total_inf += informants;
+	GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_inf += informants;
 }
 
 //--------------------------------------------------------------------------
@@ -2089,7 +2208,7 @@
 	if (loadedgame)
 		return;
 
-	gamestuff.level[gamestate.mapon].stats.total_enemy += enemies;	  
+	GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.total_enemy += enemies;	  
 }
 
 //==========================================================================
@@ -2107,18 +2226,39 @@
 void SetupGameLevel (void)
 {
 	extern boolean ForceLoadDefault;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    boolean switchon = false;
+#endif
 	memptr hold;
 	sci_mCacheInfo *ci = InfHintList.smInfo;
 	int	x,y,i;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	unsigned	far *map,tile,spot;
+#else
 	unsigned	far *map,tile,spot,icon;
+#endif
 	keytype lock;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	unsigned	far *map1;
+#else
 	unsigned	far *map1,far *map2;
+#endif
 	char far *temp_ptr;
 	short count;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	NumKeys = 0;
+#endif
 	if (!loadedgame)
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		gamestate.secrettotal = gamestate.TimeCount = 0;
+#endif
 		gamestate.flags |= GS_CLIP_WALLS;
 		InitGoldsternInfo();
 	}
@@ -2140,24 +2280,42 @@
 	if (mapwidth != 64 || mapheight != 64)
 		GAME_ERROR(SETUPGAME_BAD_MAP_SIZE);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Looks like the contents of LoadLocationText were originally "inlined" here
+#ifdef GAMEVER_RESTORATION_AOG
+	LoadMsg(LocationText,LEVEL_DESCS,gamestate.mapon+MAPS_PER_EPISODE*gamestate.episode+1,MAX_LOCATION_DESC_LEN);
+	temp_ptr = _fstrstr(LocationText,"^XX");
+	if (temp_ptr)
+		*temp_ptr = 0;
+#else
 	LoadLocationText(gamestate.mapon+MAPS_PER_EPISODE*gamestate.episode);
+#endif
 
 //
 // copy the wall data to a data segment array
 //
 	_fmemset (TravelTable,0,sizeof(TravelTable));
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	_fmemset (gamestate.barrier_table,0xff,sizeof(gamestate.barrier_table));
 	_fmemset (gamestate.old_barrier_table,0xff,sizeof(gamestate.old_barrier_table));
+#endif
 	memset (tilemap,0,sizeof(tilemap));
 	memset (actorat,0,sizeof(actorat));
 	memset (wallheight,0,sizeof(wallheight));
 
 	map = mapsegs[0];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	map2 = mapsegs[1];
+#endif
 	for (y=0;y<mapheight;y++)
 		for (x=0;x<mapwidth;x++)
 		{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			icon = *map2++;
+#endif
 			tile = *map++;
 
 			if (tile<AREATILE)
@@ -2165,8 +2323,12 @@
 			// solid wall
 				tilemap[x][y] = tile;
 
-//				if (tile != AMBUSHTILE)
-//					(unsigned)actorat[x][y] = tile;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Re-enable code for AOG, the rest is PS-specific
+#ifdef GAMEVER_RESTORATION_AOG
+				if (tile != AMBUSHTILE)
+					(unsigned)actorat[x][y] = tile;
+#else
 
 				switch (tile)
 				{
@@ -2186,11 +2348,21 @@
 						(unsigned)actorat[x][y] = tile;
 					break;
 				}
+#endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocate and modify a few other bits of code for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+				if (!tile)
+					TravelTable[x][y] = TT_TRAVELED;
+#endif
 
 			}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			if (tile<64 || icon==PUSHABLETILE)
 				TravelTable[x][y] |= TT_TRAVELED;
+#endif
 		}
 
 //
@@ -2233,14 +2405,23 @@
 				{
 					case 55:
 					case 56:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					case 57:
+					case 58:
+					case 59:
+#endif
 						lock = kt_red+lock-55;
 						*map1 = 0;
 						break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 					case 58:
 						lock = kt_blue;
 						*map1 = 0;
 						break;
+#endif
 
 					default:
 						lock = kt_none;
@@ -2332,13 +2513,28 @@
 				break;
 
 				case ON_SWITCH:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
             	switchon = true;
+#endif
 				case OFF_SWITCH:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					if ((*(map1) & 0xff00) == 0xf800)
+					{
+						*(map1) = 0xf800 | UpdateBarrierTable((*(map1+1)>>8),*(map1+1)&0xff,*(map1)&0xff);
+						*(map1+1) = 0;
+					}
+#else
 					*(map1) = 0xf800 | UpdateBarrierTable((*(map1)>>8),*(map1)&0xff,switchon);
+#endif
 
                // Init for next time.
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	            switchon = false;
+#endif
 				break;
 			}
 
@@ -2372,6 +2568,11 @@
 		for (x=0;x<mapwidth;x++)
 		{
 			tile = *map++;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			if (tile == AMBUSHTILE)
+			{
+#else
 			switch (tile)
 			{
          	case AMBUSHTILE:
@@ -2384,11 +2585,15 @@
 				case CLOAK_TILE:
 				case LINC_TILE:
 				case CLOAK_AMBUSH_TILE:
+#endif
 					tilemap[x][y] = 0;
 					if ( (unsigned)actorat[x][y] == AMBUSHTILE)
 						actorat[x][y] = NULL;
 					*(map-1) = GetAreaNumber(x,y);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
             break;
+#endif
 			}
 		}
 
@@ -2398,15 +2603,20 @@
 //
 	CA_LoadAllSounds ();
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //
 // Check and make sure a detonator is in a 'locked' level.
 //
 
    if (gamestate.mapon < 20 && (!detonators_spawned) && gamestuff.level[gamestate.mapon+1].locked)
    	GAME_ERROR(NO_DETONATORS_IN_LEVEL);
+#endif
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //------------------------------------------------------------------------
 // LoadLocationText()
 //------------------------------------------------------------------------
@@ -2419,6 +2629,7 @@
 	if (temp)
 		*temp = 0;
 }
+#endif
 
 
 //==========================================================================
@@ -2570,14 +2781,27 @@
 		case sp_normal:
 		// Print LEVEL info...
 		//
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			px = 17;
+			if ((gamestate.mapon<1) || (gamestate.mapon>9))
+#else
 			px = 13;
 			if (gamestate.mapon>19)
+#endif
 				ShPrint(" SECRET ",0,false);
 			else
 			{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				ShPrint("FLOOR: ",0,false);
+				if (!type)
+					ShPrint(itoa(gamestate.mapon,str,10),0,false);
+#else
 				ShPrint(" AREA: ",0,false);
 				if (!type)
 					ShPrint(itoa(gamestate.mapon+1,str,10),0,false);
+#endif
 			}
 
 		// Print LIVES info...
@@ -2656,7 +2880,7 @@
 		bufferofs = screenloc[i];
 		DrawPlayBorder();
 
-		JLatchDrawPic(0,200-STATUSLINES,STATUSBARPIC);
+		GAMEVER_RESTORATION_LATCHDRAWPIC(0,200-STATUSLINES,STATUSBARPIC);
 		LatchDrawPic(0,0,TOP_STATUSBARPIC);
 
 		ShadowPrintLocationText(sp_normal);
@@ -2702,7 +2926,7 @@
 	{
 		bufferofs = screenloc[i];
 		VW_Bar ((320-viewwidth)/2,(200-STATUSLINES-viewheight+TOP_STRIP_HEIGHT)/2,viewwidth,viewheight,BLACK);
-		JLatchDrawPic(0,200-STATUSLINES,STATUSBARPIC);
+		GAMEVER_RESTORATION_LATCHDRAWPIC(0,200-STATUSLINES,STATUSBARPIC);
 		LatchDrawPic(0,0,TOP_STATUSBARPIC);
 
 		ShadowPrintLocationText(sp_normal);
@@ -2963,10 +3187,20 @@
 #ifndef DEMOS_EXTERN
 // debug: load chunk
 #if GAME_VERSION == SHAREWARE_VERSION
+/*** BLAKE STONE: ALIENS OF GOLD V3.00 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+	int dems[4]={T_DEMO1,T_DEMO2,T_DEMO3};
+#else
 	int dems[4]={T_DEMO0,T_DEMO1,T_DEMO2,T_DEMO3};
+#endif
+#else
+/*** BLAKE STONE: ALIENS OF GOLD V3.00 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+	int dems[6]={T_DEMO1,T_DEMO2,T_DEMO3,T_DEMO4,T_DEMO5};
 #else
 	int dems[6]={T_DEMO0,T_DEMO1,T_DEMO2,T_DEMO3,T_DEMO4,T_DEMO5};
 #endif
+#endif
 
 	CA_CacheGrChunk(dems[demonumber]);
 	demoptr = grsegs[dems[demonumber]];
@@ -2996,6 +3230,10 @@
 
 	startgame = false;
 	demoplayback = true;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	lastmap_tilex = lastmap_tiley = -1;
+#endif
 
 	StartMusic(false);
 	LoadLevel(gamestate.mapon);
@@ -3030,7 +3268,10 @@
 	VW_FadeOut ();
 	ClearMemory ();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	playstate = ex_title;
+#endif
 }
 
 //==========================================================================
@@ -3303,15 +3544,26 @@
 			gamestate.tic_score = gamestate.score = gamestate.oldscore;
 			memcpy(gamestate.numkeys,gamestate.old_numkeys,sizeof(gamestate.numkeys));
 			memcpy(gamestate.barrier_table,gamestate.old_barrier_table,sizeof(gamestate.barrier_table));
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			gamestate.rpower = gamestate.old_rpower;	
+#endif
 			gamestate.tokens = gamestate.old_tokens;
 			gamestate.weapons = gamestate.old_weapons[0];
 			gamestate.weapon = gamestate.old_weapons[1];
 			gamestate.chosenweapon = gamestate.old_weapons[2];
 			gamestate.ammo = gamestate.old_ammo;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			gamestate.plasma_detonators = gamestate.old_plasma_detonators;
+#endif
 			gamestate.boss_key_dropped=gamestate.old_boss_key_dropped;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			_fmemcpy(&gamestuff.level[gamestate.episode],gamestuff.old_levelinfo,sizeof(gamestuff.old_levelinfo));
+#else
 			_fmemcpy(&gamestuff.level[0],gamestuff.old_levelinfo,sizeof(gamestuff.old_levelinfo));
+#endif
 			DrawKeys();
 			DrawScore();
 		}
@@ -3392,9 +3644,20 @@
 
 		case ex_transported:				// Same as ex_completed
 			Warped();
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			playerwarp.tilex = player->tilex;
+			playerwarp.tiley = player->tiley;
+			playerwarp.dir = player->dir;
+#endif
 
 		case ex_completed:
 		case ex_secretlevel:
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			lastmap_tilex = player->tilex;
+			lastmap_tiley = player->tiley;
+#endif
 		case ex_warped:
 #if 0
 			gamestate.keys = 0;
@@ -3413,7 +3676,10 @@
 			StartMusic(false);
 			SaveLevel(gamestate.lastmapon);
 
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			gamestate.old_rpower = gamestate.rpower;
+#endif
 			gamestate.oldscore = gamestate.score;
 			memcpy(gamestate.old_numkeys,gamestate.numkeys,sizeof(gamestate.old_numkeys));
 			gamestate.old_tokens = gamestate.tokens;
@@ -3423,7 +3689,12 @@
 			gamestate.old_weapons[2] = gamestate.chosenweapon;
 			gamestate.old_ammo = gamestate.ammo;
 			gamestate.old_boss_key_dropped = gamestate.boss_key_dropped;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			_fmemcpy(gamestuff.old_levelinfo,&gamestuff.level[gamestate.episode],sizeof(gamestuff.old_levelinfo));
+#else
 			_fmemcpy(gamestuff.old_levelinfo,&gamestuff.level[0],sizeof(gamestuff.old_levelinfo));
+#endif
 
 #if 0
 			if (gamestate.mapon == 9)
@@ -3486,6 +3757,11 @@
 				SD_WaitSoundDone();
 				IN_UserInput(5*60);
 				PM_CheckMainMem();
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				if ((gamestate.episode != 5) && (!InstantWin))
+					RunBlakeRun();
+#endif
 				ClearMemory();
 			}
 
@@ -3497,12 +3773,30 @@
 
 			if (playstate==ex_victorious)
 			{
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				switch (gamestate.episode)
+				{
+				case 0:
+				case 1:
+				case 3:
+					DoMovie(mv_ending1);
+					break;
+				case 5:
+					DoMovie(mv_final);
+					break;
+				default:
+					DoMovie(mv_ending2);
+					break;
+				}
+#else
 				CA_CacheGrChunk(ENDINGPALETTE);
 //				VL_SetPalette (0,256,grsegs[ENDINGPALETTE]);
 
 				DoMovie(mv_final,grsegs[ENDINGPALETTE]);
 
 				UNCACHEGRCHUNK(ENDINGPALETTE);
+#endif
 				NewViewSize(viewsize);		// Recreates & Allocs the ScaleDirectory
 				Breifing(BT_WIN,gamestate.episode);
 			}
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_IDSTP.C bstone/3D_IDSTP.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_IDSTP.C	1970-01-01 02:00:00.000000000 +0200
+++ bstone/3D_IDSTP.C	2015-06-27 14:35:54.639101500 +0300
@@ -0,0 +1,61 @@
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code to a separate file from 3D_MAIN.C,
+// since this is a part of JM_FREE.C in AOG (versions 2.1 and 3.0).
+//
+// - Should be #include'd from the right location.
+// - A couple of char arrays are accessed as near buffers in AOG and far in PS.
+// - Note that MAX_DEST_PATH_LEN isn't defined here. In PS, it's defined
+// in 3D_MAIN.C long before the definition of InitDestPath.
+
+//-------------------------------------------------------------------------
+// InitDestPath()
+//-------------------------------------------------------------------------
+void InitDestPath(void)
+{
+	char *ptr;
+
+#pragma warn -pia
+	if (ptr=getenv("APOGEECD"))
+	{
+		struct ffblk ffblk;
+		short len;
+
+#ifdef GAMEVER_RESTORATION_AOG
+		len = strlen(ptr);
+#else
+		len = _fstrlen(ptr);
+#endif
+		if (len > MAX_DEST_PATH_LEN)
+		{
+			printf("\nAPOGEECD path too long.\n");
+			exit(0);
+		}
+
+#ifdef GAMEVER_RESTORATION_AOG
+		strcpy(destPath,ptr);
+#else
+		_fstrcpy(destPath,ptr);
+#endif
+		if (destPath[len-1] == '\\')
+			destPath[len-1]=0;
+
+		if (findfirst(destPath,&ffblk,FA_DIREC) == -1)
+		{
+			printf("\nAPOGEECD directory not found.\n");
+			exit(0);
+		}
+
+#ifdef GAMEVER_RESTORATION_AOG
+		strcat(destPath,"\\");
+#else
+		_fstrcat(destPath,"\\");
+#endif
+	}
+	else
+#ifdef GAMEVER_RESTORATION_AOG
+		strcpy(destPath,"");
+#else
+		_fstrcpy(destPath,"");
+#endif
+#pragma warn +pia
+}
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_INTER.C bstone/3D_INTER.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_INTER.C	1994-09-07 15:18:04.000000000 +0200
+++ bstone/3D_INTER.C	2015-06-27 14:35:54.640121400 +0300
@@ -212,8 +212,17 @@
 	SETFONTCOLOR(ENABLED_TEXT_COLOR,TERM_BACK_COLOR);
 
 	ShadowPrint("NAME",86,60);
-//	ShadowPrint("MISSION",150,60);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Re-enable code for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+	ShadowPrint("MISSION",150,60);
+#endif
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	ShadowPrint("SCORE",205,60);
+#else
 	ShadowPrint("SCORE",175,60);
+#endif
 	ShadowPrint("MISSION",247,53);
 	ShadowPrint("RATIO",254,60);
 
@@ -226,7 +235,10 @@
 		if (*s->name)
 			ShadowPrint(s->name,45,68 + (SCORE_Y_SPACING * i));
 
-#if 0
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		// Re-enable code for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
 		//
 		// mission
 		//
@@ -244,7 +256,13 @@
 
 		ltoa(s->score,buffer,10);
 		USL_MeasureString(buffer,&w,&h);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+		// Should explain the comment mentioning 235
+#ifdef GAMEVER_RESTORATION_AOG
+		ShadowPrint(buffer,235 - w,68 + (SCORE_Y_SPACING * i));
+#else
 		ShadowPrint(buffer,205 - w,68 + (SCORE_Y_SPACING * i));		// 235
+#endif
 
 		//
 		// mission ratio
@@ -288,7 +306,12 @@
 	myscore.score = score;
 	myscore.episode = gamestate.episode;
 	myscore.completed = other;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	myscore.ratio = ShowStats(0,0,ss_justcalc);
+#else
 	myscore.ratio = ShowStats(0,0,ss_justcalc,&gamestuff.level[gamestate.mapon].stats);
+#endif
 
 	for (i = 0,n = -1;i < MaxScores;i++)
 	{
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MAIN.C bstone/3D_MAIN.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MAIN.C	1994-08-23 16:24:20.000000000 +0300
+++ bstone/3D_MAIN.C	2015-06-27 14:35:54.641893300 +0300
@@ -88,6 +88,11 @@
 
 char QuitMsg[] = {"Unit: $%02x Error: $%02x"};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+signed char lastmap_tilex,lastmap_tiley;
+#endif
+
 #ifdef CEILING_FLOOR_COLORS
 unsigned TopColor,BottomColor;
 #endif
@@ -207,7 +212,13 @@
 boolean ShowQuickMsg;
 void NewGame (int difficulty,int episode)
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	longword oldf=gamestate.flags;
+	unsigned loop;
+#else
 	unsigned oldf=gamestate.flags,loop;
+#endif
 
 	InitPlaytemp();
 	playstate = ex_stillplaying;
@@ -257,20 +268,41 @@
 	}
 	else
 #endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		gamestate.mapon = 1;
+#else
 		gamestate.mapon = 0;
+#endif
 
 	gamestate.key_floor = gamestate.mapon+1;
 	startgame = true;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	lastmap_tilex = lastmap_tiley = 0xFF;
+	gamestuff.old_levelinfo[0].locked = gamestuff.old_levelinfo[1].locked = gamestuff.old_levelinfo[12].locked = gamestuff.old_levelinfo[13].locked = gamestuff.old_levelinfo[14].locked = false;
+
+	gamestuff.old_levelinfo[2].locked = gamestuff.old_levelinfo[3].locked = gamestuff.old_levelinfo[4].locked = gamestuff.old_levelinfo[5].locked = gamestuff.old_levelinfo[6].locked = gamestuff.old_levelinfo[7].locked = gamestuff.old_levelinfo[8].locked = gamestuff.old_levelinfo[9].locked = gamestuff.old_levelinfo[10].locked = gamestuff.old_levelinfo[11].locked = true;
+
+	gamestuff.old_levelinfo[2].stats.overall_floor = gamestuff.old_levelinfo[3].stats.overall_floor = gamestuff.old_levelinfo[4].stats.overall_floor = gamestuff.old_levelinfo[5].stats.overall_floor = gamestuff.old_levelinfo[6].stats.overall_floor = gamestuff.old_levelinfo[7].stats.overall_floor = gamestuff.old_levelinfo[8].stats.overall_floor = gamestuff.old_levelinfo[9].stats.overall_floor = 100;
+#else
 	for (loop=0; loop<MAPS_WITH_STATS; loop++)
 	{
 		gamestuff.old_levelinfo[loop].stats.overall_floor=100;
 		if (loop)
 			gamestuff.old_levelinfo[loop].locked=true;
 	}
+#endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	normalshade_div = SHADE_DIV;
+	shade_max = SHADE_MAX;
+#else
 //	normalshade_div = SHADE_DIV;
 //	shade_max = SHADE_MAX;
+#endif
 	ExtraRadarFlags = InstantWin = InstantQuit = 0;
 
 	pickquick = 0;
@@ -346,6 +378,8 @@
 	return(0);
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 // NextChunk()
 //--------------------------------------------------------------------------
@@ -363,6 +397,7 @@
 	read(file,&chunklen,4);					// read chunk length
 	return(chunklen);
 }
+#endif
 
 char LS_current=-1,LS_total=-1;
 
@@ -441,18 +476,24 @@
 	char far *ptr;
 	char chunk[5]="LVxx";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern int nsd_table[];
 extern int sm_table[];
+#endif
 
 char mod;
 
 	WindowY=181;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	gamestuff.level[levelnum].locked=false;
 
 	mod = levelnum % 6;
 	normalshade_div = nsd_table[mod];
 	shade_max = sm_table[mod];
 	normalshade=(3*(maxscale>>2))/normalshade_div;
+#endif
 
 // Open PLAYTEMP file
 //
@@ -468,6 +509,10 @@
 
 		PreloadUpdate(LS_current+((LS_total-LS_current)>>1),LS_total);
 		SetupGameLevel();
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		AlignPlayerInElevator();
+#endif
 		gamestate.flags |= GS_VIRGIN_LEVEL;
 		gamestate.turn_around=0;
 
@@ -534,8 +579,11 @@
 		{
 			case arc_barrierobj:
 			case post_barrierobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          case vspike_barrierobj:
          case vpost_barrierobj:
+#endif
 				ob->temp2 = ScanBarrierTable(ob->tilex,ob->tiley);
 			break;
 		}
@@ -562,8 +610,13 @@
 	ReadIt(true, eaList, sizeof(eaWallInfo)*MAXEAWALLS);
 	ReadIt(true, &GoldsternInfo, sizeof(GoldsternInfo));
    ReadIt(true, &GoldieList,sizeof(GoldieList));			
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	ReadIt(true, &gamestate.secrettotal, sizeof(gamestate.secrettotal));
+#else
 	ReadIt(false, gamestate.barrier_table,sizeof(gamestate.barrier_table));
 	ReadIt(false, &gamestate.plasma_detonators,sizeof(gamestate.plasma_detonators));
+#endif
 
 // Read and evaluate checksum
 //
@@ -601,6 +654,14 @@
 	LZH_Shutdown();
 	NewViewSize(viewsize);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (playstate == ex_transported)
+		AlignPlayerOnTransporter();
+	else
+		AlignPlayerInElevator();
+#endif
+
 // Check for Strange Door and Actor combos
 //
 	CleanUpDoors_N_Actors();
@@ -619,6 +680,11 @@
 	objtype *ob;
 	int handle;
 	struct ffblk finfo;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// DeleteChunk stuff
+#ifdef GAMEVER_RESTORATION_AOG
+	long filesize;
+#endif
 	long offset,cksize;
 	char chunk[5]="LVxx";
 	unsigned gflags = gamestate.flags;
@@ -627,6 +693,12 @@
 	unsigned count;
 	char far *ptr;
 	char oldmapon;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// DeleteChunk stuff
+#ifdef GAMEVER_RESTORATION_AOG
+	long bmove;
+	int dhandle;
+#endif
 
 	WindowY=181;
 
@@ -634,7 +706,12 @@
 //
 	oldmapon=gamestate.mapon;
 	gamestate.mapon=gamestate.lastmapon;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	ShowStats(0,0,ss_justcalc);
+#else
 	ShowStats(0,0,ss_justcalc,&gamestuff.level[gamestate.mapon].stats);
+#endif
 	gamestate.mapon=oldmapon;
 
 // Yeah! We're no longer a virgin!
@@ -644,13 +721,56 @@
 // Open PLAYTEMP file
 //
 	MakeDestPath(PLAYTEMP_FILE);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (findfirst(tempPath,&finfo,0))
+		filesize = 0;
+	else
+		filesize = finfo.ff_fsize;
+	MakeDestPath(PLAYTEMP_FILE);
+#endif
 	if ((handle=open(tempPath,O_CREAT|O_RDWR|O_BINARY,S_IREAD|S_IWRITE))==-1)
 		MAIN_ERROR(SAVELEVEL_DISKERR);
 
 // Remove level chunk from file
 //
 	sprintf(&chunk[2],"%02x",levelnum);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Apparently DeleteChunk was originally "inlined" in some AOG EXE
+#ifdef GAMEVER_RESTORATION_AOG
+	if (cksize=FindChunk(handle,chunk))
+	{
+		/** (RESTORATION) Copy-and-pasted from DeleteChunk (for most) **/
+
+		offset=lseek(handle,0,SEEK_CUR)-8; 		// move back to CKID/SIZE
+		bmove=filesize-(offset+8+cksize);	 	// figure bytes to move
+
+		if (bmove)										// any data to move?
+		{
+		// Move data: FROM --> the start of NEXT chunk through the end of file.
+		//              TO --> the start of THIS chunk.
+		//
+		// (ie: erase THIS chunk and re-write it at the end of the file!)
+		//
+			lseek(handle,cksize,SEEK_CUR);			// seek source to NEXT chunk
+
+			MakeDestPath(PLAYTEMP_FILE);
+			if ((dhandle=open(tempPath,O_CREAT|O_RDWR|O_BINARY,S_IREAD|S_IWRITE))==-1)
+				MAIN_ERROR(SAVELEVEL_DISKERR);
+
+			lseek(dhandle,offset,SEEK_SET);  		// seek dest to THIS chunk
+			IO_CopyHandle(handle,dhandle,bmove);	// copy "bmove" bytes
+
+			close(dhandle);
+
+			lseek(handle,offset+bmove,SEEK_SET);	// go to end of data moved
+		}
+		else
+			lseek(handle,offset,SEEK_SET);
+	}
+#else
 	DeleteChunk(handle,chunk);
+#endif
 
 // Setup LZH compression
 //
@@ -696,8 +816,13 @@
 	WriteIt(true, eaList, sizeof(eaWallInfo)*MAXEAWALLS);
 	WriteIt(true, &GoldsternInfo, sizeof(GoldsternInfo));
 	WriteIt(true, &GoldieList,sizeof(GoldieList));
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	WriteIt(true, &gamestate.secrettotal, sizeof(gamestate.secrettotal));
+#else
 	WriteIt(false, gamestate.barrier_table,sizeof(gamestate.barrier_table));
 	WriteIt(false, &gamestate.plasma_detonators,sizeof(gamestate.plasma_detonators));
+#endif
 
 // Write checksum and determine size of file
 //
@@ -724,6 +849,8 @@
 	return(rt_value);
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 #pragma warn -pia
 
 //--------------------------------------------------------------------------
@@ -771,6 +898,7 @@
 }
 
 #pragma warn +pia
+#endif // GAMEVER RESTORATION
 
 
 
@@ -781,7 +909,7 @@
 									 "Copyright 1993, JAM Productions, Inc.\n\r"
 									 "\n\r"
 									 "SAVEGAME file is from version: "__VERSION__"\n\r"
-									 " Compile Date :"__DATE__" : "__TIME__"\n\r"
+									 " Compile Date :"GAMEVER_RESTORATION_DATE" : "GAMEVER_RESTORATION_TIME"\n\r"
 									 "-------------------------------------\n\r"
 									 "\x1a";
 
@@ -808,7 +936,12 @@
 
 // Read in VERSion chunk
 //
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (!FindChunk(handle,"INFO"))
+#else
 	if (!FindChunk(handle,"VERS"))
+#endif
 		goto cleanup;
 
 	cksize = sizeof(SavegameInfoText);
@@ -865,7 +998,12 @@
 		goto cleanup;
 
 #pragma warn -pia
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	while (cksize=FindChunk(handle,"LV"))
+#else
 	while (cksize=NextChunk(handle))
+#endif
 	{
 		cksize += 8;								// include chunk ID and LENGTH
 		lseek(handle,-8,SEEK_CUR);				// seek to start of chunk
@@ -890,6 +1028,10 @@
 //
 	if (rt_value)
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		lastmap_tilex = lastmap_tiley = 0xFF;
+#endif
 		LoadLevel(0xff);
 		ShowQuickMsg=false;
 	}
@@ -929,7 +1071,12 @@
 // Write VERSion chunk
 //
 	cksize=sizeof(SavegameInfoText);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	write(handle,"INFO",4);
+#else
 	write(handle,"VERS",4);
+#endif
 	write(handle,&cksize,4);
 	IO_FarWrite(handle,SavegameInfoText,cksize);
 
@@ -959,6 +1106,10 @@
 	MakeDestPath(PLAYTEMP_FILE);
 	if (findfirst(tempPath,&finfo,0))
 		goto cleanup;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	MakeDestPath(PLAYTEMP_FILE);
+#endif
 
 	if ((shandle=open(tempPath,O_RDONLY|O_BINARY))==-1)
 		goto cleanup;
@@ -1094,7 +1245,12 @@
 
 	         	door = *tile_ptr & 0x3F;
 
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					if (obj->flags & FL_SOLID)
+#else
 					if ((obj->flags & (FL_SOLID|FL_DEADGUY)) == (FL_SOLID|FL_DEADGUY))
+#endif
    	         	obj->flags &= ~(FL_SHOOTABLE | FL_SOLID | FL_FAKE_STATIC);
 
 					// Make sure door is open
@@ -1110,6 +1266,97 @@
       }
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void AlignPlayerOnTransporter(void)
+{
+	player->tilex = playerwarp.tilex;
+	player->tiley = playerwarp.tiley;
+	player->x = ((fixed)player->tilex<<TILESHIFT) + 0x8000;
+	player->y = ((fixed)player->tiley<<TILESHIFT) + 0x8000;
+	player->dir = playerwarp.dir;
+	player->angle = playerwarp.dir*45;
+}
+
+void AlignPlayerInElevator(void)
+{
+	char tilex = 0;
+	word origtilex, origtiley;
+	if ((lastmap_tilex == -1) || (lastmap_tiley == -1) || (playstate == ex_transported))
+		return;
+
+	origtilex = lastmap_tilex;
+	origtiley = lastmap_tiley;
+	if ((tilemap[origtilex+1][origtiley]&63)!=21 && (tilemap[origtilex-1][origtiley]&63)!=21)
+	{
+		if ((tilemap[origtilex-2][origtiley]&63)!=21)
+		{
+			for (tilex=origtilex-1; tilex; tilex--)
+			{
+				if ((tilemap[tilex][origtiley]&63)!=21)
+					continue;
+				if (((tilemap[tilex-1][origtiley-1]&63)==21) || ((tilemap[tilex-1][origtiley+1]&63)==21))
+					tilex--;
+				else
+					tilex++;
+				break;
+			}
+		}
+		if (((tilemap[origtilex+2][origtiley]&63)!=21) && (!tilex))
+		{
+			for (tilex=origtilex+1; tilex<MAPSIZE; tilex++)
+			{
+				if ((tilemap[tilex][origtiley]&63)!=21)
+					continue;
+				if (((tilemap[tilex+1][origtiley-1]&63)==21) || ((tilemap[tilex+1][origtiley+1]&63)==21))
+					tilex++;
+				else
+					tilex--;
+				break;
+			}
+		}
+	}
+	if (!tilex)
+		tilex = lastmap_tilex;
+	if (tilex < MAPSIZE)
+	{
+		if (tilemap[tilex+1][origtiley+1] & 0x80)
+		{
+			origtiley++;
+			tilex--;
+			player->dir = northeast;
+		}
+		else if (tilemap[tilex+1][origtiley-1] & 0x80)
+		{
+			origtiley--;
+			tilex--;
+			player->dir = northeast;
+		}
+		else if (tilemap[tilex-1][origtiley+1] & 0x80)
+		{
+			origtiley++;
+			tilex++;
+			player->dir = northwest;
+		}
+		else if (tilemap[tilex-1][origtiley-1] & 0x80)
+		{
+			origtiley--;
+			tilex++;
+			player->dir = northwest;
+		}
+	}
+	else
+		tilex = origtilex;
+
+	player->x = ((fixed)tilex<<TILESHIFT)+0x8000;
+	player->y = ((fixed)origtiley<<TILESHIFT)+0x8000;
+	player->angle = (1-player->dir)*90;
+	if (player->angle < 0)
+		player->angle += 360;
+	lastmap_tilex = lastmap_tiley = 0xFF;
+}
+#endif
+
 
 //--------------------------------------------------------------------------
 // ClearNClose() - Use when changing levels via standard elevator.
@@ -1296,7 +1543,12 @@
 //--------------------------------------------------------------------------
 // DoMovie()
 //--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+boolean DoMovie(movie_t movie)
+#else
 boolean DoMovie(movie_t movie, memptr palette)
+#endif
 {
 	boolean  ReturnVal;
 //	StopMusic();
@@ -1306,10 +1558,13 @@
 	UnCacheLump(STARTFONT,STARTFONT+NUMFONT);
 	CA_LoadAllSounds();
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    if (palette)
    	Movies[movie].palette = palette;
    else
    	Movies[movie].palette = (memptr)FP_SEG(&vgapal);
+#endif
 
 	ReturnVal = MOVIE_Play(&Movies[movie]);
 
@@ -1471,26 +1726,36 @@
 			end=_fstrstr(diz,"^XX");
 			*end=0;
 		}
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		else
 		if (!IsA386)
 		{
 			CA_CacheGrChunk (NO386SCREEN);
 			screen = MK_FP(grsegs[NO386SCREEN],7);
 		}
-//		else
+#else
+		else
+#endif
 #endif
 
-#if 0
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
 		{
 			CA_CacheGrChunk (ORDERSCREEN);
-			screen = MK_FP(grsegs[ORDERSCREEN],0);
+			finscreen = grsegs[ORDERSCREEN];
 		}
 #endif
 	}
 	else
 	{
 		CA_CacheGrChunk (ERRORSCREEN);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		finscreen = grsegs[ERRORSCREEN];
+#else
 		screen = MK_FP(grsegs[ERRORSCREEN],7);
+#endif
 	}
 
 	WriteConfig ();
@@ -1502,20 +1767,35 @@
 
 		unit=va_arg(ap,unsigned);
 		err=va_arg(ap,unsigned);
-//		movedata ((unsigned)screen,7,0xb800,0,7*160);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		movedata (finscreen,7,0xb800,0,7*160);
+#else
 		_fmemcpy(MK_FP(0xB800,0), screen, 7*160);
+#endif
 
 		textcolor(14);
 		textbackground(4);
 		gotoxy (10,4);
 		cprintf(error,unit,err);
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		gotoxy (64-strlen(__VERSION__),2);
+		cprintf(" Ver :%s ",__VERSION__);
+#else
 		gotoxy (65-strlen(__VERSION__),2);
 		cprintf(" Ver:%s ",__VERSION__);
+#endif
 
 		gotoxy (1,8);
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		MakeDestPath("BS_AOG.ERR");
+#else
 		MakeDestPath("BS_VSI.ERR");
+#endif
 		fp = fopen(tempPath,"wb");
 		fprintf(fp,"$%02x%02x",unit,err);
 		if (fp)
@@ -1524,7 +1804,9 @@
 		exit(1);
 	}
 
-#if 0
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
 	if (!error || !(*error))
 	{
 		unsigned far *clear = MK_FP(0xb800,23*80*2);
@@ -1537,8 +1819,13 @@
 		else
 #endif
 		{
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			movedata (finscreen,0,0xb800,0,4000);
+#else
 //			movedata ((unsigned)screen,0,0xb800,0,4000);
 			_fmemcpy(MK_FP(0xB800,0),screen,4000);
+#endif
 
 			// Far mem set (WORD)! - This is STUPID! Borland SUCKS!
 
@@ -1570,8 +1857,13 @@
 void    DemoLoop (void)
 {
 	int     i,level;
+	/*** BLAKE STONE: ALIENS OF GOLD V3.0 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+	int 	LastDemo=3;
+#else
 	int 	LastDemo=0;
 	boolean breakit;
+#endif
 	unsigned old_bufferofs;
 
 	while (1)
@@ -1594,14 +1886,23 @@
 				CA_CacheAudioChunk(STARTMUSIC+TITLE_LOOP_MUSIC);
 				SD_StartMusic((MusicGroup far *)audiosegs[STARTMUSIC+TITLE_LOOP_MUSIC]);
 			}
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			MM_SortMem();
+#endif
 
 //
 // title page
 //
 #if !SKIP_TITLE_AND_CREDITS
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			CA_CacheScreen(TITLEPIC);
+#else
 			breakit = false;
 
 			CA_CacheScreen(TITLE1PIC);
+#endif
 			CA_CacheGrChunk(TITLEPALETTE);
 			old_bufferofs = bufferofs;
 			bufferofs=displayofs;
@@ -1611,10 +1912,18 @@
 			VL_SetPaletteIntensity(0,255,grsegs[TITLEPALETTE],0);
 
 			fontnumber = 2;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			PrintX = WindowX = 290;
+			PrintY = WindowY = 5;
+			WindowW = 29;
+			WindowH = 10;
+#else
 			PrintX = WindowX = 270;
 			PrintY = WindowY = 179;
 			WindowW = 29;
 			WindowH = 8;
+#endif
 			VWB_Bar(WindowX,WindowY-1,WindowW,WindowH,VERSION_TEXT_BKCOLOR);
 			SETFONTCOLOR(VERSION_TEXT_COLOR, VERSION_TEXT_BKCOLOR);
 			US_Print(__VERSION__);
@@ -1623,8 +1932,15 @@
 			VL_FadeIn(0,255,grsegs[TITLEPALETTE],30);
 			UNCACHEGRCHUNK(TITLEPALETTE);
 			if (IN_UserInput(TickBase*6))
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+				break;
+#else
 				breakit= true;
+#endif
 
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		// Cache screen 2 with Warnings and Copyrights
 
 			CA_CacheScreen(TITLE2PIC);
@@ -1641,10 +1957,10 @@
 			// on title intro.
 
 			FizzleFade(bufferofs,displayofs,320,200,70,false);
-
 			IN_UserInput(TickBase*2);
 			if (breakit || IN_UserInput(TickBase*6))
 				break;
+#endif
 			VW_FadeOut();
 
 //
@@ -1664,10 +1980,20 @@
 //
 
 #if DEMOS_ENABLED
-#if IN_DEVELOPMENT
+			/*** BLAKE STONE: ALIENS OF GOLD VERSIONS RESTORATION ***/
+#if (IN_DEVELOPMENT) || (defined GAMEVER_RESTORATION_AOG)
+//#if IN_DEVELOPMENT
 		if (!MS_CheckParm("recdemo"))
 #endif
+#ifdef GAMEVER_RESTORATION_BS1_300
+			PlayDemo(LastDemo++%3);
+#elif defined GAMEVER_RESTORATION_BS1_210
+			PlayDemo(LastDemo++%4);
+#elif defined GAMEVER_RESTORATION_BS6_300
+			PlayDemo(LastDemo++%5);
+#else
 			PlayDemo(LastDemo++%6);
+#endif
 
 			if (playstate == ex_abort)
 				break;
@@ -1784,6 +2110,11 @@
 
 void main (void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	InitDestPath();
+#endif
+
 #if IN_DEVELOPMENT
 	MakeDestPath(ERROR_LOG);
 	remove(tempPath);
@@ -1842,51 +2173,30 @@
 }
 
 
-//-------------------------------------------------------------------------
-// InitDestPath()
-//-------------------------------------------------------------------------
-void InitDestPath(void)
-{
-	char *ptr;
-
-#pragma warn -pia
-	if (ptr=getenv("APOGEECD"))
-	{
-		struct ffblk ffblk;
-		short len;
-
-		len = _fstrlen(ptr);
-		if (len > MAX_DEST_PATH_LEN)
-		{
-			printf("\nAPOGEECD path too long.\n");
-			exit(0);
-		}
-
-		_fstrcpy(destPath,ptr);
-		if (destPath[len-1] == '\\')
-			destPath[len-1]=0;
-
-		if (findfirst(destPath,&ffblk,FA_DIREC) == -1)
-		{
-			printf("\nAPOGEECD directory not found.\n");
-			exit(0);
-		}
-
-		_fstrcat(destPath,"\\");
-	}
-	else
-		_fstrcpy(destPath,"");
-#pragma warn +pia
-}
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code to a separate file, since this is a part of JM_FREE.C in
+// AOG v2.0/3.0, rather than 3D_MAIN.C as in PS.
+#ifndef GAMEVER_RESTORATION_AOG
+#include "3D_IDSTP.C"
+#endif
 
 //-------------------------------------------------------------------------
 // MakeDestPath()
 //-------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void MakeDestPath(char *file)
+{
+	strcpy(tempPath,destPath);
+	strcat(tempPath,file);
+}
+#else
 void MakeDestPath(char far *file)
 {
 	_fstrcpy(tempPath,destPath);
 	_fstrcat(tempPath,file);
 }
+#endif
 
 #if IN_DEVELOPMENT
 
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MENU.C bstone/3D_MENU.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MENU.C	1994-10-19 17:25:32.000000000 +0200
+++ bstone/3D_MENU.C	2015-06-27 14:35:54.644283700 +0300
@@ -76,7 +76,12 @@
 	far CusItems=	{CST_X,CST_Y+7,6,-1,0,15,{54,-1,203,7,1}},
 	far NewEitems=	{NE_X,NE_Y,11,0,0,16,	{43,-2,119,16,1}},
 	far NewItems=	{NM_X,NM_Y,4,1,0,16,		{60,-2,105,16,1}},
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	far SwitchItems=	{MENU_X,MENU_Y+15,6,0,0,9,{87,-1,152,7,1}};
+#else
 	far SwitchItems=	{MENU_X,MENU_Y+25,4,0,0,9,{87,-1,132,7,1}};
+#endif
 
 
 
@@ -135,16 +140,27 @@
 
 far SwitchMenu[]=
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+ {AT_ENABLED,"LIGHTING",0},
+ {AT_ENABLED,"CEILING TEXTURES",0},
+ {AT_ENABLED,"FLOOR TEXTURES",0},
+ {AT_ENABLED,"HEART BEAT SOUND",0},
+ {AT_ENABLED,"REBA ATTACK INFO",0},
+ {AT_ENABLED,"<TAB> SHOWS ROTATED MAP",0},
+#else
  {AT_ENABLED,"LIGHTING",0},
  {AT_ENABLED,"REBA ATTACK INFO",0},
  {AT_ENABLED,"SHOW CEILINGS",0},
  {AT_ENABLED,"SHOW FLOORS",0}
+#endif
 },
 
 
 #pragma warn +sus
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
 far NewEmenu[]=
 {
  {AT_ENABLED,"MISSION 1:\n"
@@ -272,7 +288,12 @@
 
 static byte special_keys[] =
 {
-	sc_Tilde,sc_Plus,sc_Minus,sc_L,sc_P,sc_M,sc_S,sc_I,sc_Q,sc_W,sc_E,sc_Enter,sc_1,sc_2,sc_3,sc_4,sc_5,sc_Tab
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+sc_L,sc_P,sc_M,sc_S,sc_I,sc_H,sc_C,sc_F,sc_Q,sc_W,sc_E,sc_Enter,sc_1,sc_2,sc_3,sc_4,sc_5,sc_Tab
+#else
+sc_Tilde,sc_Plus,sc_Minus,sc_L,sc_P,sc_M,sc_S,sc_I,sc_Q,sc_W,sc_E,sc_Enter,sc_1,sc_2,sc_3,sc_4,sc_5,sc_Tab
+#endif
 };
 
 
@@ -511,9 +532,15 @@
 //--------------------------------------------------------------------------
 void DrawMainMenu(void)
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	ControlPanelFree();
+#endif
 	CA_CacheScreen (BACKGROUND_SCREENPIC);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	ControlPanelAlloc();
+#endif
 
 	ClearMScreen();
 	DrawMenuTitle("MAIN OPTIONS");
@@ -764,7 +791,8 @@
 	DrawInstructions(IT_STANDARD);
 
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
 
 firstpart:
 
@@ -804,7 +832,8 @@
  episode = 0;
 #endif
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
  //
  // ALREADY IN A GAME?
  //
@@ -827,7 +856,8 @@
  if (which<0)
  {
   MenuFadeOut();
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
   goto firstpart;
 #else
   return;
@@ -916,7 +946,8 @@
 	US_PrintCentered(instr[Type]);
 }
 
-#if 0
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
 
 //--------------------------------------------------------------------------
 // DrawNewEpisode() - DRAW NEW EPISODE MENU
@@ -932,7 +963,9 @@
 	WindowX=58;
 
 	fontnumber = 2;							// six point font
-	DrawMenu(&NewEitems,&NewEmenu7[0]);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	DrawMenu(&NewEitems,&NewEmenu[0]);
+	//DrawMenu(&NewEitems,&NewEmenu7[0]);
 
 	DrawEpisodePic(NewEitems.curpos);
 
@@ -1070,29 +1103,72 @@
 
 		switch (which)
 		{
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+			// Bits of different code for AOG
 			case	SW_LIGHTING:
 				gamestate.flags ^= GS_LIGHTING;
 				ShootSnd();
 				DrawSwitchMenu();
 			break;
 
+#ifndef GAMEVER_RESTORATION_AOG
 			case	SW_REBA_ATTACK_INFO:
 				gamestate.flags ^= GS_ATTACK_INFOAREA;
 				ShootSnd();
 				DrawSwitchMenu();
 			break;
+#endif
 
 			case	SW_CEILING:
-				gamestate.flags ^= GS_DRAW_CEILING;
+#ifdef GAMEVER_RESTORATION_AOG
+				if (IsA386)
+				{
+#endif
+					gamestate.flags ^= GS_DRAW_CEILING;
+					ShootSnd();
+					DrawSwitchMenu();
+#ifdef GAMEVER_RESTORATION_AOG
+					break;
+				}
+#endif
+			break;
+
+			case	SW_FLOORS:
+#ifdef GAMEVER_RESTORATION_AOG
+				if (IsA386)
+				{
+#endif
+					gamestate.flags ^= GS_DRAW_FLOOR;
+					ShootSnd();
+#ifdef GAMEVER_RESTORATION_AOG
+					ChangeSwaps();
+#endif
+					DrawSwitchMenu();
+#ifdef GAMEVER_RESTORATION_AOG
+					break;
+				}
+#endif
+			break;
+#ifdef GAMEVER_RESTORATION_AOG
+
+			case	SW_HEART_BEAT:
+				gamestate.flags ^= GS_HEARTB_SOUND;
 				ShootSnd();
 				DrawSwitchMenu();
 			break;
 
-			case	SW_FLOORS:
-				gamestate.flags ^= GS_DRAW_FLOOR;
+			case	SW_REBA_ATTACK_INFO:
+				gamestate.flags ^= GS_ATTACK_INFOAREA;
+				ShootSnd();
+				DrawSwitchMenu();
+			break;
+
+			case	SW_AUTO_MAP:
+				gamestate.flags ^= GS_TAB_ROTATED_MAP;
 				ShootSnd();
 				DrawSwitchMenu();
 			break;
+#endif
 		}
 
 	} while(which>=0);
@@ -1110,6 +1186,10 @@
 	ClearMScreen();
 	DrawMenuTitle("GAME SWITCHES");
 	DrawInstructions(IT_STANDARD);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	SwitchMenu[SW_CEILING].active = SwitchMenu[SW_FLOORS].active = IsA386;
+#endif
 
 	fontnumber = 2;
 
@@ -1142,15 +1222,19 @@
 
 			switch(i)
 			{
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+				// Bits of different code for AOG
 				case SW_LIGHTING:
 					if (gamestate.flags & GS_LIGHTING)
 						Shape++;
 				break;
 
+#ifndef GAMEVER_RESTORATION_AOG
 				case SW_REBA_ATTACK_INFO:
 					if (gamestate.flags & GS_ATTACK_INFOAREA)
 						Shape++;
 				break;
+#endif
 
 				case SW_CEILING:
 					if (gamestate.flags & GS_DRAW_CEILING)
@@ -1161,6 +1245,23 @@
 					if (gamestate.flags & GS_DRAW_FLOOR)
 						Shape++;
 				break;
+#ifdef GAMEVER_RESTORATION_AOG
+
+				case SW_HEART_BEAT:
+					if (gamestate.flags & GS_HEARTB_SOUND)
+						Shape++;
+				break;
+
+				case SW_REBA_ATTACK_INFO:
+					if (gamestate.flags & GS_ATTACK_INFOAREA)
+						Shape++;
+				break;
+
+				case SW_AUTO_MAP:
+					if (gamestate.flags & GS_TAB_ROTATED_MAP)
+						Shape++;
+				break;
+#endif
 			}
 
 			VWB_DrawPic(SwitchItems.x-16,SwitchItems.y+i*SwitchItems.y_spacing-1,Shape);
@@ -1178,10 +1279,20 @@
 {
 	#define DESCRIPTIONS_Y_POS		134
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	char *instr[] = {{"TOGGLES LIGHT SOURCING IN HALLWAYS"},
+						  {"TOGGLES GRAPHICS DRAWN FOR CEILINGS"},
+						  {"TOGGLES GRAPHICS DRAWN FOR FLOOR"},
+						  {"TOGGLES HEART BEAT SOUND WITH EKG"},
+						  {"TOGGLES DETAILED ATTACKER INFO"},
+						  {"SWAPS THE <TAB> / <SHIFT TAB> FUNCTIONS"}};
+#else
 	char *instr[] = {{"TOGGLES LIGHT SOURCING IN HALLWAYS"},
 						  {"TOGGLES DETAILED ATTACKER INFO"},
 						  {"TOGGLES CEILING MAPPING"},
 						  {"TOGGLES FLOOR MAPPING"}};
+#endif
 
 	fontnumber = 2;
 
@@ -1231,7 +1342,10 @@
 	 {
 	  SD_WaitSoundDone();
 	  SD_SetSoundMode(sdm_Off);
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	  SD_SetDigiDevice(sds_Off);
+#endif
 	  DrawSoundMenu();
 	 }
 	 break;
@@ -1272,10 +1386,16 @@
 	case 6:
 	  if (DigiMode!=sds_SoundSource)
 	  {
+      /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       if (SoundMode==sdm_Off)
 			SD_SetSoundMode(sdm_PC);
+#endif
 		SD_SetDigiDevice(sds_SoundSource);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		CA_LoadAllSounds();
+#endif
 		DrawSoundMenu();
 		ShootSnd();
 	  }
@@ -1284,10 +1404,16 @@
 	case 7:
 	  if (DigiMode!=sds_SoundBlaster)
 	  {
+      /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       if (SoundMode==sdm_Off)
 			SD_SetSoundMode(sdm_PC);
+#endif
 		SD_SetDigiDevice(sds_SoundBlaster);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		CA_LoadAllSounds();
+#endif
 		DrawSoundMenu();
 	   ShootSnd();
 	  }
@@ -2044,7 +2170,12 @@
 //--------------------------------------------------------------------------
 void DefineMouseBtns(void)
 {
+	/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_ANY_LATE
 	CustomCtrls mouseallowed={1,1,1,1};
+#else
+	CustomCtrls mouseallowed={0,1,1,1};
+#endif
 	EnterCtrlData(2,&mouseallowed,DrawCustMouse,PrintCustMouse,MOUSE);
 }
 
@@ -3173,6 +3304,8 @@
 					if (!CheckDiskSpace(DISK_SPACE_NEEDED,CANT_SAVE_GAME_TXT,cds_menu_print))
 						return(which);
 
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			 //
 			 // ALREADY IN A GAME?
 			 //
@@ -3182,6 +3315,7 @@
 						MenuFadeOut();
 						return 0;
 					}
+#endif
 
 				ShootSnd();
 				MenuFadeOut();
@@ -3830,7 +3964,10 @@
 {
 	int i;
 
+   /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    VW_FadeOut();
+#endif
 #if GAME_VERSION == SHAREWARE_VERSION
 	ShowPromo();
 #endif
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MENU.H bstone/3D_MENU.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MENU.H	1994-08-22 15:51:24.000000000 +0300
+++ bstone/3D_MENU.H	2015-06-27 14:35:54.645931300 +0300
@@ -22,7 +22,12 @@
 
 #define INSTRUCTIONS_TEXT_COLOR	0x53
 
+/*** BLAKE STONE: ALIENS OF GOLD V3.0 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+#define TERM_BACK_COLOR				0x04
+#else
 #define TERM_BACK_COLOR				0x02
+#endif
 #define TERM_SHADOW_COLOR			0x01
 
 //
@@ -40,7 +45,12 @@
 #define BKGDCOLOR		(0x76)
 #define STRIPE			0x2c
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define MenuFadeOut()	VL_FadeOut(0,255,43,0,0,10)
+#else
 #define MenuFadeOut()	VL_FadeOut(0,255,40,44,44,10)
+#endif
 
 
 #define READCOLOR		0x4a
@@ -51,9 +61,16 @@
 
 #define MenuFadeIn()	VL_FadeIn(0,255,&vgapal,10)
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define MENUSONG  	MEETINGA_MUS
+#define ROSTER_MUS   LEVELA_MUS
+#define TEXTSONG		RUMBAA_MUS
+#else
 #define MENUSONG  	LASTLAFF_MUS
 #define ROSTER_MUS   HISCORE_MUS
 #define TEXTSONG		TOHELL_MUS
+#endif
 
 #define QUITSUR	"Are you sure you want\n"\
 						"to quit this great game? (Y/N)"
@@ -133,9 +150,18 @@
 typedef enum
 {
 	SW_LIGHTING,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	SW_REBA_ATTACK_INFO,
+#endif
 	SW_CEILING,
 	SW_FLOORS,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	SW_HEART_BEAT,
+	SW_REBA_ATTACK_INFO,
+	SW_AUTO_MAP,
+#endif
 
 } sw_labels;
 
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MSGS.C bstone/3D_MSGS.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_MSGS.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/3D_MSGS.C	2015-06-27 14:35:54.647542100 +0300
@@ -9,8 +9,14 @@
 //---------------------------------------------------------------------------
 
 char far food_msg1[]="\r FOOD UNIT DISPENSES\r"
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+							  " SOMETHING RESEMBLING\r"
+							"        FOOD.";
+#else
 							  "  SOMETHING EDIBLE.\r"
 							"\r     TOKENS: XX";
+#endif
 
 
 //---------------------------------------------------------------------------
@@ -20,9 +26,15 @@
 //---------------------------------------------------------------------------
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far bevs_msg1[]="\r\r FOOD UNIT DISPENSES\r"
+							  "  A COLD BEVERAGE.";
+#else
 char far bevs_msg1[]="\r FOOD UNIT DISPENSES\r"
 							  "  A COLD BEVERAGE.\r"
 							"\r     TOKENS: XX";
+#endif
 
 
 //---------------------------------------------------------------------------
@@ -117,8 +129,11 @@
 											" ACTIVATED AND READY.";
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char far RadarEnergyGoneMsg[]  = "\r\r  RADAR MAGNIFICATION\r"
 												 "    ENERGY DEPLETED.";
+#endif
 
 
 char far EnergyPackDepleted[] = "^FC19\r       WARNING:\r"
@@ -144,6 +159,8 @@
 
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //---------------------------------------------------------------------------
 //
 //						        FISSION DETONATOR(S) MESSAGES
@@ -191,6 +208,7 @@
 														 " SECURITY\r"
 														 " ALREADY\r"
 														 " DISABLED.";
+#endif
 
 
 //---------------------------------------------------------------------------
@@ -206,9 +224,21 @@
 char far bonus_msg2[]="^SH002^FC57\r\r ACCESS CARD:\r"
 										  "^FCA6 YELLOW LEVEL";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far bonus_msg3[]="^SH003^FC57\r\r ACCESS CARD:\r"
+										  "^FCA6 GREEN LEVEL";
+#endif
+
 char far bonus_msg4[]="^SH004^FC57\r\r ACCESS CARD:\r"
 										  "^FCA6  BLUE LEVEL";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far bonus_msg5[]="^SH005^FC57\r\r ACCESS CARD:\r"
+										  "^FCA6  GOLD LEVEL";
+#endif
+
 char far bonus_msg7[]=   "^SH006^FC57\r   WEAPON:\r"
 											"^FCA6 ENERGY PACK\r"
 												  "   (  UNITS)";
@@ -244,10 +274,21 @@
 												" DISCHARGE\r"
 												"    UNIT";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char far bonus_msg21a[]="^SH0E4^FC57\r\r   WEAPON:\r"
 											 "^FCA6 ANTI-PLASMA\r"
 													"   CANNON";
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far bonus_msg24[]="^SH020^FC57\r\r FOOD TOKEN:\r"
+										 "^FCA6  1 CREDIT";
+
+char far bonus_msg25[]="^SH021^FC57\r\r FOOD TOKEN:\r"
+										 "^FCA6  5 CREDITS";
+#else
 char far bonus_msg24[]="^SH020^FC57\r  FOOD TOKEN:\r"
 										 "^FCA6   1 CREDIT\r"
 											 "\r  TOKENS: XX";
@@ -255,6 +296,7 @@
 char far bonus_msg25[]="^SH021^FC57\r  FOOD TOKEN:\r"
 										 "^FCA6   5 CREDITS"
 											 "\r  TOKENS: XX";
+#endif
 
 char far bonus_msg12[]="^SH00B^FC57\r\r   HEALTH:\r"
 											"^FCA6 PLASMA BAG";
@@ -281,6 +323,8 @@
 char far bonus_msg20[]="^SH013^FC57\r\r    FOOD:\r"
 											"^FCA6 WATER PUDDLE";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char far bonus_msg26[]=   "^SH0D8^FC57   FISSION\r"
 												 "  DETONATOR\r\r"
 										  "^FCA6PRESS TILDE OR\r"
@@ -289,11 +333,18 @@
 char far bonus_msg27[]=   "^SH0D9^FC57\r   RADAR:  \r"
 											 "^FCA6MAGNIFICATION\r"
 													"   ENERGY";
+#endif
 
 char far * far BonusMsg[]=
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			bonus_msg1,bonus_msg2,bonus_msg3,bonus_msg4,bonus_msg5,
+			bonus_msg7,bonus_msg7,bonus_msg8,bonus_msg9,bonus_msg10,bonus_msg21,
+#else
 			bonus_msg1,bonus_msg2,bonus_msg4,
 			bonus_msg7,bonus_msg7,bonus_msg8,bonus_msg9,bonus_msg10,bonus_msg21,bonus_msg21a,
+#endif
 
 			bonus_msg12,bonus_msg11,
 			bonus_msg18,bonus_msg17,bonus_msg23,bonus_msg22,bonus_msg19,
@@ -305,7 +356,10 @@
 
 			0,0,0,
 			bonus_msg24,bonus_msg25,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			bonus_msg26,bonus_msg27,
+#endif
 };
 
 //---------------------------------------------------------------------------
@@ -316,7 +370,12 @@
 
 //	Sector Patrol
 char far actor_info4[]="^AN04^FC17\r\r  ATTACKING:\r"
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+										  "^FCA6SECTOR PATROL";
+#else
 										  "^FCA6 SECTOR GUARD";
+#endif
 
 //	hang_terrotobj,
 char far actor_info5[]="^AN05^FC17\r  ATTACKING:\r"
@@ -339,7 +398,12 @@
 											"^FCA6PLASMA SPHERE";
 //	STAR Sentinel
 char far actor_info13[]="^AN0D^FC17\r\r  ATTACKING:\r"
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+											"^FCA6STAR SENTINEL";
+#else
 											"^FCA6 TECH WARRIOR";
+#endif
 //	genetic_guardobj,
 char far actor_info14[]="^AN0E^FC17\r  ATTACKING:\r"
 										 "^FCA6 HIGH-SECURITY\r"
@@ -368,18 +432,27 @@
 												"    GUARD";
 
 //	Alien Protector (old STAR Trooper)
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far actor_info24[]="^AN18^FC17\r\r  ATTACKING:\r"
+									    "^FCA6 STAR TROOPER";
+#else
 char far actor_info24[]="^AN18^FC17\r  ATTACKING:\r"
 									    "^FCA6    ALIEN\r"
 										      "  PROTECTOR";
+#endif
 
 //	goldsternobj,
 char far actor_info25[]="^AN19^FC17\r\r  ATTACKING:\r"
 											"^FCA6 DR GOLDFIRE";
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //	gold_morphobj,
 char far actor_info25m[]="^AN28^FC17\r\r  ATTACKING:\r"
 											 "^FCA6   MORPHED\r"
 											      " DR GOLDFIRE";
+#endif
 
 //	volatiletransportobj,
 char far actor_info27[]="^SH072^FC17\r  ATTACKING:\r"
@@ -413,6 +486,8 @@
 												 " TOXIC SLUDGE.";
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char far actor_info41a[]="^SH0E2^FC17\r  ATTACKING:\r"
 										   "^FCA6 STANDING IN\r"
 												  " TOXIC SLUDGE.";
@@ -422,6 +497,7 @@
 										   "^FCA6 STANDING IN\r"
 											 	  "  BIO TOXIC\r"
 												  "    WASTE.";
+#endif
 
 
 char far actor_info43[]="^AN1D^FC17\r  ATTACKING:\r"
@@ -429,6 +505,8 @@
 												"   BARRIER.";
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 char far actor_info43a[]="^SH0F4^FC17\r  ATTACKING:\r"
 											"^FCA6    POST\r"
 												  "   BARRIER.";
@@ -436,6 +514,7 @@
 char far actor_info43b[]="^SH0FC^FC17\r  ATTACKING:\r"
 									  	   "^FCA6    SPIKE\r"
 											 	  "   BARRIER.";
+#endif
 
 
 char far actor_info44[]="^AN1e^FC17\r  ATTACKING:\r"
@@ -462,6 +541,13 @@
 												"   GUARDIAN";
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far actor_info50[]="^SH07A^FC17\r  ATTACKING:\r"
+										  "^FCA6  PROJECTION\r"
+										   	 "  GENERATOR\r"
+                                     "  EXPLOSION";
+#else
 char far actor_info50[]="^SH07A^FC17\r  ATTACKING:\r"
 										  "^FCA6   SECURITY\r"
 										   	 "    CUBE\r"
@@ -496,14 +582,19 @@
 char far actor_info56[]="^AN2c^FC17\r  ATTACKING:\r"
 										   "^FCA6 THE CRAWLER\r"
                                       "    BEAST";
+#endif // VERSIONS RESTORATION
 
 
 
 
 char far * far ActorInfoMsg[]=
 {
-//			0,0,						// nothing,player
-//			0,0,0,					// inert,fixup,dead
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Re-enable these for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+			0,0,						// nothing,player
+			0,0,0,					// inert,fixup,dead
+#endif
 
 			actor_info4,			// Sector Patrol
 			actor_info5,			// Turret
@@ -524,7 +615,10 @@
 			actor_info36,        // Liquid Alien
 			actor_info24,        // Alien Protector (old STAR Trooper)
 			actor_info25,        // Goldstern
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			actor_info25m,       // Goldstern Morphed
+#endif
 			actor_info27,        // Volatile Transport
 			actor_info28,        // Floating Bomb
 
@@ -537,31 +631,43 @@
 			actor_info48,			// acid dragon
 			actor_info49,			// mech guardian
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          actor_info53,			// Final Boss 1
 			actor_info54,			// Final Boss 2
 			actor_info55,			// Final Boss 3
 			actor_info56,			// Final Boss 4
+#endif
 
 			0,0,0,0,					// blake,crate 1, crate 2, crate 3,
 
 			actor_info41,        // Green Ooze
 			actor_info42,        // Black Ooze
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			actor_info41a,       // Green2 Ooze
 			actor_info42a,       // Black2 Ooze
+#endif
 			0,							// Pod Egg
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			actor_info44,			// morphing_spider mutant
 			actor_info47,			// morphing_reptilian warrior
 			actor_info16,        // morphing_Mutant Human 2
+#endif
 
 			0,                   // SPACER
 
 			actor_info31,        // Electro-Alien SHOT
 			0,                   // Post Barrier
 			actor_info43,        // Arc Barrier
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			actor_info43a,       // VPost Barrier
 			actor_info43b,       // VSpike Barrier
          actor_info25m,			// Gold Morph Shot obj
+#endif
 			0,                   // Security Light
 			actor_info33,        // Explosion
 			0, 0,                // Steam Grate, Steam Pipe
@@ -575,12 +681,18 @@
 
 			0,0,						// vent drip, player sp shot,
 			0,							// flicker light,
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			0,0,						// Door Bomb, Door Bomb reserve
+#endif
 			0,							// grenade,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
          0,							// BFG Shot
 			actor_info51,        // BFG Explosion
 			actor_info52,        // BFG Explosion
+#endif
 
 			actor_info44,			// Boss 1 SHOT
 			actor_info45,			// Boss 2 SHOT
@@ -588,11 +700,14 @@
 			actor_info47,			// Boss 4 SHOT
 			actor_info48,			// Boss 5 SHOT
 			actor_info49,			// Boss 6 SHOT
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			actor_info54,			// Boss 8 SHOT
 			actor_info56,			// Boss 10 SHOT
 
          0,							// Doorexplosion
          actor_info52,			// gr_explosion
+#endif
 };
 
 
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_PLAY.C bstone/3D_PLAY.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_PLAY.C	1994-10-19 17:26:20.000000000 +0200
+++ bstone/3D_PLAY.C	2015-06-27 14:35:54.649420400 +0300
@@ -85,7 +85,12 @@
 int			joystickport;
 int			dirscan[4] = {sc_UpArrow,sc_RightArrow,sc_DownArrow,sc_LeftArrow};
 int			buttonscan[NUMBUTTONS] =
-				{sc_Control,sc_Alt,sc_RShift,sc_Space,sc_1,sc_2,sc_3,sc_4,sc_5,sc_6,sc_7};
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+{sc_Control,sc_Alt,sc_RShift,sc_Space,sc_1,sc_2,sc_3,sc_4,sc_5};
+#else
+{sc_Control,sc_Alt,sc_RShift,sc_Space,sc_1,sc_2,sc_3,sc_4,sc_5,sc_6,sc_7};
+#endif
 int			buttonmouse[4]={bt_attack,bt_strafe,bt_use,bt_nobutton};
 int			buttonjoy[4]={bt_attack,bt_strafe,bt_use,bt_run};
 
@@ -142,6 +147,113 @@
 
 int far songs[]=
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Copied from bstone port (BS6), and later modified (for BS1)
+#ifdef GAMEVER_RESTORATION_AOG
+	// Episode 1
+	INCNRATN_MUS,
+	DRKHALLA_MUS,
+	JUNGLEA_MUS,
+	RACSHUFL_MUS,
+	DRKHALLA_MUS,
+	HIDINGA_MUS,
+	JUNGLEA_MUS,
+	RACSHUFL_MUS,
+	HIDINGA_MUS,
+	DRKHALLA_MUS,
+	INCNRATN_MUS,
+	0,
+	0,
+	0,
+	0,
+
+#if GAME_VERSION != SHAREWARE_VERSION
+	// Episode 2
+	FREEDOMA_MUS,
+	DRKHALLA_MUS,
+	STRUTA_MUS,
+	INTRIGEA_MUS,
+	MEETINGA_MUS,
+	DRKHALLA_MUS,
+	INCNRATN_MUS,
+	RACSHUFL_MUS,
+	JUNGLEA_MUS,
+	GENEFUNK_MUS,
+	THEME_MUS,
+	0,
+	0,
+	0,
+	0,
+
+	// Episode 3
+	LEVELA_MUS,
+	HIDINGA_MUS,
+	STRUTA_MUS,
+	THEME_MUS,
+	RACSHUFL_MUS,
+	INCNRATN_MUS,
+	GOLDA_MUS,
+	JUNGLEA_MUS,
+	DRKHALLA_MUS,
+	THEWAYA_MUS,
+	FREEDOMA_MUS,
+	0,
+	0,
+	0,
+	0,
+
+	// Episode 4
+	HIDINGA_MUS,
+	DRKHALLA_MUS,
+	GENEFUNK_MUS,
+	JUNGLEA_MUS,
+	INCNRATN_MUS,
+	GOLDA_MUS,
+	HIDINGA_MUS,
+	JUNGLEA_MUS,
+	DRKHALLA_MUS,
+	THEWAYA_MUS,
+	RUMBAA_MUS,
+	0,
+	0,
+	0,
+	0,
+
+	// Episode 5
+	RACSHUFL_MUS,
+	SEARCHNA_MUS,
+	JUNGLEA_MUS,
+	HIDINGA_MUS,
+	GENEFUNK_MUS,
+	MEETINGA_MUS,
+	S2100A_MUS,
+	THEME_MUS,
+	INCNRATN_MUS,
+	DRKHALLA_MUS,
+	THEWAYA_MUS,
+	0,
+	0,
+	0,
+	0,
+
+	// Episode 6
+	TIMEA_MUS,
+	RACSHUFL_MUS,
+	GENEFUNK_MUS,
+	HIDINGA_MUS,
+	S2100A_MUS,
+	THEME_MUS,
+	THEWAYA_MUS,
+	JUNGLEA_MUS,
+	MEETINGA_MUS,
+	DRKHALLA_MUS,
+	INCNRATN_MUS,
+	0,
+	0,
+	0,
+	0,
+#endif
+#else
 	MAJMIN_MUS,              // 0
 	STICKS_MUS,              // 1
 	MOURNING_MUS,            // 2
@@ -166,6 +278,7 @@
 	PLOT_MUS,					 // 21
 	GIVING_MUS,              // 22
 	VACCINAP_MUS,            // 23
+#endif
 };
 
 /*
@@ -308,7 +421,10 @@
 */
 
 
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 boolean pollMouseUsed=false;
+#endif
 
 void PollMouseMove (void)
 {
@@ -320,7 +436,12 @@
 
 // Double speed when shift is pressed.
 //
+	/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_ANY_LATE
 	if (Keyboard[sc_LShift] || Keyboard[sc_RShift] || buttonstate[bt_run])
+#else
+	if (Keyboard[sc_LShift] || Keyboard[sc_RShift])
+#endif
 	{
 		controly += (mouseymove*20/(13-mouseadjustment))*4;
 		controlx += (mousexmove*10/(13-mouseadjustment))/2;
@@ -329,10 +450,13 @@
 	controlx += mousexmove*10/(13-mouseadjustment);
 	controly += mouseymove*20/(13-mouseadjustment);
 
+	/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (mousexmove || mouseymove)
 		pollMouseUsed=true;
 	else
 		pollMouseUsed=false;
+#endif
 }
 
 
@@ -580,9 +704,19 @@
 	int		i;
 	byte	scan;
 	unsigned	temp;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	static boolean H_KeyReleased;
+#else
 	static boolean Plus_KeyReleased;
 	static boolean Minus_KeyReleased;
+#endif
 	static boolean I_KeyReleased;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// CheckMusicToggle is "inlined" in AOG v3.0
+#ifdef GAMEVER_RESTORATION_AOG
+	static boolean M_KeyReleased;
+#endif
 	static boolean S_KeyReleased;
 
 #if IN_DEVELOPMENT || BETA_TEST
@@ -619,8 +753,48 @@
 	}
 #endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// CheckMusicToggle is "inlined" in AOG v3.0, and with no "return" statement
+#ifdef GAMEVER_RESTORATION_AOG
+	if (Keyboard[sc_M])
+	{
+		if (M_KeyReleased
+#if GAME_VERSION != SHAREWARE_VERSION
+			 && ((jam_buff[0] != sc_J) || (jam_buff[1] != sc_A))
+#endif
+			)
+		{
+			if (!AdLibPresent)
+			{
+				DISPLAY_TIMED_MSG(NoAdLibCard,MP_BONUS,MT_GENERAL);
+				SD_PlaySound(NOWAYSND);
+            //return;
+			}
+			else
+			if (MusicMode != smm_Off)
+			{
+				SD_SetMusicMode(smm_Off);
+				_fmemcpy((char far *)&MusicOn[58],"OFF.",4);
+			}
+			else
+			{
+				SD_SetMusicMode(smm_AdLib);
+				StartMusic(false);
+				_fmemcpy((char far *)&MusicOn[58],"ON. ",4);
+			}
+
+			DISPLAY_TIMED_MSG(MusicOn,MP_BONUS,MT_GENERAL);
+			M_KeyReleased=false;
+		}
+	}
+	else
+		M_KeyReleased=true;
+#else
 	CheckMusicToggle();
+#endif
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (gamestate.rpower)
 	{
 		if (Keyboard[sc_Plus] || Keyboard[sc_kpPlus])
@@ -647,6 +821,7 @@
 		else
 			Minus_KeyReleased=true;
 	}
+#endif
 
 	if (Keyboard[sc_S])
 	{
@@ -707,9 +882,20 @@
 				if (gamestate.numkeys[loop] < MAXKEYS)
 					gamestate.numkeys[loop]=1;
 
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			if (gamestate.mapon < MAPS_PER_EPISODE-1)
+			{
+				GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon+1).locked = false;
+				gamestate.key_floor = gamestate.mapon+1;
+			}
+#endif
 			gamestate.health = 100;
 			gamestate.ammo = MAX_AMMO;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			gamestate.rpower = MAX_RADAR_ENERGY;
+#endif
 
 			if (!DebugOk)
 			{
@@ -880,11 +1066,14 @@
 	if (Keyboard[sc_Tab])
 		PopupAutoMap();
 
-  	if (Keyboard[sc_Tilde])
+ /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+ 	if (Keyboard[sc_Tilde])
    {
       Keyboard[sc_Tilde] = 0;
    	TryDropPlasmaDetonator();
    }
+#endif
 
 
 	if ((DebugOk || gamestate.flags & GS_MUSIC_TEST) && (Keyboard[sc_BackSpace]))
@@ -933,6 +1122,24 @@
 		}
 	}
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if (Keyboard[sc_H])
+	{
+		if (H_KeyReleased)
+		{
+			gamestate.flags ^= GS_HEARTB_SOUND;
+			if (gamestate.flags & GS_HEARTB_SOUND)
+				DISPLAY_TIMED_MSG(ekg_heartbeat_enabled,MP_HEARTB_SND,MT_GENERAL);
+			else
+				DISPLAY_TIMED_MSG(ekg_heartbeat_disabled,MP_HEARTB_SND,MT_GENERAL);
+			H_KeyReleased = false;
+		}
+	}
+	else
+		H_KeyReleased = true;
+#endif
+
 	if (Keyboard[sc_I])
 	{
 		if (I_KeyReleased)
@@ -952,8 +1159,35 @@
 #ifdef CEILING_FLOOR_COLORS
 	if (Keyboard[sc_C])
 	{
-		gamestate.flags ^= GS_DRAW_CEILING;
-		Keyboard[sc_C] = 0;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (IsA386)
+		{
+#endif
+			gamestate.flags ^= GS_DRAW_CEILING;
+			Keyboard[sc_C] = 0;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		}
+		else
+		{
+			char oldfontnum = fontnumber;
+			VW_ScreenToScreen (displayofs,bufferofs,80,160);
+			ClearMemory();
+			WindowX = 0;
+			WindowY = 16;
+			WindowW = 320;
+			WindowH = 168;
+			fontnumber = 1;
+			CacheMessage(MUSTBE386TEXT);
+			IN_ClearKeysDown();
+			IN_Ack();
+			IN_ClearKeysDown();
+			PM_CheckMainMem();
+			CleanDrawPlayBorder();
+			fontnumber = oldfontnum;
+		}
+#endif
 	}
 
 	if (Keyboard[sc_F])
@@ -961,11 +1195,38 @@
 		ThreeDRefresh();
 		ThreeDRefresh();
 
-		gamestate.flags ^= GS_DRAW_FLOOR;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (IsA386)
+		{
+#endif
+			gamestate.flags ^= GS_DRAW_FLOOR;
 
-		Keyboard[sc_F] = 0;
+			Keyboard[sc_F] = 0;
 #if DUAL_SWAP_FILES
-		ChangeSwapFiles(true);
+			ChangeSwapFiles(true);
+#endif
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		}
+		else
+		{
+			char oldfontnum = fontnumber;
+			VW_ScreenToScreen (displayofs,bufferofs,80,160);
+			ClearMemory();
+			WindowX = 0;
+			WindowY = 16;
+			WindowW = 320;
+			WindowH = 168;
+			fontnumber = 1;
+			CacheMessage(MUSTBE386TEXT);
+			IN_ClearKeysDown();
+			IN_Ack();
+			IN_ClearKeysDown();
+			PM_CheckMainMem();
+			CleanDrawPlayBorder();
+			fontnumber = oldfontnum;
+		}
 #endif
 	}
 #endif
@@ -978,6 +1239,9 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// CheckMusicToggle is "inlined" within CheckKeys in AOG v3.0
+#ifndef GAMEVER_RESTORATION_AOG
 //-------------------------------------------------------------------------
 // CheckMusicToggle()
 //-------------------------------------------------------------------------
@@ -1019,6 +1283,7 @@
 	else
 		M_KeyReleased=true;
 }
+#endif
 
 
 char far Computing[] = {"Computing..."};
@@ -1088,8 +1353,18 @@
 //--------------------------------------------------------------------------
 void PopupAutoMap()
 {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+	// Somewhat different implementation for AOG
+#ifdef GAMEVER_RESTORATION_AOG
+	#define BASE_X	40
+	#define BASE_Y	44
+
+	unsigned flags = (OV_PLAYER|OV_NODEBUG|OV_HIDDEN|OV_ROTATED|OV_DOORS|OV_KEYS);
+	flags |= ExtraRadarFlags;
+#else
 	#define BASE_X	64
 	#define BASE_Y	44
+#endif
 
 	ThreeDRefresh();
 	ThreeDRefresh();
@@ -1098,10 +1373,37 @@
 	ClearMemory();
 	CacheDrawPic(BASE_X,BASE_Y,AUTOMAPPIC);
 
+#ifdef GAMEVER_RESTORATION_AOG
+	if (Keyboard[sc_Alt] && DebugOk)
+		flags &= ~OV_NODEBUG;
+
+	if (gamestate.flags & GS_TAB_ROTATED_MAP)
+	{
+		if (Keyboard[sc_RShift] || Keyboard[sc_LShift])
+			flags &= ~OV_ROTATED;
+	}
+	else
+	{
+		if (!Keyboard[sc_RShift] && !Keyboard[sc_LShift])
+			flags &= ~OV_ROTATED;
+	}
+
+	ShowOverhead(BASE_X+4,BASE_Y+4,flags);
+	ShowStats(BASE_X+157,BASE_Y+25,ss_quick);
+#else
 	ShowStats(BASE_X+101,BASE_Y+22,ss_quick,&gamestuff.level[gamestate.mapon].stats);
+#endif
 
+#ifdef GAMEVER_RESTORATION_AOG
+	while (Keyboard[sc_Tab])
+	{
+		CalcTics();
+		CycleColors();
+	}
+#else
 	while (Keyboard[sc_Tilde])
 		CalcTics();
+#endif
 
 #if GAME_VERSION != SHAREWARE_VERSION && IN_DEVELOPMENT
 //	if (DebugOk && PP_step)
@@ -1110,7 +1412,14 @@
 
 	IN_StartAck ();
 	while (!IN_CheckAck ())
+#ifdef GAMEVER_RESTORATION_AOG
+	{
+		CalcTics();
+		CycleColors();
+	}
+#else
 		CalcTics();
+#endif
 
 	PM_CheckMainMem();
 	CleanDrawPlayBorder();
@@ -1341,7 +1650,12 @@
 	else
 #endif
 	if (playstate==ex_victorious)
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		musicchunk = THEME_MUS;
+#else
 		musicchunk = FORTRESS_MUS;
+#endif
 	else
 		musicchunk = songs[gamestate.mapon+gamestate.episode*MAPS_PER_EPISODE];
 
@@ -1601,7 +1915,13 @@
 					switch (ob->obclass)
 					{
 						case arc_barrierobj:			// arc barrier - Mild Damage
+							/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+							// Should explain the comment mentioning 100
+#ifdef GAMEVER_RESTORATION_AOG
+							damage = 100;
+#else
 							damage = 500;			// 100
+#endif
 						break;
 
 						case post_barrierobj:		// post barrier - Butt kicker
@@ -1739,7 +2059,12 @@
 	objtype *obj;
 
 	playstate = TimeCount = lasttimecount = 0;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	frameon = 0;
+#else
 	framecount = frameon = 0;
+#endif
 	pwallstate = anglefrac = 0;
 	memset (buttonstate,0,sizeof(buttonstate));
 	ClearPaletteShifts ();
@@ -1850,7 +2175,12 @@
 {
 	ShowQuickMsg=false;
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	if ((demoplayback) || (gamestate.mapon != 1) || (gamestate.flags & GS_QUICKRUN))
+#else
 	if ((demoplayback) || (gamestate.mapon) || (gamestate.flags & GS_QUICKRUN))
+#endif
 		return;
 
 	ThreeDRefresh();
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_SCALE.C bstone/3D_SCALE.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_SCALE.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/3D_SCALE.C	2015-06-27 14:35:54.650830300 +0300
@@ -5,7 +5,12 @@
 
 #define OP_RETF	0xcb
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define CLOAKED_SHAPES			(false)
+#else
 #define CLOAKED_SHAPES			(true)
+#endif
 
 /*
 =============================================================================
@@ -22,11 +27,20 @@
 unsigned    centery;
 
 int normalshade;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+int normalshade_div = SHADE_DIV;
+int shade_max = SHADE_MAX;
+#else
 int normalshade_div = 1;
 int shade_max = 1;
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 int nsd_table[] = { 1, 6, 3, 4, 1, 2};
 int sm_table[] =  {36,51,62,63,18,52};
+#endif
 
 
 /*
@@ -199,9 +213,12 @@
 
 extern unsigned far * linecmds;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern boolean useBounceOffset;
 
 fixed bounceOffset=0;
+#endif
 
 /*
 =======================
@@ -225,18 +242,26 @@
 	unsigned far * srcpost;
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	fixed bounce;
 
 	if (useBounceOffset)
 		bounce=bounceOffset;
 	else
 		bounce=0;
+#endif
 
 	srcpost=linecmds;
 	dc_iscale=(64u*65536u)/(longword)height;
 	screenstep = ((longword)height)<<10;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	sprtopoffset=((long)viewheight<<15)-((long)height<<15);
+#else
 	sprtopoffset=((long)viewheight<<15)-((long)height<<15)+(bounce>>1);
+#endif
 	dc_seg=*(((unsigned *)&srcpost)+1);
 
 	end=(*(srcpost++))>>1;
@@ -330,18 +355,26 @@
 	long dc_yl,dc_yh;
 	unsigned far * srcpost;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	fixed bounce;
 
 	if (useBounceOffset)
 		bounce=bounceOffset;
 	else
 		bounce=0;
+#endif
 
 	srcpost=linecmds;
 	dc_iscale=(64u*65536u)/(longword)height;
 	screenstep = ((longword)height)<<10;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	sprtopoffset=((long)viewheight<<15)-((long)height<<15);
+#else
 	sprtopoffset=((long)viewheight<<15)-((long)height<<15)+(bounce>>1);
+#endif
 	dc_seg=*(((unsigned *)&srcpost)+1);
 
 	end=(*(srcpost++))>>1;
@@ -477,13 +510,23 @@
 		frac=screenscale>>1;
 	x2 = x2 >= viewwidth ? viewwidth-1 : x2;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	i=shade_max-(63l*(long)(height>>3)/(long)normalshade)+lighting;
+#else
 	i=shade_max-(63l*(unsigned long)(height>>3)/(unsigned long)normalshade)+lighting;
+#endif
 
 	if (i<0)
 		i=0;
    else
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	i %= 64;
+#else
   	if (i > 63)
    	i = 63;
+#endif
 
 	shadingtable=lightsource+(i<<8);
 	swidth=shape->rightpix-shape->leftpix;
@@ -815,7 +858,12 @@
 //       0 == NO Shading
 //       63 == Max Shade (BLACK or near)
 //-------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void MegaSimpleScaleShape (int xcenter, int ycenter, int shapenum, unsigned height)
+#else
 void MegaSimpleScaleShape (int xcenter, int ycenter, int shapenum, unsigned height, unsigned shade)
+#endif
 {
 	t_compshape	_seg *shape;
 	int      dest;
@@ -854,10 +902,13 @@
 
 	screenscale=(64L<<20L)/(longword)height;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //
 // Choose shade table.
 //
 	shadingtable=lightsource+(shade<<8);	
+#endif
 
 //
 // store information in a vissprite
@@ -889,7 +940,12 @@
 				if (lastcolumn>=0)
 					{
 					(unsigned)linecmds=(unsigned)shape->dataofs[(unsigned)lastcolumn];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+					ScaleMaskedWidePost(height,bufferofs,startx,width);
+#else
 					ScaleMaskedWideLSPost(height,bufferofs,startx,width);
+#endif
 					width=1;
 					startx=x1;
 					lastcolumn=texturecolumn;
@@ -904,7 +960,12 @@
 		if (lastcolumn!=-1)
 			{
 			(unsigned)linecmds=(unsigned)shape->dataofs[(unsigned)lastcolumn];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			ScaleMaskedWidePost(height,bufferofs,startx,width);
+#else
 			ScaleMaskedWideLSPost(height,bufferofs,startx,width);
+#endif
 			}
 		}
 	else
@@ -916,7 +977,12 @@
 			if (texturecolumn>swidth)
 				texturecolumn=swidth;
 			(unsigned)linecmds=(unsigned)shape->dataofs[(unsigned)texturecolumn];
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			ScaleMaskedPost(height,bufferofs+(x1>>2));
+#else
 			ScaleMaskedLSPost(height,bufferofs+(x1>>2));
+#endif
 			}
 		}
 	bufferofs = old_bufferofs;
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_STATE.C bstone/3D_STATE.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_STATE.C	1994-07-25 12:51:54.000000000 +0300
+++ bstone/3D_STATE.C	2015-06-27 14:35:54.653616800 +0300
@@ -836,9 +836,24 @@
 										12000,			// liquid
 										7025,				// swat
 										5000,				// goldtern
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 										5000,				// goldstern Morphed
+#endif
 										2025,				// volatile transport
 										2025,				// floating bomb
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+										50000,			  		// vital
+
+										10000,				// spider_mutant
+										20000,				// breather_beast
+										30000,				// cyborg_warror
+										40000,				// reptilian_warrior
+										50000,				// acid_dragon
+										60000,				// mech_guardian
+
+#else
 										0,			  		// rotating cube
 
 										5000,				// spider_mutant
@@ -851,16 +866,29 @@
 										40000,			// final_boss #2
    									50000,			// final_boss #3
    									60000,			// final_boss #4
+#endif
 
 										0,0,0,0,0,		// blake,crate1/2/3, oozes
 										0,					// pod egg
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 										5000,				// morphing_spider_mutant
 										8000,				// morphing_reptilian_warrior
 										6055,				// morphing_mutant human2
+#endif
 
 };
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char far prj_msg[]=
+				  "^FC57 PROJECTION GENERATOR\r"
+						 "      DESTROYED!\r\r"
+				  "^FCA6   - X REMAINING -\r"
+						 " DESTROY THEM TO WIN!";
+#endif
+
 //---------------------------------------------------------------------------
 //  CheckAndReserve() - Checks for room in the obj_list and returns a ptr
 //								to the new object or a NULL.
@@ -886,7 +914,12 @@
 {
 	char buff[4];
 	int	tilex,tiley;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	boolean KeepSolid = false, givepoints=true;
+#else
 	boolean KeepSolid = false, givepoints=true, deadguy = true;
+#endif
 	classtype clas;
 
 	tilex = ob->x >> TILESHIFT;		// drop item on center
@@ -899,11 +932,23 @@
 	{
 		case podeggobj:
 			PlaySoundLocActor(PODHATCHSND,ob);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			InitSmartSpeedAnim(ob,SPR_POD_HATCH1,0,2,at_ONCE,ad_FWD,75);
+#else
 			InitSmartSpeedAnim(ob,SPR_POD_HATCH1,0,2,at_ONCE,ad_FWD,7);
+#endif
 			KeepSolid=true;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			givepoints=false;
+#else
 			deadguy = givepoints=false;
+#endif
 		break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case morphing_spider_mutantobj:
    	case morphing_reptilian_warriorobj:
 		case morphing_mutanthuman2obj:
@@ -912,6 +957,7 @@
          KeepSolid = true;
          deadguy = givepoints = false;
      	break;
+#endif
 
 
 	case crate1obj:
@@ -925,23 +971,55 @@
 		((statobj_t *)(ob->temp3))->shapenum = -1;		// Release reserve static
 
 		SpawnStatic(tilex,tiley,ob->temp2);
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		ob->obclass = explosionobj;
+#else
 		ob->obclass = deadobj;
+#endif
       ob->lighting = NO_SHADING;		// No Shading
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		InitSmartSpeedAnim(ob,SPR_GRENADE_EXPLODE2,0,3,at_ONCE,ad_FWD,32+(US_RndT()&7));
+#else
 		InitSmartSpeedAnim(ob,SPR_GRENADE_EXPLODE2,0,3,at_ONCE,ad_FWD,3+(US_RndT()&7));
+#endif
 		A_DeathScream(ob);
 		MakeAlertNoise(ob);
 	break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	case vitalobj:
+      ob->lighting = EXPLOSION_SHADING;
+		NewState(ob,&s_vital_die);
+		itoa(gamestate.secrettotal-1,buff,10);
+		prj_msg[55] = buff[0];
+		DisplayInfoMsg(prj_msg,MP_FLOOR_UNLOCKED+1,7*60,MT_BONUS);
+		gamestate.secrettotal--;
+	break;
+#endif
+
 	case floatingbombobj:
       ob->lighting = EXPLOSION_SHADING;
 		A_DeathScream(ob);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		InitSmartSpeedAnim(ob,SPR_FSCOUT_DIE1,0,7,at_ONCE,ad_FWD,30);
+#else
 		InitSmartSpeedAnim(ob,SPR_FSCOUT_DIE1,0,7,at_ONCE,ad_FWD,5);
+#endif
 	break;
 
 	case volatiletransportobj:
       ob->lighting = EXPLOSION_SHADING;
 		A_DeathScream(ob);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		InitSmartSpeedAnim(ob,SPR_GSCOUT_DIE1,0,8,at_ONCE,ad_FWD,30);
+#else
 		InitSmartSpeedAnim(ob,SPR_GSCOUT_DIE1,0,8,at_ONCE,ad_FWD,5);
+#endif
 	break;
 
 	case goldsternobj:
@@ -953,21 +1031,32 @@
 
 		GoldsternInfo.WaitTime = MIN_GOLDIE_WAIT + Random(MAX_GOLDIE_WAIT-MIN_GOLDIE_WAIT);			// Reinit Delay Timer before spawning on new position
 		clas = goldsternobj;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if ((gamestate.mapon==9) && !gamestate.boss_key_dropped)
+		{
+			PlaceItemType(bo_gold_key,tilex,tiley);
+			gamestate.boss_key_dropped = true;
+		}
+#endif
 	break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    case gold_morphobj:
       GoldsternInfo.flags = GS_NO_MORE;
 	 	PlaySoundLocActor(PODDEATHSND,ob);
       ob->flags |= FL_OFFSET_STATES;
    	InitAnim(ob, SPR_GOLD_DEATH1, 0, 4, at_ONCE, ad_FWD, 25, 9);
    break;
+#endif
 
 	case gen_scientistobj:
 		if (ob->flags & FL_INFORMANT)
 		{
 			givepoints=false;
 			clas = nothing;
-			gamestuff.level[gamestate.mapon].stats.accum_inf--;
+			GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_inf--;
 			if (!(gamestate.flags & GS_KILL_INF_WARN) || (US_RndT() < 25))
 			{
 				DisplayInfoMsg(dki_msg,MP_INTERROGATE-1,DISPLAY_MSG_STD_TIME*3,MT_GENERAL);
@@ -1049,6 +1138,34 @@
 		actorat[ob->tilex][ob->tiley] = NULL;
 	break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	case spider_mutantobj:
+	case breather_beastobj:
+	case cyborg_warriorobj:
+	case reptilian_warriorobj:
+	case acid_dragonobj:
+	case mech_guardianobj:
+		ActivatePinballBonus(B_GALIEN_DESTROYED);
+		PlaceItemNearTile(bo_gold_key,tilex,tiley);
+		NewState (ob,&s_ofs_die1);
+	break;
+
+	case mutant_human1obj:
+		PlaceItemNearTile(bo_clip2,tilex,tiley);
+		NewState (ob,&s_ofs_die1);
+	break;
+
+	case genetic_guardobj:
+	case gurneyobj:
+		// AOG RESTORATION - Same code as relocated for PS,
+		// but with an additional fallthrough
+		if (!(gamestate.weapons & (1<<wp_pistol)))
+			PlaceItemNearTile (bo_pistol,tilex,tiley);
+		else
+			PlaceItemNearTile(bo_clip2,tilex,tiley);
+		// Fallthrough
+#else
 	case cyborg_warriorobj:
 	case mech_guardianobj:
 	case reptilian_warriorobj:
@@ -1059,17 +1176,23 @@
 	case acid_dragonobj:
 	case final_boss3obj:
 	case final_boss4obj:
+#endif
 	case mutant_human2obj:
 	case scan_alienobj:
 	case lcan_alienobj:
 		NewState (ob,&s_ofs_die1);
 	break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case final_boss2obj:
 	 	PlaySoundLocActor(PODDEATHSND,ob);
    	InitAnim(ob, SPR_BOSS8_DIE1, 0, 4, at_ONCE, ad_FWD, 25, 9);
    break;
+#endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	case genetic_guardobj:
 	case final_boss1obj:
 	case gurneyobj:
@@ -1079,6 +1202,7 @@
 			PlaceItemNearTile(bo_clip2,tilex,tiley);
 		NewState (ob,&s_ofs_die1);
 	break;
+#endif
 
 	case gurney_waitobj:								// mutant asleep on gurney
 		InitSmartAnim(ob, SPR_GURNEY_MUT_B1, 0, 3,at_ONCE, ad_FWD);
@@ -1116,18 +1240,24 @@
 	if (KeepSolid)
 	{
 		ob->flags &= ~(FL_SHOOTABLE);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	   ob->flags2 &= ~FL2_BFG_SHOOTABLE;
       if (deadguy)
+#endif
 			ob->flags |= FL_DEADGUY;
 	}
 	else
 	{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       if (deadguy)
+#endif
 			ob->flags |= (FL_NONMARK | FL_DEADGUY);
 
 		if ((clas>=rentacopobj) && (clas<crate1obj) && (clas != electroobj) && (clas != goldsternobj))
 		{
-			gamestuff.level[gamestate.mapon].stats.accum_enemy++;
+			GAMEVER_RESTORATION_GAMESTUFF_LVL(gamestate.mapon).stats.accum_enemy++;
 #ifdef TRACK_ENEMY_COUNT
 numEnemy[clas]--;
 #endif
@@ -1140,7 +1270,10 @@
 				GivePoints(actor_points[clas-rentacopobj],true);
 
 		ob->flags &= ~(FL_SHOOTABLE | FL_SOLID | FL_FAKE_STATIC);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		ob->flags2 &= ~FL2_BFGSHOT_SOLID;
+#endif
 
 		if ((actorat[ob->tilex][ob->tiley]) == ob)
 		{
@@ -1159,7 +1292,10 @@
 		}
 	}
 
+   /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    DropCargo(ob);
+#endif
 
 	ob->tilex = tilex;
 	ob->tiley = tiley;
@@ -1193,15 +1329,21 @@
 
 void DoAttack(objtype *ob);
 extern statetype s_proshoot2;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 extern statetype s_goldmorphwait1;
+#endif
 extern boolean barrier_damage;
 
 void DamageActor (objtype *ob, unsigned damage, objtype *attacker)
 {
 	short old_hp = ob->hitpoints,wound_mod,mod_before=0,mod_after=1;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (!(ob->flags & FL_SHOOTABLE))
 		return;
+#endif
 
 	if (gamestate.weapon != wp_autocharge)
 	{
@@ -1223,6 +1365,8 @@
 				return;
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case arc_barrierobj:
          if (attacker->obclass == bfg_shotobj)
          {
@@ -1250,6 +1394,7 @@
 			else
 				ob->temp3 = damage;
 		return;
+#endif // VERSIONS RESTORATION
 	}
 
 //
@@ -1259,7 +1404,10 @@
 		damage <<= 1;
 
 	ob->hitpoints -= damage;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	ob->flags2 |= FL2_DAMAGE_CLOAK;
+#endif
 
 	if (ob->hitpoints<=0)
 	{
@@ -1277,6 +1425,8 @@
 			break;
 #endif
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 			case goldsternobj:
 				if (gamestate.mapon == GOLD_MORPH_LEVEL)
 				{
@@ -1291,6 +1441,7 @@
 					return;
 				}
 			break;
+#endif
 
 		}
 
@@ -1341,6 +1492,12 @@
 
 		switch (ob->obclass)
 		{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			case vitalobj:
+				NewState(ob,&s_vital_ouch);
+			break;
+#endif
 #if GAME_VERSION != SHAREWARE_VERSION
 			case volatiletransportobj:
 			case floatingbombobj:
@@ -1352,9 +1509,12 @@
 			NewState(ob,&s_goldpain);
 			break;
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case gold_morphobj:
 			NewState(ob,&s_mgold_pain);
 			break;
+#endif
 
 		case liquidobj:
 			NewState(ob,&s_liquid_ouch);
@@ -1374,10 +1534,13 @@
 		case reptilian_warriorobj:
 		case acid_dragonobj:
 		case mech_guardianobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case final_boss1obj:
 		case final_boss2obj:
 		case final_boss3obj:
 		case final_boss4obj:
+#endif
 
 		case genetic_guardobj:
 		case mutant_human1obj:
@@ -1865,8 +2028,11 @@
 	case breather_beastobj:
 	case reptilian_warriorobj:
 	case genetic_guardobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    case final_boss4obj:
    case final_boss2obj:
+#endif
 		PlaySoundLocActor(GGUARDHALTSND,ob);
 		NewState (ob,&s_ofs_chase1);
 		ob->speed *= 3;			// go faster when chasing player
@@ -1876,8 +2042,11 @@
 	case cyborg_warriorobj:
 	case mech_guardianobj:
 	case mutant_human1obj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    case final_boss3obj:
    case final_boss1obj:
+#endif
 		PlaySoundLocActor(BLUEBOYHALTSND,ob);
 		NewState (ob,&s_ofs_chase1);
 		ob->speed *= 2;			// go faster when chasing player
@@ -2017,9 +2186,12 @@
 				case proguardobj:
 				case swatobj:
 				case goldsternobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
             case gen_scientistobj:
             case floatingbombobj:
             case volatiletransportobj:
+#endif
 				break;
 
 			// Actors that look funny when just standing around go here...
@@ -2085,10 +2257,13 @@
 		case reptilian_warriorobj:
 		case acid_dragonobj:
 		case mech_guardianobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		case final_boss1obj:
 		case final_boss2obj:
 		case final_boss3obj:
 		case final_boss4obj:
+#endif
 			ob->temp2 = 1;
 			break;
 		}
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/3D_WSWTC.C bstone/3D_WSWTC.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/3D_WSWTC.C	1970-01-01 02:00:00.000000000 +0200
+++ bstone/3D_WSWTC.C	2015-06-27 14:35:54.654805200 +0300
@@ -0,0 +1,355 @@
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code to a separate file from 3D_ACT2.C,
+// since these are a part of 3D_AGENT.C  in AOG v3.0.
+//
+// - Should be #include'd from the right location.
+
+//==========================================================================
+//
+//								WALL SWITCH ACTIVATION
+//
+//==========================================================================
+
+//--------------------------------------------------------------------------
+// ActivateWallSwitch() - Updates the Map, Actors, and Tables for wall switchs
+//--------------------------------------------------------------------------
+void ActivateWallSwitch(unsigned iconnum, short x, short y)
+{
+	#define UPDATE_OTHER_SWITCHES			1
+
+	unsigned states[] = {OFF_SWITCH,ON_SWITCH};
+	unsigned	mapx,mapy,newwall;
+	unsigned icon,num;
+   unsigned char *tile;
+   unsigned *actor;
+   barrier_type *barrier;
+
+
+	if ((iconnum & 0xFF00) == 0xF800)
+   {
+
+		//
+      // Update tile map & Display switch'd message
+      //
+      num = iconnum & 0xff;
+
+
+      /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+      barrier = GAMEVER_RESTORATION_BARRIER_PTR(num/16,num);
+#else
+      barrier = &gamestate.barrier_table[num];
+#endif
+      barrier->on ^= 1;
+      newwall = tilemap[x][y] = states[barrier->on];
+
+      DisplaySwitchOperateMsg(num);
+      PlaySoundLocActor(SWITCHSND,player);
+
+#if UPDATE_OTHER_SWITCHES
+
+		tile = (unsigned char *)tilemap;
+      actor = (unsigned *)actorat;
+
+		for (mapx=0;mapx<MAPSIZE;mapx++)
+			for (mapy=0;mapy<MAPSIZE;mapy++)
+			{
+      		if (*tile == OFF_SWITCH || *tile == ON_SWITCH)
+            {
+            	icon = *(mapsegs[1]+farmapylookup[mapy]+mapx);
+
+            	if (icon == iconnum)
+               {
+               	*tile = newwall;
+                  *actor = newwall;
+               }
+            }
+
+            tile++;
+            actor++;
+      	}
+#endif
+
+   }
+   else
+   {
+		DISPLAY_TIMED_MSG(SwitchNotActivateMsg,MP_WALLSWITCH_OPERATE,MT_GENERAL);
+      SD_PlaySound(NOWAYSND);
+   }
+}
+
+//--------------------------------------------------------------------------
+// DisplaySwitchOperateMsg() - Displays the Operating Barrier Switch message
+//										 for a particular level across the InfoArea.
+//--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char OnSwitchMessage[] =  "\r\r  ACTIVATING BARRIER\r      ON FLOOR   ";
+
+char OffSwitchMessage[] = "\r\r DEACTIVATING BARRIER\r      ON FLOOR   ";
+#else
+char OnSwitchMessage[] =  "\r\r  ACTIVATING BARRIER";
+
+char OffSwitchMessage[] = "\r\r DEACTIVATING BARRIER";
+#endif
+
+
+void DisplaySwitchOperateMsg(unsigned coords)
+{
+   barrier_type *Barrier;
+
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	byte floor = (coords/16)&15;
+	Barrier = GAMEVER_RESTORATION_BARRIER_PTR(floor,coords);
+#else
+	Barrier = &gamestate.barrier_table[coords];
+#endif
+
+  	if (Barrier->on)
+   {
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		itoa(floor,&OnSwitchMessage[38],10);
+#endif
+		DISPLAY_TIMED_MSG(OnSwitchMessage,MP_WALLSWITCH_OPERATE,MT_GENERAL);
+   }
+	else
+   {
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		itoa(floor,&OffSwitchMessage[39],10);
+#endif
+		DISPLAY_TIMED_MSG(OffSwitchMessage,MP_WALLSWITCH_OPERATE,MT_GENERAL);
+   }
+}
+
+
+//--------------------------------------------------------------------------
+// UpdateBarrierTable(x,y,level) - Finds/Inserts arc entry in arc list
+//
+// RETURNS: Offset into barrier_table[] for a particular arc
+//
+//--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+unsigned UpdateBarrierTable(unsigned char x, unsigned char y, unsigned char level)
+#else
+unsigned UpdateBarrierTable(unsigned char x, unsigned char y, boolean OnOff)
+#endif
+{
+   barrier_type *Barrier;
+   short num;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   if (level == 0xFF)
+      level = gamestate.mapon;
+   if (level > MAPS_PER_EPISODE)
+      AGENT_ERROR(UPDATE_SWITCH_BAD_LEVEL);
+#endif
+
+	//
+   // Scan Table...
+   //
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+  	Barrier = &gamestate.barrier_table[MAX_BARRIER_SWITCHES*level];
+#else
+  	Barrier = gamestate.barrier_table;
+#endif
+
+   for (num = 0;num < MAX_BARRIER_SWITCHES;num++,Barrier++)
+   {
+   	if (Barrier->coord.tilex == x && Barrier->coord.tiley == y)
+      {
+         /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+         return GAMEVER_RESTORATION_BARRIER_CODE(level,num);
+#else
+         return (num);
+#endif
+      }
+      else
+   	if (Barrier->on == 0xff)				// Empty?
+      {
+      	// We have hit end of list - Add
+
+  	      Barrier->coord.tilex = x;
+     	   Barrier->coord.tiley = y;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+         Barrier->on = 1;
+         return GAMEVER_RESTORATION_BARRIER_CODE(level,num);
+#else
+         Barrier->on = OnOff;
+         return (num);
+#endif
+      }
+   }
+
+  	AGENT_ERROR(SWITCH_TABLE_OVERFLOW);
+	return(0);
+}
+
+
+
+//--------------------------------------------------------------------------
+// ScanBarrierTable(x,y) - Scans a switch table for a arc in this level
+//
+// RETURNS :
+//	   0xFFFF    - Not found in table
+//		barrier   - barrier_table of the barrier for [num]
+//
+//--------------------------------------------------------------------------
+unsigned ScanBarrierTable(unsigned char x, unsigned char y)
+{
+   barrier_type *Barrier;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   int level = gamestate.mapon;
+#endif
+   unsigned num;
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   Barrier = &gamestate.barrier_table[MAX_BARRIER_SWITCHES*level];
+#else
+   Barrier = gamestate.barrier_table;
+#endif
+
+   for (num=0;num<MAX_BARRIER_SWITCHES;num++,Barrier++)
+   {
+      if (Barrier->coord.tilex == x && Barrier->coord.tiley == y)
+      {
+      	// Found switch...
+
+         /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+         return GAMEVER_RESTORATION_BARRIER_CODE(level,num);
+#else
+         return (num);
+#endif
+		}
+	}
+
+	return(0xffff);		// Mark as EMPTY
+}
+
+
+//--------------------------------------------------------------------------
+// Checks to see if the Barrier obj is free
+//--------------------------------------------------------------------------
+boolean CheckActor(objtype *actor,unsigned code)
+{
+		if ((unsigned)actor->temp2 == 0xffff)		// Is this actor free?
+		{
+      	//
+         // Connect actor to barrier switch (code is index into barrier table)
+         //
+
+			actor->temp2 = code;		// This actor is NO longer a cycle actor.
+			return(true);
+		}
+
+	return(false);
+}
+
+
+//--------------------------------------------------------------------------
+// CheckAndConnect() -
+//--------------------------------------------------------------------------
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+void CheckAndConnect(char x,char y, unsigned code)
+#else
+int CheckAndConnect(char x,char y, unsigned code)
+#endif
+{
+	objtype *ob;
+	char offsets[] = {-1,0,1,0};
+	short loop;
+
+	ob = objlist;
+
+	do
+	{
+		switch (ob->obclass)
+		{
+			case arc_barrierobj:
+			case post_barrierobj:
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+			case vpost_barrierobj:
+			case vspike_barrierobj:
+#endif
+			{
+				for (loop = 0;loop<4;loop++)
+				{
+					if ((ob->tilex == x+offsets[loop]) && (ob->tiley == y+offsets[3-loop]))
+					{
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+		         	bars_connected++;
+#endif
+
+						if (CheckActor(ob,code))
+						   CheckAndConnect(x+offsets[loop],y+offsets[3-loop],code);
+					}
+				}
+			}
+			break;
+		}
+#pragma warn -pia
+	} while (ob = ob->next);
+#pragma warn +pia
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+	return(bars_connected);
+#endif
+}
+
+//--------------------------------------------------------------------------
+// ConnectBarriers() - Scans the object list and finds the single barrier
+//                     that is connected by switch and checks to see if
+//							  there are any surrounding barriers that need to be
+//							  connected also.
+//--------------------------------------------------------------------------
+void ConnectBarriers(void)
+{
+   barrier_type *Barrier;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   int level = gamestate.mapon;
+#endif
+	unsigned num;
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+   Barrier = &gamestate.barrier_table[MAX_BARRIER_SWITCHES*level];
+#else
+   Barrier = gamestate.barrier_table;
+#endif
+
+   for (num=0;num<MAX_BARRIER_SWITCHES;num++,Barrier++)
+   {
+      if (Barrier->on != 0xff)
+      {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
+		   bars_connected = 0;
+#endif
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		CheckAndConnect(Barrier->coord.tilex, Barrier->coord.tiley, GAMEVER_RESTORATION_BARRIER_CODE(level,num));
+#else
+			if (!CheckAndConnect(Barrier->coord.tilex, Barrier->coord.tiley, num))
+         	AGENT_ERROR(BARRIER_SWITCH_NOT_CONNECTED);
+#endif
+      }
+   }
+}
+
+
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/GAMEVER.EQU bstone/GAMEVER.EQU
--- /home/ny00123/Games/blake_stone/BSPS_SRC/GAMEVER.EQU	1970-01-01 02:00:00.000000000 +0200
+++ bstone/GAMEVER.EQU	2015-06-27 14:35:54.676521600 +0300
@@ -0,0 +1,4 @@
+; VERSIONS RESTORATION - All that we really need
+IFDEF GAMEVER_RESTORATION_BS1_210 OR GAMEVER_RESTORATION_BS6_210 OR GAMEVER_RESTORATION_BS1_300 OR GAMEVER_RESTORATION_BS6_300
+GAMEVER_RESTORATION_AOG EQU
+ENDIF
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/GAMEVER.H bstone/GAMEVER.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/GAMEVER.H	1970-01-01 02:00:00.000000000 +0200
+++ bstone/GAMEVER.H	2015-06-27 14:35:54.677466400 +0300
@@ -0,0 +1,43 @@
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#if (defined GAMEVER_RESTORATION_BS1_300) || (defined GAMEVER_RESTORATION_BS6_300)
+#define GAMEVER_RESTORATION_AOG_300
+#define GAMEVER_RESTORATION_AOG
+#elif (defined GAMEVER_RESTORATION_BS1_210) || (defined GAMEVER_RESTORATION_BS6_210)
+#define GAMEVER_RESTORATION_AOG_210
+#define GAMEVER_RESTORATION_AOG
+#elif (defined GAMEVER_RESTORATION_VSI_100) || (defined GAMEVER_RESTORATION_VSI_101)
+#define GAMEVER_RESTORATION_VSI
+#endif
+
+#if (defined GAMEVER_RESTORATION_BS1_210) || (defined GAMEVER_RESTORATION_BS1_300)
+#define GAMEVER_RESTORATION_BS1
+#endif
+
+#if (defined GAMEVER_RESTORATION_BS6_210) || (defined GAMEVER_RESTORATION_BS6_300)
+#define GAMEVER_RESTORATION_BS6
+#endif
+
+#if (defined GAMEVER_RESTORATION_AOG_300) || (defined GAMEVER_RESTORATION_VSI_101)
+#define GAMEVER_RESTORATION_ANY_LATE
+#endif
+
+// Hack: Replacements for __DATE__ and __TIME__ marcos (basically cheating here)
+#ifdef GAMEVER_RESTORATION_BS1_210
+#define GAMEVER_RESTORATION_DATE "Jun 13 1994"
+#define GAMEVER_RESTORATION_TIME "14:48:05"
+#elif defined GAMEVER_RESTORATION_BS6_210
+#define GAMEVER_RESTORATION_DATE "Jun 13 1994"
+#define GAMEVER_RESTORATION_TIME "15:00:37"
+#elif defined GAMEVER_RESTORATION_VSI_100
+#define GAMEVER_RESTORATION_DATE "Sep 07 1994"
+#define GAMEVER_RESTORATION_TIME "15:15:24"
+#elif defined GAMEVER_RESTORATION_VSI_101
+#define GAMEVER_RESTORATION_DATE "Oct 24 1994"
+#define GAMEVER_RESTORATION_TIME "18:20:35"
+#elif defined GAMEVER_RESTORATION_BS1_300
+#define GAMEVER_RESTORATION_DATE "Oct 31 1994"
+#define GAMEVER_RESTORATION_TIME "11:33:04"
+#elif defined GAMEVER_RESTORATION_BS6_300
+#define GAMEVER_RESTORATION_DATE "Oct 31 1994"
+#define GAMEVER_RESTORATION_TIME "18:03:26"
+#endif
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/GFXV_BS1.H bstone/GFXV_BS1.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/GFXV_BS1.H	1994-03-30 18:12:08.000000000 +0200
+++ bstone/GFXV_BS1.H	2015-06-27 14:35:54.681922100 +0300
@@ -5,262 +5,285 @@
 //
 //////////////////////////////////////
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Originally based on offsets for AOG v3.0 from bstone port (aog3 branch)
+
+// RESTORATION - Used for convenience, due to presence of PS promotion pics
+// and the lack of T_DEMO0 in AOG v3.00
+#ifdef GAMEVER_RESTORATION_BS6_300
+#define GAMEVER_RESTORATION_GFXV_EARLY_OFFSET 0
+#define GAMEVER_RESTORATION_GFXV_MIDDLE_OFFSET 0
+#define GAMEVER_RESTORATION_GFXV_LATE_OFFSET 0
+#define GAMEVER_RESTORATION_GFXV_LAST_OFFSET 0
+#elif defined GAMEVER_RESTORATION_BS1_300
+#define GAMEVER_RESTORATION_GFXV_EARLY_OFFSET 1
+#define GAMEVER_RESTORATION_GFXV_MIDDLE_OFFSET -1
+#define GAMEVER_RESTORATION_GFXV_LATE_OFFSET 12
+#define GAMEVER_RESTORATION_GFXV_LAST_OFFSET 13
+#elif defined GAMEVER_RESTORATION_BS6_210
+#define GAMEVER_RESTORATION_GFXV_EARLY_OFFSET 3
+#define GAMEVER_RESTORATION_GFXV_MIDDLE_OFFSET 3
+#define GAMEVER_RESTORATION_GFXV_LATE_OFFSET 2
+#define GAMEVER_RESTORATION_GFXV_LAST_OFFSET 2
+#elif defined GAMEVER_RESTORATION_BS1_210
+#define GAMEVER_RESTORATION_GFXV_EARLY_OFFSET 4
+#define GAMEVER_RESTORATION_GFXV_MIDDLE_OFFSET 2
+#define GAMEVER_RESTORATION_GFXV_LATE_OFFSET 14
+#define GAMEVER_RESTORATION_GFXV_LAST_OFFSET 15
+#endif
+
 typedef enum {
 		TELEPORTBACKPIC=6,
 		// Lump Start
-		TELEPORT1ONPIC,                      // 7
-		TELEPORT2ONPIC,                      // 8
-		TELEPORT3ONPIC,                      // 9
-		TELEPORT4ONPIC,                      // 10
-		TELEPORT5ONPIC,                      // 11
-		TELEPORT6ONPIC,                      // 12
-		TELEPORT7ONPIC,                      // 13
-		TELEPORT8ONPIC,                      // 14
-		TELEPORT9ONPIC,                      // 15
-		TELEPORT10ONPIC,                     // 16
-		TELEPORT11ONPIC,                     // 17
-		TELEPORT12ONPIC,                     // 18
-		TELEPORT13ONPIC,                     // 19
-		TELEPORT14ONPIC,                     // 20
-		TELEPORT15ONPIC,                     // 21
-		TELEPORT16ONPIC,                     // 22
-		TELEPORT17ONPIC,                     // 23
-		TELEPORT18ONPIC,                     // 24
-		TELEPORT19ONPIC,                     // 25
-		TELEPORT20ONPIC,                     // 26
-		TELEUPONPIC,                         // 27
-		TELEDNONPIC,                         // 28
-		TELEUPOFFPIC,                        // 29
-		TELEDNOFFPIC,                        // 30
-		TELEPORT1OFFPIC,                     // 31
-		TELEPORT2OFFPIC,                     // 32
-		TELEPORT3OFFPIC,                     // 33
-		TELEPORT4OFFPIC,                     // 34
-		TELEPORT5OFFPIC,                     // 35
-		TELEPORT6OFFPIC,                     // 36
-		TELEPORT7OFFPIC,                     // 37
-		TELEPORT8OFFPIC,                     // 38
-		TELEPORT9OFFPIC,                     // 39
-		TELEPORT10OFFPIC,                    // 40
-		TELEPORT11OFFPIC,                    // 41
-		TELEPORT12OFFPIC,                    // 42
-		TELEPORT13OFFPIC,                    // 43
-		TELEPORT14OFFPIC,                    // 44
-		TELEPORT15OFFPIC,                    // 45
-		TELEPORT16OFFPIC,                    // 46
-		TELEPORT17OFFPIC,                    // 47
-		TELEPORT18OFFPIC,                    // 48
-		TELEPORT19OFFPIC,                    // 49
-		TELEPORT20OFFPIC,                    // 50
-		BACKGROUND_SCREENPIC,                // 51
-		APOGEEPIC,                           // 52
-		PIRACYPIC,                           // 53
-		PC13PIC,                             // 54
-		LOSEPIC,                             // 55
-		AUTOMAPPIC,                          // 56
-		AUTOMAP_MAG1PIC,                     // 57
-		AUTOMAP_MAG2PIC,                     // 58
-		AUTOMAP_MAG4PIC,                     // 59
+		TELEPORT1OFFPIC, // 7
+		TELEPORT2OFFPIC, // 8
+		TELEPORT3OFFPIC, // 9
+		TELEPORT4OFFPIC, // 10
+		TELEPORT5OFFPIC, // 11
+		TELEPORT6OFFPIC, // 12
+		TELEPORT7OFFPIC, // 13
+		TELEPORT8OFFPIC, // 14
+		TELEPORT9OFFPIC, // 15
+		TELEPORT10OFFPIC, // 16
+		TELEPORT1ONPIC, // 17
+		TELEPORT2ONPIC, // 18
+		TELEPORT3ONPIC, // 19
+		TELEPORT4ONPIC, // 20
+		TELEPORT5ONPIC, // 21
+		TELEPORT6ONPIC, // 22
+		TELEPORT7ONPIC, // 23
+		TELEPORT8ONPIC, // 24
+		TELEPORT9ONPIC, // 25
+		TELEPORT10ONPIC, // 26
+		TELEPORT_TEXT_BG, // 27
+		BACKGROUND_SCREENPIC, // 28
+		APOGEEPIC, // 29
+#ifndef GAMEVER_RESTORATION_BS1
+		PIRACYPIC, // 30
+#endif
+		PC13PIC, // 31
+		LOSEPIC, // 32
+#ifdef GAMEVER_RESTORATION_AOG_300
+		PSPROMO1PIC, // 33
+		PSPROMO2PIC, // 34
+		PSPROMO3PIC, // 35
+#endif
+
+		AUTOMAPPIC, // 36
 		// Lump Start
-		H_ALTPIC,                            // 60
-		H_CTRLPIC,                           // 61
-		H_SPACEPIC,                          // 62
-		H_PAUSEPIC,                          // 63
-		H_ESCPIC,                            // 64
-		H_LTARROWPIC,                        // 65
-		H_UPARROWPIC,                        // 66
-		H_DNARROWPIC,                        // 67
-		H_RTARROWPIC,                        // 68
-		H_ENTERPIC,                          // 69
-		H_QPIC,                              // 70
-		H_WPIC,                              // 71
-		H_EPIC,                              // 72
-		H_IPIC,                              // 73
-		H_HPIC,                              // 74
-		H_1PIC,                              // 75
-		H_2PIC,                              // 76
-		H_3PIC,                              // 77
-		H_4PIC,                              // 78
-		H_5PIC,                              // 79
-		H_F1PIC,                             // 80
-		H_F2PIC,                             // 81
-		H_F3PIC,                             // 82
-		H_F4PIC,                             // 83
-		H_F5PIC,                             // 84
-		H_F6PIC,                             // 85
-		H_F7PIC,                             // 86
-		H_F8PIC,                             // 87
-		H_F9PIC,                             // 88
-		H_F10PIC,                            // 89
-		H_TABPIC,                            // 90
-		H_CPIC,                              // 91
-		H_FPIC,                              // 92
-		H_PPIC,                              // 93
-		H_MPIC,                              // 94
-		H_LPIC,                              // 95
-		H_SHIFTPIC,                          // 96
-		H_6PIC,                              // 97
-		H_TILDEPIC,                          // 98
-		APOGEE_LOGOPIC,                      // 99
-		VISAPIC,                             // 100
-		MCPIC,                               // 101
-		FAXPIC,                              // 102
-		H_TOPWINDOWPIC,                      // 103
-		H_LEFTWINDOWPIC,                     // 104
-		H_RIGHTWINDOWPIC,                    // 105
-		H_BOTTOMINFOPIC,                     // 106
+		H_ALTPIC, // 37
+		H_CTRLPIC, // 38
+		H_SPACEPIC, // 39
+		H_PAUSEPIC, // 40
+		H_ESCPIC, // 41
+		H_LTARROWPIC, // 42
+		H_UPARROWPIC, // 43
+		H_DNARROWPIC, // 44
+		H_RTARROWPIC, // 45
+		H_ENTERPIC, // 46
+		H_QPIC, // 47
+		H_WPIC, // 48
+		H_EPIC, // 49
+		H_IPIC, // 50
+		H_HPIC, // 51
+		H_1PIC, // 52
+		H_2PIC, // 53
+		H_3PIC, // 54
+		H_4PIC, // 55
+		H_5PIC, // 56
+		H_F1PIC, // 57
+		H_F2PIC, // 58
+		H_F3PIC, // 59
+		H_F4PIC, // 60
+		H_F5PIC, // 61
+		H_F6PIC, // 62
+		H_F7PIC, // 63
+		H_F8PIC, // 64
+		H_F9PIC, // 65
+		H_F10PIC, // 66
+		H_TABPIC, // 67
+		H_CPIC, // 68
+		H_FPIC, // 69
+		H_PPIC, // 70
+		H_MPIC, // 71
+		H_LPIC, // 72
+		H_SHIFTPIC, // 73
+		APOGEE_LOGOPIC, // 74
+		VISAPIC, // 75
+		MCPIC, // 76
+		FAXPIC, // 77
+		H_TOPWINDOWPIC, // 78
+		H_LEFTWINDOWPIC, // 79
+		H_RIGHTWINDOWPIC, // 80
+		H_BOTTOMINFOPIC, // 81
 		// Lump Start
-		C_NOTSELECTEDPIC,                    // 107
-		C_SELECTEDPIC,                       // 108
-		C_NOTSELECTED_HIPIC,                 // 109
-		C_SELECTED_HIPIC,                    // 110
-		C_BABYMODEPIC,                       // 111
-		C_EASYPIC,                           // 112
-		C_NORMALPIC,                         // 113
-		C_HARDPIC,                           // 114
-		C_EPISODE1PIC,                       // 115
-		C_EPISODE2PIC,                       // 116
-		C_EPISODE3PIC,                       // 117
-		C_EPISODE4PIC,                       // 118
-		C_EPISODE5PIC,                       // 119
-		C_EPISODE6PIC,                       // 120
-		BIGGOLDSTERNPIC,                     // 121
-		STARLOGOPIC,                         // 122
-		BLAKEWITHGUNPIC,                     // 123
-		STARINSTITUTEPIC,                    // 124
-		MEDALOFHONORPIC,                     // 125
-		SMALLGOLDSTERNPIC,                   // 126
-		BLAKEWINPIC,                         // 127
-		SHUTTLEEXPPIC,                       // 128
-		PLANETSPIC,                          // 129
-		MOUSEPIC,                            // 130
-		JOYSTICKPIC,                         // 131
-		GRAVISPADPIC,                        // 132
-		STARPORTPIC,                         // 133
-		BOSSPIC,                             // 134
-		THREEPLANETSPIC,                     // 135
-		SOLARSYSTEMPIC,                      // 136
-		AOGENDINGPIC,                        // 137
-		GFLOGOSPIC,                          // 138
-		BLAKEHEADPIC,                        // 139
-		PROJECTFOLDERPIC,                    // 140
-		TITLEPIC,                            // 141
+		C_NOTSELECTEDPIC, // 82
+		C_SELECTEDPIC, // 83
+		C_NOTSELECTED_HIPIC, // 84
+		C_SELECTED_HIPIC, // 85
+		C_BABYMODEPIC, // 86
+		C_EASYPIC, // 87
+		C_NORMALPIC, // 88
+		C_HARDPIC, // 89
+		C_EPISODE1PIC, // 90
+		C_EPISODE2PIC, // 91
+		C_EPISODE3PIC, // 92
+		C_EPISODE4PIC, // 93
+		C_EPISODE5PIC, // 94
+		C_EPISODE6PIC, // 95
+		BIGGOLDSTERNPIC, // 96
+		STARLOGOPIC, // 97
+		BLAKEWITHGUNPIC, // 98
+		STARINSTITUTEPIC, // 99
+		MEDALOFHONORPIC, // 100
+		SMALLGOLDSTERNPIC, // 101
+		BLAKEWINPIC, // 102
+		SHUTTLEEXPPIC, // 103
+		PLANETSPIC, // 104
+		MOUSEPIC, // 105
+		JOYSTICKPIC, // 106
+		GRAVISPADPIC, // 107
+		TITLEPIC, // 108
+#ifdef GAMEVER_RESTORATION_BS1
+		PROMO1PIC,
+		PROMO2PIC,
+#endif
 		// Lump Start
-		WEAPON1PIC,                          // 142
-		WEAPON2PIC,                          // 143
-		WEAPON3PIC,                          // 144
-		WEAPON4PIC,                          // 145
-		WEAPON5PIC,                          // 146
-		WEAPON6PIC,                          // 147
-		WEAPON7PIC,                          // 148
-		W1_CORNERPIC,                        // 149
-		W2_CORNERPIC,                        // 150
-		W3_CORNERPIC,                        // 151
-		W4_CORNERPIC,                        // 152
-		W5_CORNERPIC,                        // 153
-		W6_CORNERPIC,                        // 154
-		WAITPIC,                             // 155
-		READYPIC,                            // 156
-		N_BLANKPIC,                          // 157
-		N_0PIC,                              // 158
-		N_1PIC,                              // 159
-		N_2PIC,                              // 160
-		N_3PIC,                              // 161
-		N_4PIC,                              // 162
-		N_5PIC,                              // 163
-		N_6PIC,                              // 164
-		N_7PIC,                              // 165
-		N_8PIC,                              // 166
-		N_9PIC,                              // 167
-		N_RPIC,                              // 168
-		N_OPIC,                              // 169
-		N_LPIC,                              // 170
-		N_DASHPIC,                           // 171
-		NG_BLANKPIC,                         // 172
-		NG_0PIC,                             // 173
-		NG_1PIC,                             // 174
-		NG_2PIC,                             // 175
-		NG_3PIC,                             // 176
-		NG_4PIC,                             // 177
-		NG_5PIC,                             // 178
-		NG_6PIC,                             // 179
-		NG_7PIC,                             // 180
-		NG_8PIC,                             // 181
-		NG_9PIC,                             // 182
-		DIM_LIGHTPIC,                        // 183
-		BRI_LIGHTPIC,                        // 184
-		INFOAREAPIC,                         // 185
-		TOP_STATUSBARPIC,                    // 186
-		STATUSBARPIC,                        // 187
-		ONEXZOOMPIC,                         // 188
-		TWOXZOOMPIC,                         // 189
-		FOURXZOOMPIC,                        // 190
-		NO_KEYPIC,                           // 191
-		RED_KEYPIC,                          // 192
-		YEL_KEYPIC,                          // 193
-		BLU_KEYPIC,                          // 194
-
-
-
-		POWERBALLTEXT=196,
-		PIRACYPALETTE,                       // 197
-		APOGEEPALETTE,                       // 198
-		ENDINGPALETTE,                       // 199
-		TITLEPALETTE,                        // 200
-		ORDERSCREEN,                         // 201
-		ERRORSCREEN,                         // 202
-		NO386SCREEN,                         // 203
-		MUSICTEXT,                           // 204
-		RADARTEXT,                           // 205
-		TICSTEXT,                            // 206
-		T_DEMO0,                             // 207
-		T_DEMO1,                             // 208
-		T_DEMO2,                             // 209
-		T_DEMO3,                             // 210
-		T_DEMO4,                             // 211
-		T_DEMO5,                             // 212
-		INFORMANT_HINTS,                     // 213
-		NICE_SCIE_HINTS,                     // 214
-		MEAN_SCIE_HINTS,                     // 215
-		BRIEF_W1,                            // 216
-		BRIEF_I1,                            // 217
-		BRIEF_W2,                            // 218
-		BRIEF_I2,                            // 219
-		BRIEF_W3,                            // 220
-		BRIEF_I3,                            // 221
-		BRIEF_W4,                            // 222
-		BRIEF_I4,                            // 223
-		BRIEF_W5,                            // 224
-		BRIEF_I5,                            // 225
-		BRIEF_W6,                            // 226
-		BRIEF_I6,                            // 227
-		LEVEL_DESCS,                         // 228
-		DECOY,                               // 229
-		DECOY2,                              // 230
-		DECOY3,                              // 231
-		DECOY4,                              // 232
-		HELPTEXT,                            // 233
-		SAGATEXT,                            // 234
-		LOSETEXT,                            // 235
-		ORDERTEXT,                           // 236
-		CREDITSTEXT,                         // 237
-		MUSTBE386TEXT,                       // 238
-		QUICK_INFO1_TEXT,                    // 239
-		QUICK_INFO2_TEXT,                    // 240
-		BADINFO_TEXT,                        // 241
-		CALJOY1_TEXT,                        // 242
-		CALJOY2_TEXT,                        // 243
-		READTHIS_TEXT,                       // 244
-		ELEVMSG0_TEXT,                       // 245
-		ELEVMSG1_TEXT,                       // 246
-		ELEVMSG4_TEXT,                       // 247
-		ELEVMSG5_TEXT,                       // 248
-		FLOORMSG_TEXT,                       // 249
-		YOUWIN_TEXT,                         // 250
-		CHANGEVIEW_TEXT,                     // 251
-		DIZ_ERR_TEXT,                        // 252
-		BADLEVELSTEXT,                       // 253
-		BADSAVEGAME_TEXT,                    // 254
+		WEAPON1PIC, // 109
+		WEAPON2PIC, // 110
+		WEAPON3PIC, // 111
+		WEAPON4PIC, // 112
+		WEAPON5PIC, // 113
+		WAITPIC, // 114
+		READYPIC, // 115
+		N_BLANKPIC, // 116
+		N_0PIC, // 117
+		N_1PIC, // 118
+		N_2PIC, // 119
+		N_3PIC, // 120
+		N_4PIC, // 121
+		N_5PIC, // 122
+		N_6PIC, // 123
+		N_7PIC, // 124
+		N_8PIC, // 125
+		N_9PIC, // 126
+		N_RPIC, // 127
+		N_OPIC, // 128
+		N_LPIC, // 129
+		N_DASHPIC, // 130
+		DIM_LIGHTPIC, // 131
+		BRI_LIGHTPIC, // 132
+		ECG_HEART_GOOD, // 133
+		ECG_HEART_BAD, // 134
+		ECG_GRID_PIECE, // 135
+		AMMONUM_BACKGR, // 136
+		ECG_HEARTBEAT_00, // 137
+		ECG_HEARTBEAT_01, // 138
+		ECG_HEARTBEAT_02, // 139
+		ECG_HEARTBEAT_03, // 140
+		ECG_HEARTBEAT_04, // 141
+		ECG_HEARTBEAT_05, // 142
+		ECG_HEARTBEAT_06, // 143
+		ECG_HEARTBEAT_07, // 144
+		ECG_HEARTBEAT_08, // 145
+		ECG_HEARTBEAT_09, // 146
+		ECG_HEARTBEAT_10, // 147
+		ECG_HEARTBEAT_11, // 148
+		ECG_HEARTBEAT_12, // 149
+		ECG_HEARTBEAT_13, // 150
+		ECG_HEARTBEAT_14, // 151
+		ECG_HEARTBEAT_15, // 152
+		ECG_HEARTBEAT_16, // 153
+		ECG_HEARTBEAT_17, // 154
+		ECG_HEARTBEAT_18, // 155
+		ECG_HEARTBEAT_19, // 156
+		ECG_HEARTBEAT_20, // 157
+		ECG_HEARTBEAT_21, // 158
+		ECG_HEARTBEAT_22, // 159
+		ECG_HEARTBEAT_23, // 160
+		ECG_HEARTBEAT_24, // 161
+		ECG_HEARTBEAT_25, // 162
+		ECG_HEARTBEAT_26, // 163
+		ECG_HEARTBEAT_27, // 164
+		INFOAREAPIC, // 165
+		TOP_STATUSBARPIC, // 166
+		STATUSBARPIC, // 167
+
+		POWERBALLTEXT=169-GAMEVER_RESTORATION_GFXV_MIDDLE_OFFSET,
+#ifdef GAMEVER_RESTORATION_BS1
+		APOGEEPALETTE, // 171
+		MUSICTEXT, // 172
+		RADARTEXT, // 173
+		TICSTEXT, // 174
+		TITLEPALETTE, // 175
+		ORDERSCREEN, // 176
+		ERRORSCREEN, // 177
+#else
+		PIRACYPALETTE, // 170
+		APOGEEPALETTE, // 171
+		TITLEPALETTE, // 172
+		ORDERSCREEN, // 173
+		ERRORSCREEN, // 174
+		MUSICTEXT, // 175
+		RADARTEXT, // 176
+		TICSTEXT, // 177
+#endif
+#ifndef GAMEVER_RESTORATION_AOG_300
+		T_DEMO0,
+#endif
+		T_DEMO1, // 178
+		T_DEMO2, // 179
+		T_DEMO3, // 180
+#ifndef GAMEVER_RESTORATION_BS1
+		T_DEMO4, // 181
+		T_DEMO5, // 182
+#endif
+ 		INFORMANT_HINTS, // 183
+		NICE_SCIE_HINTS, // 184
+		MEAN_SCIE_HINTS, // 185
+		BRIEF_W1, // 186
+		BRIEF_I1, // 187
+#ifndef GAMEVER_RESTORATION_BS1
+		BRIEF_W2, // 188
+		BRIEF_I2, // 189
+		BRIEF_W3, // 190
+		BRIEF_I3, // 191
+		BRIEF_W4, // 192
+		BRIEF_I4, // 193
+		BRIEF_W5, // 194
+		BRIEF_I5, // 195
+		BRIEF_W6, // 196
+		BRIEF_I6, // 197
+#endif
+		LEVEL_DESCS, // 198
+
+		HELPTEXT=203-GAMEVER_RESTORATION_GFXV_LATE_OFFSET,
+		SAGATEXT, // 204
+		LOSETEXT, // 205
+		ORDERTEXT, // 206
+		CREDITSTEXT, // 207
+		MUSTBE386TEXT, // 208
+		QUICK_INFO1_TEXT, // 209
+		QUICK_INFO2_TEXT, // 210
+		BADINFO_TEXT, // 211
+		CALJOY1_TEXT, // 212
+		CALJOY2_TEXT, // 213
+		READTHIS_TEXT, // 214
+		ELEVMSG0_TEXT, // 215
+		ELEVMSG1_TEXT, // 216
+		ELEVMSG4_TEXT, // 217
+		ELEVMSG5_TEXT, // 218
+		FLOORMSG_TEXT, // 219
+		YOUWIN_TEXT, // 220
+		CHANGEVIEW_TEXT, // 221
+#ifdef GAMEVER_RESTORATION_BS1
+		BADCHECKSUMTEXT,
+#else
+		DIZ_ERR_TEXT, // 222
+		BADLEVELSTEXT, // 223
+#endif
+		BADSAVEGAME_TEXT, // 224
+
 		ENUMEND
 	     } graphicnums;
 
@@ -268,51 +291,132 @@
 // Data LUMPs
 //
 #define TELEPORT_LUMP_START		7
-#define TELEPORT_LUMP_END		50
+#define TELEPORT_LUMP_END		27
+
+#ifdef GAMEVER_RESTORATION_BS6_300
+
+#define README_LUMP_START		37
+#define README_LUMP_END			81
+
+#define CONTROLS_LUMP_START		82
+#define CONTROLS_LUMP_END		95
+
+#define LATCHPICS_LUMP_START		109
+#define LATCHPICS_LUMP_END		167
+
+#elif defined GAMEVER_RESTORATION_BS1_300
+
+#define README_LUMP_START		36
+#define README_LUMP_END			80
+
+#define CONTROLS_LUMP_START		81
+#define CONTROLS_LUMP_END		94
+
+#define LATCHPICS_LUMP_START		110
+#define LATCHPICS_LUMP_END		168
+
+#elif defined GAMEVER_RESTORATION_BS6_210
+
+#define README_LUMP_START		34
+#define README_LUMP_END			78
+
+#define CONTROLS_LUMP_START		79
+#define CONTROLS_LUMP_END		92
+
+#define LATCHPICS_LUMP_START		106
+#define LATCHPICS_LUMP_END		164
+
+#elif defined GAMEVER_RESTORATION_BS1_210
+
+#define README_LUMP_START		33
+#define README_LUMP_END			77
 
-#define README_LUMP_START		60
-#define README_LUMP_END			106
+#define CONTROLS_LUMP_START		78
+#define CONTROLS_LUMP_END		91
 
-#define CONTROLS_LUMP_START		107
-#define CONTROLS_LUMP_END		120
+#define LATCHPICS_LUMP_START		107
+#define LATCHPICS_LUMP_END		165
 
-#define LATCHPICS_LUMP_START		142
-#define LATCHPICS_LUMP_END		194
+#endif
 
 
 //
 // Amount of each data item
 //
-#define NUMCHUNKS    255
-#define NUMFONT      5
+#ifdef GAMEVER_RESTORATION_BS6_300
+#define NUMCHUNKS    225 // OK
+#define NUMPICS      162
+#elif defined GAMEVER_RESTORATION_BS1_300
+#define NUMCHUNKS    212 // OK
+#define NUMPICS      163
+#elif defined GAMEVER_RESTORATION_BS6_210
+#define NUMCHUNKS    223 // OK
+#define NUMPICS      159
+#elif defined GAMEVER_RESTORATION_BS1_210
+#define NUMCHUNKS    210 // OK
+#define NUMPICS      160
+#endif
+#define NUMFONT      5 // OK
 #define NUMFONTM     0
-#define NUMPICS      189
+//#define NUMPICS      162
 #define NUMPICM      0
 #define NUMSPRITES   0
-#define NUMTILE8     72
+#define NUMTILE8     72 // OK
 #define NUMTILE8M    0
 #define NUMTILE16    0
 #define NUMTILE16M   0
 #define NUMTILE32    0
 #define NUMTILE32M   0
-#define NUMEXTERNS   59
+#define NUMEXTERNS   59 // NOT USED (apparently 57 for correct sum, TILE8 is considered 1)
 //
 // File offsets for data items
 //
 #define STRUCTPIC    0
 
-#define STARTFONT    1
-#define STARTFONTM   6
-#define STARTPICS    6
-#define STARTPICM    195
-#define STARTSPRITES 195
-#define STARTTILE8   195
-#define STARTTILE8M  196
-#define STARTTILE16  196
-#define STARTTILE16M 196
-#define STARTTILE32  196
-#define STARTTILE32M 196
-#define STARTEXTERNS 196
+#define STARTFONT    1 // OK
+#define STARTFONTM   6 // USED IN COMMENTED OUT CODE ONLY
+#define STARTPICS    6 // OK
+#ifdef GAMEVER_RESTORATION_BS6_300
+#define STARTPICM    168 // UNUSED
+#define STARTSPRITES 168 // MENTIONED BUT UNUSED (zero sprites)
+#define STARTTILE8   168
+#define STARTTILE8M  169
+#define STARTTILE16  169
+#define STARTTILE16M 169
+#define STARTTILE32  169
+#define STARTTILE32M 169
+#define STARTEXTERNS 169
+#elif defined GAMEVER_RESTORATION_BS1_300
+#define STARTPICM    169 // UNUSED
+#define STARTSPRITES 169 // MENTIONED BUT UNUSED (zero sprites)
+#define STARTTILE8   169
+#define STARTTILE8M  170
+#define STARTTILE16  170
+#define STARTTILE16M 170
+#define STARTTILE32  170
+#define STARTTILE32M 170
+#define STARTEXTERNS 170
+#elif defined GAMEVER_RESTORATION_BS6_210
+#define STARTPICM    165 // UNUSED
+#define STARTSPRITES 165 // MENTIONED BUT UNUSED (zero sprites)
+#define STARTTILE8   165
+#define STARTTILE8M  166
+#define STARTTILE16  166
+#define STARTTILE16M 166
+#define STARTTILE32  166
+#define STARTTILE32M 166
+#define STARTEXTERNS 166
+#elif defined GAMEVER_RESTORATION_BS1_210
+#define STARTPICM    166 // UNUSED
+#define STARTSPRITES 166 // MENTIONED BUT UNUSED (zero sprites)
+#define STARTTILE8   166
+#define STARTTILE8M  167
+#define STARTTILE16  167
+#define STARTTILE16M 167
+#define STARTTILE32  167
+#define STARTTILE32M 167
+#define STARTEXTERNS 167
+#endif
 
 //
 // Thank you for using IGRAB!
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/H_LDIV.ASM bstone/H_LDIV.ASM
--- /home/ny00123/Games/blake_stone/BSPS_SRC/H_LDIV.ASM	1994-07-12 15:26:52.000000000 +0300
+++ bstone/H_LDIV.ASM	2015-06-27 14:35:54.688793700 +0300
@@ -6,9 +6,9 @@
 ;|      Copyright (c) 1987, 1991 by Borland International Inc.       |
 ;|      All Rights Reserved.                                         |
 ;[]-----------------------------------------------------------------[]
-
-	INCLUDE	RULES.ASI
-.386C	;JAB - we use 386 instructions
+.model medium
+	INCLUDE RULES.ASI
+.386C   ;JAB - we use 386 instructions
 
 _TEXT	segment	public byte 'CODE'
 	assume	cs:_TEXT
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_CA.C bstone/ID_CA.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_CA.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_CA.C	2015-06-27 14:35:54.690359800 +0300
@@ -1105,7 +1105,10 @@
 	switch (oldsoundmode)
 	{
 	case sdm_Off:
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		goto cachein;
+#endif
 	case sdm_PC:
 		start = STARTPCSOUNDS;
 		break;
@@ -1123,7 +1126,10 @@
 	switch (SoundMode)
 	{
 	case sdm_Off:
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		return;
+#endif
 	case sdm_PC:
 		start = STARTPCSOUNDS;
 		break;
@@ -1688,4 +1694,4 @@
  strcat(str,string);
  strcat(str,"!\n");
  Quit (str);
-}
\ No newline at end of file
+}
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_CA.H bstone/ID_CA.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_CA.H	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_CA.H	2015-06-27 14:35:54.691386300 +0300
@@ -1,9 +1,16 @@
 // ID_CA.H
 //===========================================================================
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define NUM_EPISODES			6
+#define MAPS_PER_EPISODE	15 // Looks like this was used instead of 11
+#define MAPS_WITH_STATS		9
+#else
 #define NUM_EPISODES			1
 #define MAPS_PER_EPISODE	25
 #define MAPS_WITH_STATS		20
+#endif
 
 #define NUMMAPS				NUM_EPISODES*MAPS_PER_EPISODE
 #define MAPPLANES	2
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_HEAD.H bstone/ID_HEAD.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_HEAD.H	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_HEAD.H	2015-06-27 14:35:54.692325200 +0300
@@ -1,5 +1,7 @@
 // ID_HEAD.H
 
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#include "GAMEVER.H"
 
 #define WOLF
 #define FREE_FUNCTIONS   (true)
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_HEADS.H bstone/ID_HEADS.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_HEADS.H	1994-08-23 15:40:38.000000000 +0300
+++ bstone/ID_HEADS.H	2015-06-27 14:35:54.693323100 +0300
@@ -20,6 +20,9 @@
 #include <DIR.H>
 #define __ID_GLOB__
 
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#include "GAMEVER.H"
+
 //--------------------------------------------------------------------------
 
 #define DEBUG_VALUE
@@ -49,7 +52,13 @@
 // CURRENT GAME VERSION DEFINE - Change this define according to the
 //											game release versions 1,1-3,4-6, or 1-6.
 
+/*** BLAKE STONE VERSIONS RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_BS1
+#define GAME_VERSION					(SHAREWARE_VERSION)
+#else
 #define GAME_VERSION					(MISSIONS_1_THR_6)
+#endif
+//#define GAME_VERSION					(MISSIONS_1_THR_6)
 //#define GAME_VERSION      			(MISSIONS_1_THR_3)
 //#define GAME_VERSION					(SHAREWARE_VERSION)
 
@@ -58,16 +67,28 @@
 #define IN_DEVELOPMENT				(false)
 
 #define ERROR_LOG						"ERROR.LOG"			// Text filename for critical memory errors
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define DUAL_SWAP_FILES				(GAME_VERSION != SHAREWARE_VERSION)				// Support for Shadowed and NonShadowed page files
+#else
 #define DUAL_SWAP_FILES				(false)				//(GAME_VERSION != SHAREWARE_VERSION)				// Support for Shadowed and NonShadowed page files
+#endif
 
 extern  char            far signonv1;
 #define introscn        signonv1
 
 #ifndef SPEAR
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#include "GFXV_bs1.H"
+#include "AUDIObs1.H"
+#include "MAPSbs1.H"
+#else
 #include "GFXV_vsi.H"
 #include "AUDIOvsi.H"
 #include "MAPSvsi.H"
+#endif
 
 #else
 
@@ -158,4 +179,4 @@
 
 
 
-#endif
\ No newline at end of file
+#endif
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_US_1.C bstone/ID_US_1.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_US_1.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_US_1.C	2015-06-27 14:35:54.709263700 +0300
@@ -68,7 +68,12 @@
 						{"",								10000,1,0},
 						{"",								10000,1,0},
 						{"TO REGISTER CALL",			10000,1,0},
+/*** BLAKE STONE: ALIENS OF GOLD V3.0 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+						{" 1-800-APOGEE1",			10000,1,0},
+#else
 						{" 1-800-GAME123",			10000,1,0},
+#endif
 						{"",								10000,1,0},
 					};
 
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VH.C bstone/ID_VH.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VH.C	1994-08-23 11:54:56.000000000 +0300
+++ bstone/ID_VH.C	2015-06-27 14:35:54.711360000 +0300
@@ -263,6 +263,8 @@
 }
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //--------------------------------------------------------------------------
 // VWB_DrawMPic()
 //--------------------------------------------------------------------------
@@ -277,6 +279,7 @@
 	if (VW_MarkUpdateBlock (x,y,x+width-1,y+height-1))
 		VL_MaskMemToScreen (grsegs[chunknum],width,height,x,y,255);
 }
+#endif
 
 
 void VWB_DrawPropString	 (char far *string)
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VH.H bstone/ID_VH.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VH.H	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_VH.H	2015-06-27 14:35:54.712352700 +0300
@@ -79,7 +79,10 @@
 void VWB_DrawTile16 (int x, int y, int tile);
 void VWB_DrawTile16M (int x, int y, int tile);
 void VWB_DrawPic (int x, int y, int chunknum);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void VWB_DrawMPic(int x, int y, int chunknum);
+#endif
 void VWB_Bar (int x, int y, int width, int height, int color);
 
 void VWB_DrawPropString	 (char far *string);
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL_A.ASM bstone/ID_VL_A.ASM
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL_A.ASM	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_VL_A.ASM	2015-06-27 14:35:54.718539400 +0300
@@ -16,11 +16,14 @@
 
 	CODESEG
 
-;===========================================================================
-
+; *** BLAKE STONE VERSIONS RESTORATION ***
+; A bit different implementation of VL_WaitVBL, looks like WAITVBL.ASM
 
 IF 1
 
+;===========================================================================
+
+
 ;
 ;	WaitVBL
 ;	Wait for the vertical retrace (returns before the actual vertical sync)
@@ -35,27 +38,26 @@
 	mov	bh,1				; test DE
 
 @@waitno:
-	in		al,dx
-	test 	al,bl				; VBL?
+	in	al,dx
+	test al,bl				; VBL?
 	jnz	@@waitno			; Yep, keep waiting
-	mov	cx,400			; for 320x200 mode (200 lines are double-scanned)
-
+	mov	cx,400				; for 320x200 mode (200 lines are double-scanned)
 @@waityes:
-	in 	al,dx
-	test 	al,bl				; VBL?
-	jnz	@@done			; Yep, we're done
-	test 	al,bh				; No. Display enabled?
-	jz		@@waityes		; Yes, keep checking
-
+	in al, dx
+	test al,bl				; VBL?
+	jnz	@@done				; Yep, we're done
+	test al,bh				; No. Display enabled?
+	jz	@@waityes			; Yes, keep checking
 @@waitenable:
-	in		al,dx				; No, wait for Display not enabled or VBL
-	test 	al,bl				; VBL?
-	jnz	@@done			; Yep, done
-	test 	al,bh				; No. Display enabled?
-	jnz	@@waitenable	; No, keep waiting
+	in	al,dx				; No, wait for Display not enabled or VBL
+	test al,bl				; VBL?
+	jnz	@@done				; Yep, done
+	test al,bh				; No. Display enabled?
+	jnz	@@waitenable		; No, keep waiting
 	dec	cx					; DE toggled state - decrement line abort count
-	jnz	@@waityes		; If 0, we missed the VBL, so drop out,
-								; otherwise, go back to waiting for the VBL
+	jnz	@@waityes			; If 0, we missed the VBL, so drop out,
+							; otherwise, go back to waiting for the VBL
+
 @@done:
 	dec	[num]				; wait multiple VBLs?
 	jnz	@@wait
@@ -64,11 +66,14 @@
 
 	ENDP
 
-ELSE
+ELSE ;GAMEVER_RESTORATION
+
+;===========================================================================
+
 
 ;==============
 ;
-; VL_WaitVBL
+; VL_WaitVBL			******** NEW *********
 ;
 ; Wait for the vertical retrace (returns before the actual vertical sync)
 ;
@@ -78,95 +83,35 @@
 PUBLIC	VL_WaitVBL
 @@wait:
 
-	mov	cx,[TimeCount]		; if timecount goes up by two, the retrace
-	add	cx,2				; period was missed (an interrupt covered it)
-
 	mov	dx,STATUS_REGISTER_1
 
+	mov	cx,[num]
 ;
 ; wait for a display signal to make sure the raster isn't in the middle
 ; of a sync
 ;
-@@waitdisplay:
-	in	al,dx
-	test	al,1	;1 = display is disabled (HBL / VBL)
-	jnz	@@waitdisplay
-
-
-@@loop:
-	sti
-	jmp	$+2
-	cli
-
-	cmp	[timecount],cx		; will only happen if an interrupt is
-	jae	@@done				; straddling the entire retrace period
-
-;
-; when several succesive display not enableds occur,
-; the bottom of the screen has been hit
-;
-
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
-
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
-
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
-
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
-
+@@waitnosync:
 	in	al,dx
 	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
+	jnz	@@waitnosync
 
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
 
+@@waitsync:
 	in	al,dx
 	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
+	jz	@@waitsync
 
-	in	al,dx
-	test	al,8
-	jnz	@@waitdisplay
-	test	al,1
-	jz	@@loop
-
-@@done:
-	dec	[num]				; wait multiple VBLs?
-	jnz	@@wait
-
-	sti
+	loop	@@waitnosync
 
 	ret
 
 ENDP
 
-ENDIF
+
 ;===========================================================================
 
+ENDIF ; GAMEVER_RESTORATION
+
 ;==============
 ;
 ; VL_SetCRTC
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL.C bstone/ID_VL.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL.C	1994-07-29 11:32:26.000000000 +0300
+++ bstone/ID_VL.C	2015-06-27 14:35:54.714819400 +0300
@@ -862,6 +862,8 @@
 	}
 }
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 //==========================================================================
 
 //------------------------------------------------------------------------
@@ -934,6 +936,7 @@
 		}
 	}
 }
+#endif // VERSIONS RESTORATION
 
 
 //==========================================================================
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL.H bstone/ID_VL.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/ID_VL.H	1994-07-12 15:26:52.000000000 +0300
+++ bstone/ID_VL.H	2015-06-27 14:35:54.717279200 +0300
@@ -153,8 +153,11 @@
 void VL_MemToLatch (byte far *source, int width, int height, unsigned dest);
 void VL_ScreenToScreen (unsigned source, unsigned dest,int width, int height);
 void VL_MemToScreen (byte far *source, int width, int height, int x, int y);
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 void VL_MaskMemToScreen (byte far *source, int width, int height, int x, int y, byte mask);
 void VL_ScreenToMem(byte far *dest, int width, int height, int x, int y);
+#endif
 
 void VL_DrawTile8String (char *str, char far *tile8ptr, int printx, int printy);
 void VL_DrawLatch8String (char *str, unsigned tile8ptr, int printx, int printy);
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/JM_FREE.C bstone/JM_FREE.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/JM_FREE.C	1994-08-23 16:24:28.000000000 +0300
+++ bstone/JM_FREE.C	2015-06-27 14:35:54.727607100 +0300
@@ -12,8 +12,14 @@
 
 #include "3d_def.h"
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define SKIP_CHECKSUMS					(false)
+#define SHOW_CHECKSUM					(false)
+#else
 #define SKIP_CHECKSUMS					(true)
 #define SHOW_CHECKSUM					(false)
+#endif
 
 #if GAME_VERSION == SHAREWARE_VERSION
 
@@ -65,7 +71,12 @@
 #endif
 
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+char    far * far JHParmStrings[] = {"no386",nil};
+#else
 char    far * far JHParmStrings[] = {"no386","is386",nil};
+#endif
 
 char far show_text1[]="\n     SYSTEM INFO\n";
 char far show_text2[]="=======================\n\n";
@@ -75,6 +86,8 @@
 
 static	char far * far ParmStrings[] = {"HIDDENCARD",""};
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Re-enable commented out entries for AOG
 static  byte far wolfdigimap[] =
 {
 			// These first sounds are in the upload version
@@ -122,6 +135,9 @@
 
 			ELECTSHOTSND,                 27,
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Also filter these for shareware releases
+#if (GAME_VERSION != SHAREWARE_VERSION)
 			DOGBOYHALTSND,                14,
 			DOGBOYDEATHSND,               21,
 			ELECARCDAMAGESND,             25,
@@ -147,10 +163,14 @@
 			LCANHALTSND,                  36,
 			LCANDEATHSND,                 37,
 
-//			RENTDEATH3SND,		            38,		// Rent-A-Cop Death #3
+#ifdef GAMEVER_RESTORATION_AOG
+			RENTDEATH3SND,		            38,		// Rent-A-Cop Death #3
+#endif
 			INFORMDEATH3SND,              40,		// Informant Death #3
-//			PRODEATH3SND,                 43,      // PRO Death #3
-//			SWATDEATH3SND,						52,		// Swat Guard #3
+#ifdef GAMEVER_RESTORATION_AOG
+			PRODEATH3SND,                 43,      // PRO Death #3
+			SWATDEATH3SND,						52,		// Swat Guard #3
+#endif
 			SCIDEATH3SND,						54,		// Gen. Sci Death #3
 
 			LCANBREAKSND,                 44,
@@ -158,6 +178,7 @@
 			CLAWATTACKSND,						56,
 			SPITATTACKSND,						55,
 			PUNCHATTACKSND,					57,
+#endif // VERSIONS RESTORATION
 
 			LASTSOUND
 };
@@ -255,7 +276,12 @@
 #endif
 
 char far cinfo_text[]=	"\n"
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+								"BLAKE STONE: Aliens of Gold\n"
+#else
 								"Planet Strike\n"
+#endif
 								"Copyright (c) 1993 - JAM Productions, Inc.\n"
 								"All rights reserved.\n";
 
@@ -1290,6 +1316,7 @@
 
 // --------------------- Other general functions ------------------------
 
+
 /*
 ====================
 =
@@ -1306,7 +1333,12 @@
 	SDSMode         sds;
 
 	boolean config_found=false;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	long flags=gamestate.flags;
+#else
 	unsigned flags=gamestate.flags;
+#endif
 	MakeDestPath(configname);
 
 	if ( (file = open(tempPath,O_BINARY | O_RDONLY)) != -1)
@@ -1335,12 +1367,21 @@
 		read(file,&mouseadjustment,sizeof(mouseadjustment));
 
 		read(file,&flags,sizeof(flags));		// Use temp so we don't destroy pre-sets.
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		flags &= GS_HEARTB_SOUND|GS_ATTACK_INFOAREA|GS_LIGHTING|GS_DRAW_CEILING|GS_DRAW_FLOOR|GS_TAB_ROTATED_MAP;			 	// Mask out the useful flags!
+		if (IsA386 == false)
+			flags &= ~(GS_DRAW_CEILING|GS_DRAW_FLOOR);
+#else
 		flags &= GS_HEARTB_SOUND|GS_ATTACK_INFOAREA|GS_LIGHTING|GS_DRAW_CEILING|GS_DRAW_FLOOR;			 	// Mask out the useful flags!
+#endif
 
 		gamestate.flags |= flags;				// Must "OR", some flags are already set.
 		close(file);
 
-#if 0
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
 #ifdef CEILING_FLOOR_COLORS
 		if (gamestate.flags & GS_DRAW_FLOOR)
 		{
@@ -1406,18 +1447,31 @@
 
 		viewsize = 17;
 		mouseadjustment=5;
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		gamestate.flags |= GS_HEARTB_SOUND|GS_ATTACK_INFOAREA|GS_TAB_ROTATED_MAP;
+#else
 		gamestate.flags |= GS_HEARTB_SOUND|GS_ATTACK_INFOAREA;
+#endif
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (IsA386)
+		{
+#endif
 #ifdef CEILING_FLOOR_COLORS
-		gamestate.flags |= GS_DRAW_CEILING|GS_DRAW_FLOOR|GS_LIGHTING;
+			gamestate.flags |= GS_DRAW_CEILING|GS_DRAW_FLOOR|GS_LIGHTING;
 #else
-		gamestate.flags |= GS_LIGHTING;
+			gamestate.flags |= GS_LIGHTING;
 #endif
 
-#if 0
-		PM_Shutdown();
-		PM_Startup ();
-		PM_UnlockMainMem ();
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+//#if 0
+			PM_Shutdown();
+			PM_Startup ();
+			PM_UnlockMainMem ();
+		}
 #endif
 	}
 
@@ -1445,6 +1499,14 @@
 	int     i;
 
 	for (i = 1;i < _argc;i++)
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (!US_CheckParm(_argv[i],JHParmStrings))
+		{
+			IsA386 = false;
+			return;
+		}
+#else
 		switch (US_CheckParm(_argv[i],JHParmStrings))
       {
       	case 0:
@@ -1455,6 +1517,7 @@
          	IsA386 = true;
          return;
 		}
+#endif
 
 	if (CheckIs386())
 	{
@@ -1513,6 +1576,8 @@
 extern CP_itemtype far NewEmenu[];
 extern int EpisodeSelect[];
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 
 //-------------------------------------------------------------------------
 // CheckForEpisodes() - CHECK FOR VERSION/EXTESION
@@ -1555,8 +1620,9 @@
 #endif
 }
 
+#else
+//#if 0
 
-#if 0
 //
 // ORGINAL used in Aliens of Gold
 //
@@ -1654,7 +1720,7 @@
 	ShadowsAvail = (!findfirst(AltPageFileName,&f,FA_ARCH));
 #endif
 }
-#endif
+#endif // RESTORATION: AOG / PS
 
 
 extern char far * far MainStrs[];
@@ -1731,7 +1797,9 @@
 
 	if (!(gamestate.flags & GS_NOWAIT))
 	{
-#if (0)				// GAME_VERSION != SHAREWARE_VERSION
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#if (defined GAMEVER_RESTORATION_AOG) && (GAME_VERSION != SHAREWARE_VERSION)
+//#if (0)				// GAME_VERSION != SHAREWARE_VERSION
 //---------------------
 // Anti-piracy screen
 //---------------------
@@ -1746,7 +1814,10 @@
 		VL_SetPaletteIntensity(0,255,grsegs[PIRACYPALETTE],0);
 		VW_UpdateScreen();
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		VL_FadeOut (0, 255, 0, 0, 25, 20);
+#endif
 		VL_FadeIn(0,255,grsegs[PIRACYPALETTE],30);
 
 	// Wait a little
@@ -1757,7 +1828,10 @@
 	//
 		UNCACHEGRCHUNK(PIRACYPALETTE);
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		VL_FadeOut (0, 255, 0, 0, 25, 20);
+#endif
 		VW_FadeOut();
 
 	// Cleanup screen for upcoming SetPalette call
@@ -1789,7 +1863,10 @@
 		VL_SetPalette (0,256,grsegs[APOGEEPALETTE]);
 		VL_SetPaletteIntensity(0,255,grsegs[APOGEEPALETTE],0);
 		VW_UpdateScreen();
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		VL_FadeOut (0, 255, 25, 29, 53, 20);
+#endif
 		VL_FadeIn(0,255,grsegs[APOGEEPALETTE],30);
 
 	// Wait for end of fanfare
@@ -1811,7 +1888,10 @@
 
       // Do A Blue Flash!
 
+      /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       VL_FadeOut (0, 255, 25, 29, 53, 20);
+#endif
       VL_FadeOut (0, 255, 0, 	0,  0,  30);
 
 //---------------------
@@ -1824,7 +1904,12 @@
 
 	// Show JAM logo
 	//
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		if (!DoMovie(mv_intro))
+#else
 		if (!DoMovie(mv_intro,0))
+#endif
 			MAIN_ERROR(PREDEMO_NOJAM);
 
 		if (PowerBall)
@@ -1866,7 +1951,10 @@
 
       // Do A Red Flash!
 
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
       VL_FadeOut (0, 255, 39, 0, 0, 20);
+#endif
 		VW_FadeOut();
 	}
 }
@@ -2067,7 +2155,10 @@
 
 // Setup for APOGEECD thingie.
 //
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	InitDestPath();
+#endif
 
 // Make sure there's room to play the game
 //
@@ -2107,7 +2198,7 @@
 				printf("\n"
 						 "     Version: %s\n"
 						 "COMPILE DATE: %s\n\n",
-						 __VERSION__,__DATE__);
+						 __VERSION__,GAMEVER_RESTORATION_DATE);
 				exit(0);
 			break;
 
@@ -2176,8 +2267,11 @@
 
 	InitGame ();
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	if (!IsA386)
 		Quit(NULL);
+#endif
 
 	bufferofs=SCREENSIZE;
 
@@ -2338,6 +2432,19 @@
 #endif
 
 
+
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+// Relocated code from 3D_MAIN.C to a separate file, since this is a part of
+// JM_FREE.C in AOG v2.0/3.0, rather than 3D_MAIN.C as in PS.
+// However, we defined MAX_DEST_PATH_LEN here since it is already defined
+// in 3D_MAIN.C earlier as of PS.
+#ifdef GAMEVER_RESTORATION_AOG
+#define MAX_DEST_PATH_LEN	30
+#include "3D_IDSTP.C"
+#endif
+
+
+
 #if FREE_FUNCTIONS
 
 // This function is used as a label for the end of the
@@ -2347,4 +2454,4 @@
 {
 }
 
-#endif
\ No newline at end of file
+#endif
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/JM_TP.C bstone/JM_TP.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/JM_TP.C	1994-07-12 15:26:52.000000000 +0300
+++ bstone/JM_TP.C	2015-06-27 14:35:54.734811000 +0300
@@ -163,7 +163,12 @@
 
 		{SHUTTLEEXPPIC,pis_pic},   				// 51 - Shuttle Explode
 		{PLANETSPIC,pis_pic},    					// 52 - Planets Pic
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		{SPR_VITAL_STAND,pis_scaled},						// 53 - Vital Defence Obj
+#else
 		{SPR_CUBE1,pis_scaled},						// 53 - Rotating Cube
+#endif
 
 		{H_PPIC,pis_pic},                      // 54 - M key
 		{MOUSEPIC,pis_pic}, 		               // 55 - Mouse Pad			
@@ -254,7 +259,12 @@
 		{SPR_FSCOUT_W3_8,pis_scaled}, 		  	// 120 - Floating Bomb - moving
 		{SPR_FSCOUT_W4_8,pis_scaled},      		// 121 - Floating Bomb - moving
 
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+		{SPR_VITAL_STAND,pis_scaled},						// 122
+#else
 		{SPR_CUBE1,pis_scaled},      				// 122 - ** OPEN **
+#endif
 
 		{SPR_ELEC_SHOT1,pis_scaled},    		  	// 123 - Electro Aln Shot - floating
 		{SPR_ELEC_SHOT2,pis_scaled},      		// 124 - Electro Aln Shot - floating
@@ -365,6 +375,8 @@
 		{FAXPIC, pis_pic},    		           	// 213 - Fax Machine
 		{H_LPIC, pis_pic},							// 214 - L key
 		{H_SHIFTPIC, pis_pic},						// 215 - Shift key
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 		{SPR_DOORBOMB,pis_scaled},					// 216 - DoorBomb
 		{SPR_AUTOMAPPER,pis_scaled},				// 217 - Radar Powerup.
 		{STARPORTPIC,pis_pic},						// 218 - Star Port
@@ -437,6 +449,13 @@
 		{SPR_BOSS10_W2,pis_scaled},				// 281 - Final Boss 4 Walking
 		{SPR_BOSS10_W3,pis_scaled},				// 282 - Final Boss 4 Walking
 		{SPR_BOSS10_W4,pis_scaled},				// 283 - Final Boss 4 Walking
+#endif
+		/*** BLAKE STONE: ALIENS OF GOLD V3.00 RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG_300
+		{PSPROMO1PIC,pis_pic},
+		{PSPROMO2PIC,pis_pic},
+		{PSPROMO3PIC,pis_pic},
+#endif
 };
 
 // anim table holds info about each different animation.
@@ -450,9 +469,16 @@
 
 	{20,0,4,0,20,pia_shapetable,pid_cycle},		// 4 -	rentacopobj,
 	{24,0,8,0,20,pia_shapetable,pid_cycle},		// 5 -	hang_terrotobj,
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	{32,0,8,0,20,pia_shapetable,pid_cycle},	// 6
+	{40,0,8,0,20,pia_shapetable,pid_cycle},	// 7
+	{48,0,8,0,20,pia_shapetable,pid_cycle},	// 8
+#else
 	{242,0,8,0,20,pia_shapetable,pid_rebound},	// 6 -   VPost
 	{250,0,8,0,20,pia_shapetable,pid_rebound},	// 7 - 	VSpike
 	{258,0,10,0,10,pia_shapetable,pid_cycle},		// 8 -   Security Cube
+#endif
 	{56,0,4,0,20,pia_shapetable,pid_cycle},		// 9 -	gen_scientistobj,
 	{60,0,4,0,20,pia_shapetable,pid_cycle},		// 10 -	podobj,
 	{64,0,4,0,20,pia_shapetable,pid_cycle},		// 11 -	electroobj,
@@ -490,12 +516,15 @@
 	{208,0,8,0,10,pia_grabscript,pid_cycle},		// 38 -  VMT
 	{209,0,8,0,8,pia_grabscript,pid_cycle},		// 39 -  PerScan
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	{232,0,4,0,20,pia_shapetable,pid_cycle},		// 40 - Dr. Goldstern Morph Walking
 
    {268,0,4,0,20,pia_shapetable,pid_cycle},		// 41 - Final Boss #1 - Walking
 	{272,0,4,0,20,pia_shapetable,pid_cycle},		// 42 - Final Boss #2 - Walking
 	{276,0,4,0,20,pia_shapetable,pid_cycle},		// 43 - Final Boss #3 - Walking
 	{280,0,4,0,20,pia_shapetable,pid_cycle},		// 44 - Final Boss #4 - Walking
+#endif
 
 };
 
@@ -1028,7 +1057,10 @@
 					break;
 				}
 
+				/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 				anim->diradd=1;
+#endif
 
 //				spr = &spritetable[shape->shapenum-STARTSPRITES];
 
@@ -1555,7 +1587,12 @@
 			TP_CacheIn(ct_scaled,0);
 			if (flags & fl_clearscback)
 				VWB_Bar(x,y,64,64,bgcolor);
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			MegaSimpleScaleShape(x+32,y+32,shapenum,64);
+#else
 			MegaSimpleScaleShape(x+32,y+32,shapenum,64,0);
+#endif
 		break;
 
 #if NUMPICS
@@ -1611,6 +1648,12 @@
 		if (anim->delay >= anim->maxdelay)
 		{
 			anim->delay = 0;
+			/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+			anim->frame++;
+			if (anim->frame == anim->maxframes)
+				anim->frame = 0;
+#else
 			anim->frame += anim->diradd;
 			if ((anim->frame == anim->maxframes) || (anim->frame < 0))
 			{
@@ -1626,6 +1669,7 @@
 					break;
 				}
 			}
+#endif
 
 			switch (anim->animtype)
 			{
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/JM_TP.H bstone/JM_TP.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/JM_TP.H	1994-08-23 12:34:18.000000000 +0300
+++ bstone/JM_TP.H	2015-06-27 14:35:54.735871900 +0300
@@ -19,7 +19,12 @@
 #define TP_CNVT_CODE(c1,c2)	((c1)|(c2<<8))
 
 #define TP_MAX_ANIMS 10
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+#define TP_MAX_PAGES	40
+#else
 #define TP_MAX_PAGES	41
+#endif
 
 #define TP_MARGIN	1			// distance between xl/xh/yl/yh points and text
 
@@ -114,15 +119,26 @@
 } pidType;
 
 typedef struct {
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	byte baseshape;
+#else
 	short baseshape;
+#endif
 	char frame;
 	char maxframes;
 	short delay;
 	short maxdelay;
 	piaType animtype;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	pidType dirtype;
+#endif
 	short x,y;
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 	char diradd;
+#endif
 } piAnimInfo;
 
 //-------------------------------------------------------------------------
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/MOVIE.C bstone/MOVIE.C
--- /home/ny00123/Games/blake_stone/BSPS_SRC/MOVIE.C	1994-07-29 11:32:32.000000000 +0300
+++ bstone/MOVIE.C	2015-06-27 14:35:54.742315500 +0300
@@ -86,7 +86,10 @@
 long seek_pos;
 char movie_reps;
 ControlInfo ci;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
 memptr movie_palette;
+#endif
 
 
 //
@@ -98,8 +101,16 @@
 
 MovieStuff_t Movies[] =
 {
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+	{{"SANIM."},1,3,0,0,200},				//mv_ending1
+	{{"GANIM."},1,7,0,0,200},				//mv_ending2
+	{{"IANIM."},1,3,0,0,200},				//mv_intro
+	{{"EANIM."},1,6,0,0,200},				//mv_final
+#else
 	{{"IANIM."},1,3,0,0,200},				//mv_intro
 	{{"EANIM."},1,30,0,0,200},				//mv_final
+#endif
 };
 
 
@@ -145,7 +156,10 @@
 	EverFaded = false;
 	IN_ClearKeysDown();
 
+	/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    movie_palette = MovieStuff->palette;
+#endif	
 	JM_VGALinearFill(screenloc[0],3*80*208,0);
 
 	VL_FillPalette (0,0,0);
@@ -438,7 +452,12 @@
       //-------------------------------------------
 
 	 	case AN_FADE_IN_FRAME:				// Fade In Page
+		/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifdef GAMEVER_RESTORATION_AOG
+        	VW_FadeIn();
+#else
         	VL_FadeIn(0,255,MK_FP(movie_palette,0),30);
+#endif
 			fade_flags = FADE_NONE;
          EverFaded = true;
 			screenfaded = false;
@@ -495,6 +514,9 @@
 				VL_LatchToScreen(displayofs+ylookup[MovieStuff->start_line], 320>>2, MovieStuff->end_line-MovieStuff->start_line, 0, MovieStuff->start_line);
 
          MOVIE_ShowFrame(frame);
+#ifdef GAMEVER_RESTORATION_AOG
+         CycleColors();
+#endif
 
 #if 0  
          if (movie_flag == MV_READ)
@@ -505,6 +527,8 @@
 #endif 
    		FlipPages();
 
+         /*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+
          if (TimeCount < MovieStuff->ticdelay)
          {
 	         wait_time = MovieStuff->ticdelay - TimeCount;
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/MOVIE.H bstone/MOVIE.H
--- /home/ny00123/Games/blake_stone/BSPS_SRC/MOVIE.H	1994-07-12 15:26:52.000000000 +0300
+++ bstone/MOVIE.H	2015-06-27 14:35:54.743254700 +0300
@@ -48,7 +48,10 @@
 
 	short start_line;
 	short end_line;
+/*** BLAKE STONE: ALIENS OF GOLD RESTORATION ***/
+#ifndef GAMEVER_RESTORATION_AOG
    memptr palette;
+#endif
 
 } MovieStuff_t;
 
@@ -74,4 +77,4 @@
 void SetupMovie(MovieStuff_t *MovieStuff);
 void ShutdownMovie(void);
 
-#endif
\ No newline at end of file
+#endif
diff -Nur /home/ny00123/Games/blake_stone/BSPS_SRC/SCALE.ASM bstone/SCALE.ASM
--- /home/ny00123/Games/blake_stone/BSPS_SRC/SCALE.ASM	1994-07-12 15:26:52.000000000 +0300
+++ bstone/SCALE.ASM	2015-06-27 14:35:54.748589600 +0300
@@ -2,6 +2,9 @@
 IDEAL
 MODEL MEDIUM,C
 
+; *** BLAKE STONE: ALIENS OF GOLD RESTORATION ***
+INCLUDE 'GAMEVER.EQU'
+
 SCREENWIDTH = 80
 
 DATASEG
@@ -57,7 +60,9 @@
 ENDP R_DrawColumn
 
 
+; *** BLAKE STONE: ALIENS OF GOLD RESTORATION ***
 
+IFNDEF GAMEVER_RESTORATION_AOG
 
 ;================
 ;
@@ -104,6 +109,8 @@
 
 ENDP R_DrawSLSColumn
 
+ENDIF ;RESTORATION
+
 
 
 ;================
